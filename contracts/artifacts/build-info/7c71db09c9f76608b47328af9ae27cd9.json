{
	"id": "7c71db09c9f76608b47328af9ae27cd9",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.24",
	"solcLongVersion": "0.8.24+commit.e11b9ed9",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/AaveGhoster.sol": {
				"content": "//SPDX-License-Identifier: UNLICENSED\r\npragma solidity ^0.8.0;\r\n\r\nimport \"./ERC404.sol\";\r\nimport \"@openzeppelin/contracts/utils/Strings.sol\";\r\n\r\ncontract AaveGhoster is ERC404 {\r\n    string public dataURI;\r\n    string public baseTokenURI;\r\n\r\n    constructor(\r\n        address _owner\r\n    ) ERC404(\"AaveGhoster\", \"AAVEGHOSTER\", 18, 15000, _owner) {\r\n        balanceOf[_owner] = 15000 * 10 ** 18;\r\n    }\r\n\r\n    function setDataURI(string memory _dataURI) public onlyOwner {\r\n        dataURI = _dataURI;\r\n    }\r\n\r\n    function setTokenURI(string memory _tokenURI) public onlyOwner {\r\n        baseTokenURI = _tokenURI;\r\n    }\r\n\r\n    function setNameSymbol(\r\n        string memory _name,\r\n        string memory _symbol\r\n    ) public onlyOwner {\r\n        _setNameSymbol(_name, _symbol);\r\n    }\r\n\r\n    function tokenURI(uint256 id) public view override returns (string memory) {\r\n        if (bytes(baseTokenURI).length > 0) {\r\n            return string.concat(baseTokenURI, Strings.toString(id));\r\n        } else {\r\n            uint8 seed = uint8(bytes1(keccak256(abi.encodePacked(id))));\r\n            string memory image;\r\n            string memory color;\r\n\r\n            if (seed <= 100) {\r\n                image = \"1.png\";\r\n                color = \"Green\";\r\n            } else if (seed <= 160) {\r\n                image = \"2.png\";\r\n                color = \"Blue\";\r\n            } else if (seed <= 210) {\r\n                image = \"3.png\";\r\n                color = \"Purple\";\r\n            } else if (seed <= 240) {\r\n                image = \"4.png\";\r\n                color = \"Orange\";\r\n            } else if (seed <= 255) {\r\n                image = \"5.png\";\r\n                color = \"Red\";\r\n            }else if (seed <= 300) {\r\n                image = \"6.png\";\r\n                color = \"White\";\r\n            }else if (seed <= 360) {\r\n                image = \"7.png\";\r\n                color = \"Black\";\r\n            }else if (seed <= 410) {\r\n                image = \"8.png\";\r\n                color = \"Pink\";\r\n            }else if (seed <= 450) {\r\n                image = \"9.png\";\r\n                color = \"Yellow\";\r\n            }else if (seed <= 510) {\r\n                image = \"10.png\";\r\n                color = \"Violet\";\r\n            }\r\n            \r\n\r\n            string memory jsonPreImage = string.concat(\r\n                string.concat(\r\n                    string.concat('{\"name\": \"AaveGhoster #', Strings.toString(id)),\r\n                    '\",\"description\":\"A collection of 15,000 AaveGhoster enabled by ERC404, an experimental token standard inspired by Pandora\",\"external_url\":\"https://aaveghoster.online\",\"image\":\"'\r\n                ),\r\n                string.concat(dataURI, image)\r\n            );\r\n            string memory jsonPostImage = string.concat(\r\n                '\",\"attributes\":[{\"trait_type\":\"Color\",\"value\":\"',\r\n                color\r\n            );\r\n            string memory jsonPostTraits = '\"}]}';\r\n\r\n            return\r\n                string.concat(\r\n                    \"data:application/json;utf8,\",\r\n                    string.concat(\r\n                        string.concat(jsonPreImage, jsonPostImage),\r\n                        jsonPostTraits\r\n                    )\r\n                );\r\n        }\r\n    }\r\n}"
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Strings.sol)\n\npragma solidity ^0.8.20;\n\nimport {Math} from \"./math/Math.sol\";\nimport {SignedMath} from \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant HEX_DIGITS = \"0123456789abcdef\";\n    uint8 private constant ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev The `value` string doesn't fit in the specified `length`.\n     */\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toStringSigned(int256 value) internal pure returns (string memory) {\n        return string.concat(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value)));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        uint256 localValue = value;\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\n            localValue >>= 4;\n        }\n        if (localValue != 0) {\n            revert StringsInsufficientHexLength(value, length);\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n     * representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n}"
			},
			"contracts/ERC404.sol": {
				"content": "//SPDX-License-Identifier: UNLICENSED\r\npragma solidity ^0.8.0;\r\n\r\nabstract contract Ownable {\r\n    event OwnershipTransferred(address indexed user, address indexed newOwner);\r\n\r\n    error Unauthorized();\r\n    error InvalidOwner();\r\n\r\n    address public owner;\r\n\r\n    modifier onlyOwner() virtual {\r\n        if (msg.sender != owner) revert Unauthorized();\r\n\r\n        _;\r\n    }\r\n\r\n    constructor(address _owner) {\r\n        if (_owner == address(0)) revert InvalidOwner();\r\n\r\n        owner = _owner;\r\n\r\n        emit OwnershipTransferred(address(0), _owner);\r\n    }\r\n\r\n    function transferOwnership(address _owner) public virtual onlyOwner {\r\n        if (_owner == address(0)) revert InvalidOwner();\r\n\r\n        owner = _owner;\r\n\r\n        emit OwnershipTransferred(msg.sender, _owner);\r\n    }\r\n\r\n    function revokeOwnership() public virtual onlyOwner {\r\n        owner = address(0);\r\n\r\n        emit OwnershipTransferred(msg.sender, address(0));\r\n    }\r\n}\r\n\r\nabstract contract ERC721Receiver {\r\n    function onERC721Received(\r\n        address,\r\n        address,\r\n        uint256,\r\n        bytes calldata\r\n    ) external virtual returns (bytes4) {\r\n        return ERC721Receiver.onERC721Received.selector;\r\n    }\r\n}\r\n\r\n/// @notice ERC404\r\n///         A gas-efficient, mixed ERC20 / ERC721 implementation\r\n///         with native liquidity and fractionalization.\r\n///\r\n///         This is an experimental standard designed to integrate\r\n///         with pre-existing ERC20 / ERC721 support as smoothly as\r\n///         possible.\r\n///\r\n/// @dev    In order to support full functionality of ERC20 and ERC721\r\n///         supply assumptions are made that slightly constraint usage.\r\n///         Ensure decimals are sufficiently large (standard 18 recommended)\r\n///         as ids are effectively encoded in the lowest range of amounts.\r\n///\r\n///         NFTs are spent on ERC20 functions in a FILO queue, this is by\r\n///         design.\r\n///\r\nabstract contract ERC404 is Ownable {\r\n    // Events\r\n    event ERC20Transfer(\r\n        address indexed from,\r\n        address indexed to,\r\n        uint256 amount\r\n    );\r\n    event Approval(\r\n        address indexed owner,\r\n        address indexed spender,\r\n        uint256 amount\r\n    );\r\n    event Transfer(\r\n        address indexed from,\r\n        address indexed to,\r\n        uint256 indexed id\r\n    );\r\n    event ERC721Approval(\r\n        address indexed owner,\r\n        address indexed spender,\r\n        uint256 indexed id\r\n    );\r\n    event ApprovalForAll(\r\n        address indexed owner,\r\n        address indexed operator,\r\n        bool approved\r\n    );\r\n\r\n    // Errors\r\n    error NotFound();\r\n    error AlreadyExists();\r\n    error InvalidRecipient();\r\n    error InvalidSender();\r\n    error UnsafeRecipient();\r\n\r\n    // Metadata\r\n    /// @dev Token name\r\n    string public name;\r\n\r\n    /// @dev Token symbol\r\n    string public symbol;\r\n\r\n    /// @dev Decimals for fractional representation\r\n    uint8 public immutable decimals;\r\n\r\n    /// @dev Total supply in fractionalized representation\r\n    uint256 public immutable totalSupply;\r\n\r\n    /// @dev Current mint counter, monotonically increasing to ensure accurate ownership\r\n    uint256 public minted;\r\n\r\n    // Mappings\r\n    /// @dev Balance of user in fractional representation\r\n    mapping(address => uint256) public balanceOf;\r\n\r\n    /// @dev Allowance of user in fractional representation\r\n    mapping(address => mapping(address => uint256)) public allowance;\r\n\r\n    /// @dev Approval in native representaion\r\n    mapping(uint256 => address) public getApproved;\r\n\r\n    /// @dev Approval for all in native representation\r\n    mapping(address => mapping(address => bool)) public isApprovedForAll;\r\n\r\n    /// @dev Owner of id in native representation\r\n    mapping(uint256 => address) internal _ownerOf;\r\n\r\n    /// @dev Array of owned ids in native representation\r\n    mapping(address => uint256[]) internal _owned;\r\n\r\n    /// @dev Tracks indices for the _owned mapping\r\n    mapping(uint256 => uint256) internal _ownedIndex;\r\n\r\n    /// @dev Addresses whitelisted from minting / burning for gas savings (pairs, routers, etc)\r\n    mapping(address => bool) public whitelist;\r\n\r\n    // Constructor\r\n    constructor(\r\n        string memory _name,\r\n        string memory _symbol,\r\n        uint8 _decimals,\r\n        uint256 _totalNativeSupply,\r\n        address _owner\r\n    ) Ownable(_owner) {\r\n        name = _name;\r\n        symbol = _symbol;\r\n        decimals = _decimals;\r\n        totalSupply = _totalNativeSupply * (10 ** decimals);\r\n    }\r\n\r\n    /// @notice Initialization function to set pairs / etc\r\n    ///         saving gas by avoiding mint / burn on unnecessary targets\r\n    function setWhitelist(address target, bool state) public onlyOwner {\r\n        whitelist[target] = state;\r\n    }\r\n\r\n    /// @notice Function to find owner of a given native token\r\n    function ownerOf(uint256 id) public view virtual returns (address owner) {\r\n        owner = _ownerOf[id];\r\n\r\n        if (owner == address(0)) {\r\n            revert NotFound();\r\n        }\r\n    }\r\n\r\n    /// @notice tokenURI must be implemented by child contract\r\n    function tokenURI(uint256 id) public view virtual returns (string memory);\r\n\r\n    /// @notice Function for token approvals\r\n    /// @dev This function assumes id / native if amount less than or equal to current max id\r\n    function approve(\r\n        address spender,\r\n        uint256 amountOrId\r\n    ) public virtual returns (bool) {\r\n        if (amountOrId <= minted && amountOrId > 0) {\r\n            address owner = _ownerOf[amountOrId];\r\n\r\n            if (msg.sender != owner && !isApprovedForAll[owner][msg.sender]) {\r\n                revert Unauthorized();\r\n            }\r\n\r\n            getApproved[amountOrId] = spender;\r\n\r\n            emit Approval(owner, spender, amountOrId);\r\n        } else {\r\n            allowance[msg.sender][spender] = amountOrId;\r\n\r\n            emit Approval(msg.sender, spender, amountOrId);\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    /// @notice Function native approvals\r\n    function setApprovalForAll(address operator, bool approved) public virtual {\r\n        isApprovedForAll[msg.sender][operator] = approved;\r\n\r\n        emit ApprovalForAll(msg.sender, operator, approved);\r\n    }\r\n\r\n    /// @notice Function for mixed transfers\r\n    /// @dev This function assumes id / native if amount less than or equal to current max id\r\n    function transferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 amountOrId\r\n    ) public virtual {\r\n        if (amountOrId <= minted) {\r\n            if (from != _ownerOf[amountOrId]) {\r\n                revert InvalidSender();\r\n            }\r\n\r\n            if (to == address(0)) {\r\n                revert InvalidRecipient();\r\n            }\r\n\r\n            if (\r\n                msg.sender != from &&\r\n                !isApprovedForAll[from][msg.sender] &&\r\n                msg.sender != getApproved[amountOrId]\r\n            ) {\r\n                revert Unauthorized();\r\n            }\r\n\r\n            balanceOf[from] -= _getUnit();\r\n\r\n            unchecked {\r\n                balanceOf[to] += _getUnit();\r\n            }\r\n\r\n            _ownerOf[amountOrId] = to;\r\n            delete getApproved[amountOrId];\r\n\r\n            // update _owned for sender\r\n            uint256 updatedId = _owned[from][_owned[from].length - 1];\r\n            _owned[from][_ownedIndex[amountOrId]] = updatedId;\r\n            // pop\r\n            _owned[from].pop();\r\n            // update index for the moved id\r\n            _ownedIndex[updatedId] = _ownedIndex[amountOrId];\r\n            // push token to to owned\r\n            _owned[to].push(amountOrId);\r\n            // update index for to owned\r\n            _ownedIndex[amountOrId] = _owned[to].length - 1;\r\n\r\n            emit Transfer(from, to, amountOrId);\r\n            emit ERC20Transfer(from, to, _getUnit());\r\n        } else {\r\n            uint256 allowed = allowance[from][msg.sender];\r\n\r\n            if (allowed != type(uint256).max)\r\n                allowance[from][msg.sender] = allowed - amountOrId;\r\n\r\n            _transfer(from, to, amountOrId);\r\n        }\r\n    }\r\n\r\n    /// @notice Function for fractional transfers\r\n    function transfer(\r\n        address to,\r\n        uint256 amount\r\n    ) public virtual returns (bool) {\r\n        return _transfer(msg.sender, to, amount);\r\n    }\r\n\r\n    /// @notice Function for native transfers with contract support\r\n    function safeTransferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 id\r\n    ) public virtual {\r\n        transferFrom(from, to, id);\r\n\r\n        if (\r\n            to.code.length != 0 &&\r\n            ERC721Receiver(to).onERC721Received(msg.sender, from, id, \"\") !=\r\n            ERC721Receiver.onERC721Received.selector\r\n        ) {\r\n            revert UnsafeRecipient();\r\n        }\r\n    }\r\n\r\n    /// @notice Function for native transfers with contract support and callback data\r\n    function safeTransferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 id,\r\n        bytes calldata data\r\n    ) public virtual {\r\n        transferFrom(from, to, id);\r\n\r\n        if (\r\n            to.code.length != 0 &&\r\n            ERC721Receiver(to).onERC721Received(msg.sender, from, id, data) !=\r\n            ERC721Receiver.onERC721Received.selector\r\n        ) {\r\n            revert UnsafeRecipient();\r\n        }\r\n    }\r\n\r\n    /// @notice Internal function for fractional transfers\r\n    function _transfer(\r\n        address from,\r\n        address to,\r\n        uint256 amount\r\n    ) internal returns (bool) {\r\n        uint256 unit = _getUnit();\r\n        uint256 balanceBeforeSender = balanceOf[from];\r\n        uint256 balanceBeforeReceiver = balanceOf[to];\r\n\r\n        balanceOf[from] -= amount;\r\n\r\n        unchecked {\r\n            balanceOf[to] += amount;\r\n        }\r\n\r\n        // Skip burn for certain addresses to save gas\r\n        if (!whitelist[from]) {\r\n            uint256 tokens_to_burn = (balanceBeforeSender / unit) -\r\n                (balanceOf[from] / unit);\r\n            for (uint256 i = 0; i < tokens_to_burn; i++) {\r\n                _burn(from);\r\n            }\r\n        }\r\n\r\n        // Skip minting for certain addresses to save gas\r\n        if (!whitelist[to]) {\r\n            uint256 tokens_to_mint = (balanceOf[to] / unit) -\r\n                (balanceBeforeReceiver / unit);\r\n            for (uint256 i = 0; i < tokens_to_mint; i++) {\r\n                _mint(to);\r\n            }\r\n        }\r\n\r\n        emit ERC20Transfer(from, to, amount);\r\n        return true;\r\n    }\r\n\r\n    // Internal utility logic\r\n    function _getUnit() internal view returns (uint256) {\r\n        return 10 ** decimals;\r\n    }\r\n\r\n    function _mint(address to) internal virtual {\r\n        if (to == address(0)) {\r\n            revert InvalidRecipient();\r\n        }\r\n\r\n        unchecked {\r\n            minted++;\r\n        }\r\n\r\n        uint256 id = minted;\r\n\r\n        if (_ownerOf[id] != address(0)) {\r\n            revert AlreadyExists();\r\n        }\r\n\r\n        _ownerOf[id] = to;\r\n        _owned[to].push(id);\r\n        _ownedIndex[id] = _owned[to].length - 1;\r\n\r\n        emit Transfer(address(0), to, id);\r\n    }\r\n\r\n    function _burn(address from) internal virtual {\r\n        if (from == address(0)) {\r\n            revert InvalidSender();\r\n        }\r\n\r\n        uint256 id = _owned[from][_owned[from].length - 1];\r\n        _owned[from].pop();\r\n        delete _ownedIndex[id];\r\n        delete _ownerOf[id];\r\n        delete getApproved[id];\r\n\r\n        emit Transfer(from, address(0), id);\r\n    }\r\n\r\n    function _setNameSymbol(\r\n        string memory _name,\r\n        string memory _symbol\r\n    ) internal {\r\n        name = _name;\r\n        symbol = _symbol;\r\n    }\r\n}"
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // must be unchecked in order to support `n = type(int256).min`\n            return uint256(n >= 0 ? n : -n);\n        }\n    }\n}"
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    /**\n     * @dev Muldiv operation overflow.\n     */\n    error MathOverflowedMulDiv();\n\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            return a / b;\n        }\n\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0 = x * y; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            if (denominator <= prod1) {\n                revert MathOverflowedMulDiv();\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (unsignedRoundsUp(rounding) && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (unsignedRoundsUp(rounding) && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": [],
			"evmVersion": "paris"
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/utils/Strings.sol": {
				"Strings": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "length",
									"type": "uint256"
								}
							],
							"name": "StringsInsufficientHexLength",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "String operations.",
						"errors": {
							"StringsInsufficientHexLength(uint256,uint256)": [
								{
									"details": "The `value` string doesn't fit in the specified `length`."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Strings.sol\":251:3098  library Strings {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":251:3098  library Strings {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212201cf53dea712d8483917c1fa190fcc58f08e8e76f6ce10d9860772f8f4991a41264736f6c63430008180033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201cf53dea712d8483917c1fa190fcc58f08e8e76f6ce10d9860772f8f4991a41264736f6c63430008180033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SHR CREATE2 RETURNDATASIZE 0xEA PUSH18 0x2D8483917C1FA190FCC58F08E8E76F6CE10D SWAP9 PUSH1 0x77 0x2F DUP16 BLOBHASH SWAP2 LOG4 SLT PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ",
							"sourceMap": "251:2847:0:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;251:2847:0;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201cf53dea712d8483917c1fa190fcc58f08e8e76f6ce10d9860772f8f4991a41264736f6c63430008180033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SHR CREATE2 RETURNDATASIZE 0xEA PUSH18 0x2D8483917C1FA190FCC58F08E8E76F6CE10D SWAP9 PUSH1 0x77 0x2F DUP16 BLOBHASH SWAP2 LOG4 SLT PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ",
							"sourceMap": "251:2847:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"equal(string memory,string memory)": "infinite",
								"toHexString(address)": "infinite",
								"toHexString(uint256)": "infinite",
								"toHexString(uint256,uint256)": "infinite",
								"toString(uint256)": "infinite",
								"toStringSigned(int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212201cf53dea712d8483917c1fa190fcc58f08e8e76f6ce10d9860772f8f4991a41264736f6c63430008180033",
									".code": [
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/AaveGhoster.sol",
								"contracts/ERC404.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"StringsInsufficientHexLength\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"String operations.\",\"errors\":{\"StringsInsufficientHexLength(uint256,uint256)\":[{\"details\":\"The `value` string doesn't fit in the specified `length`.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x67a2b2ae89fb58296365a5a812a632a6ee362535394a7b6031e12111b1f498e1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d371806a8c2d915e2b96b8ce9379e7ff8cab58abc822137332f8989f9e85e263\",\"dweb:/ipfs/QmSZRkuVNnGBAWcgjxNUXAhxj1ULGKL2YgAo2wWrJ2fNAo\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x3c2ebcf13322b0447982e0763851269e9df977261616b98c548aef656cde2cde\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://51a50f8345de0874e93ade40fd70cbad49a072e91079b75b4679bb831c84a037\",\"dweb:/ipfs/QmdGgSJzcPcPmjGuEhQt2avC54H81CBcckkSwSpeK5jXdd\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x8f869b2d076970ca6c502f4a5a31e89d410af3971c4871933a037ad055d6f13a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef0e29cd5bedfe971de1719c106a04423789e8343e29e88efbd00475bf53e8ed\",\"dweb:/ipfs/QmUs8ayyPBrGEuqe58GBpAoXvf3P8LwNSniR3xn6eLpQit\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"Math": {
					"abi": [
						{
							"inputs": [],
							"name": "MathOverflowedMulDiv",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard math utilities missing in the Solidity language.",
						"errors": {
							"MathOverflowedMulDiv()": [
								{
									"details": "Muldiv operation overflow."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/Math.sol\":203:15117  library Math {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":203:15117  library Math {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212208f18fe540c5500edc9b88abbe0eeb8a2e08eb2b2e78f997129505509f6daf89464736f6c63430008180033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212208f18fe540c5500edc9b88abbe0eeb8a2e08eb2b2e78f997129505509f6daf89464736f6c63430008180033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP16 XOR INVALID SLOAD 0xC SSTORE STOP 0xED 0xC9 0xB8 DUP11 0xBB 0xE0 0xEE 0xB8 LOG2 0xE0 DUP15 0xB2 0xB2 0xE7 DUP16 SWAP10 PUSH18 0x29505509F6DAF89464736F6C634300081800 CALLER ",
							"sourceMap": "203:14914:1:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;203:14914:1;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212208f18fe540c5500edc9b88abbe0eeb8a2e08eb2b2e78f997129505509f6daf89464736f6c63430008180033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP16 XOR INVALID SLOAD 0xC SSTORE STOP 0xED 0xC9 0xB8 DUP11 0xBB 0xE0 0xEE 0xB8 LOG2 0xE0 DUP15 0xB2 0xB2 0xE7 DUP16 SWAP10 PUSH18 0x29505509F6DAF89464736F6C634300081800 CALLER ",
							"sourceMap": "203:14914:1:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"average(uint256,uint256)": "infinite",
								"ceilDiv(uint256,uint256)": "infinite",
								"log10(uint256)": "infinite",
								"log10(uint256,enum Math.Rounding)": "infinite",
								"log2(uint256)": "infinite",
								"log2(uint256,enum Math.Rounding)": "infinite",
								"log256(uint256)": "infinite",
								"log256(uint256,enum Math.Rounding)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256,enum Math.Rounding)": "infinite",
								"sqrt(uint256)": "infinite",
								"sqrt(uint256,enum Math.Rounding)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite",
								"unsignedRoundsUp(enum Math.Rounding)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 1,
									"value": "B"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "BYTE",
									"source": 1
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "ADDRESS",
									"source": 1
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE8",
									"source": 1
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212208f18fe540c5500edc9b88abbe0eeb8a2e08eb2b2e78f997129505509f6daf89464736f6c63430008180033",
									".code": [
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSHDEPLOYADDRESS",
											"source": 1
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "REVERT",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/AaveGhoster.sol",
								"contracts/ERC404.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"MathOverflowedMulDiv\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"errors\":{\"MathOverflowedMulDiv()\":[{\"details\":\"Muldiv operation overflow.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x3c2ebcf13322b0447982e0763851269e9df977261616b98c548aef656cde2cde\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://51a50f8345de0874e93ade40fd70cbad49a072e91079b75b4679bb831c84a037\",\"dweb:/ipfs/QmdGgSJzcPcPmjGuEhQt2avC54H81CBcckkSwSpeK5jXdd\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"SignedMath": {
					"abi": [],
					"devdoc": {
						"details": "Standard signed math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SignedMath.sol\":216:1263  library SignedMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SignedMath.sol\":216:1263  library SignedMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220d3ebfbcd5002ebce30951e83df7fef7e2baf4ab6ad3181eba483c78aca5cc73764736f6c63430008180033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d3ebfbcd5002ebce30951e83df7fef7e2baf4ab6ad3181eba483c78aca5cc73764736f6c63430008180033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD3 0xEB 0xFB 0xCD POP MUL 0xEB 0xCE ADDRESS SWAP6 0x1E DUP4 0xDF PUSH32 0xEF7E2BAF4AB6AD3181EBA483C78ACA5CC73764736F6C63430008180033000000 ",
							"sourceMap": "216:1047:2:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;216:1047:2;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d3ebfbcd5002ebce30951e83df7fef7e2baf4ab6ad3181eba483c78aca5cc73764736f6c63430008180033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD3 0xEB 0xFB 0xCD POP MUL 0xEB 0xCE ADDRESS SWAP6 0x1E DUP4 0xDF PUSH32 0xEF7E2BAF4AB6AD3181EBA483C78ACA5CC73764736F6C63430008180033000000 ",
							"sourceMap": "216:1047:2:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"abs(int256)": "infinite",
								"average(int256,int256)": "infinite",
								"max(int256,int256)": "infinite",
								"min(int256,int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 2,
									"value": "B"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "BYTE",
									"source": 2
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "ADDRESS",
									"source": 2
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE8",
									"source": 2
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220d3ebfbcd5002ebce30951e83df7fef7e2baf4ab6ad3181eba483c78aca5cc73764736f6c63430008180033",
									".code": [
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSHDEPLOYADDRESS",
											"source": 2
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "REVERT",
											"source": 2
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/AaveGhoster.sol",
								"contracts/ERC404.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x8f869b2d076970ca6c502f4a5a31e89d410af3971c4871933a037ad055d6f13a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef0e29cd5bedfe971de1719c106a04423789e8343e29e88efbd00475bf53e8ed\",\"dweb:/ipfs/QmUs8ayyPBrGEuqe58GBpAoXvf3P8LwNSniR3xn6eLpQit\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/AaveGhoster.sol": {
				"AaveGhoster": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "AlreadyExists",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidRecipient",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidSender",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotFound",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "Unauthorized",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "UnsafeRecipient",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "ERC20Transfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "ERC721Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amountOrId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "baseTokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "dataURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "minted",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "revokeOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "_dataURI",
									"type": "string"
								}
							],
							"name": "setDataURI",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "_name",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "_symbol",
									"type": "string"
								}
							],
							"name": "setNameSymbol",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "_tokenURI",
									"type": "string"
								}
							],
							"name": "setTokenURI",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "state",
									"type": "bool"
								}
							],
							"name": "setWhitelist",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amountOrId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "whitelist",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "This function assumes id / native if amount less than or equal to current max id"
							},
							"transferFrom(address,address,uint256)": {
								"details": "This function assumes id / native if amount less than or equal to current max id"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/AaveGhoster.sol\":145:3230  contract AaveGhoster is ERC404 {... */\n  mstore(0x40, 0xc0)\n    /* \"contracts/AaveGhoster.sol\":246:401  constructor(... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/ERC404.sol\":4192:4528  constructor(... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x0b\n  dup2\n  mstore\n  0x20\n  add\n  shl(0xa9, 0x20b0bb32a3b437b9ba32b9)\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x0b\n  dup2\n  mstore\n  0x20\n  add\n  shl(0xa9, 0x20a0ab22a3a427a9aa22a9)\n  dup2\n  mstore\n  pop\n    /* \"contracts/AaveGhoster.sol\":327:329  18 */\n  0x12\n    /* \"contracts/AaveGhoster.sol\":331:336  15000 */\n  0x3a98\n    /* \"contracts/AaveGhoster.sol\":338:344  _owner */\n  dup5\n    /* \"contracts/ERC404.sol\":4369:4375  _owner */\n  dup1\n    /* \"contracts/ERC404.sol\":444:445  0 */\n  0x00\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/ERC404.sol\":426:446  _owner == address(0) */\n  and\n    /* \"contracts/ERC404.sol\":426:432  _owner */\n  dup2\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/ERC404.sol\":426:446  _owner == address(0) */\n  and\n  sub\n    /* \"contracts/ERC404.sol\":422:469  if (_owner == address(0)) revert InvalidOwner() */\n  tag_8\n  jumpi\n    /* \"contracts/ERC404.sol\":455:469  InvalidOwner() */\n  mload(0x40)\n  shl(0xe0, 0x49e27cff)\n  dup2\n  mstore\n  0x04\n  add\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"contracts/ERC404.sol\":422:469  if (_owner == address(0)) revert InvalidOwner() */\ntag_8:\n    /* \"contracts/ERC404.sol\":482:487  owner */\n  0x00\n    /* \"contracts/ERC404.sol\":482:496  owner = _owner */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  dup4\n  and\n  swap1\n  dup2\n  or\n  dup3\n  sstore\n    /* \"contracts/ERC404.sol\":514:554  OwnershipTransferred(address(0), _owner) */\n  mload(0x40)\n    /* \"contracts/ERC404.sol\":482:496  owner = _owner */\n  swap1\n  swap2\n    /* \"contracts/ERC404.sol\":482:487  owner */\n  swap1\n    /* \"contracts/ERC404.sol\":514:554  OwnershipTransferred(address(0), _owner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap1\n    /* \"contracts/ERC404.sol\":482:487  owner */\n  dup3\n  swap1\n    /* \"contracts/ERC404.sol\":514:554  OwnershipTransferred(address(0), _owner) */\n  log3\n  pop\n    /* \"contracts/ERC404.sol\":4388:4392  name */\n  0x01\n    /* \"contracts/ERC404.sol\":4388:4400  name = _name */\n  tag_10\n    /* \"contracts/ERC404.sol\":4395:4400  _name */\n  dup7\n    /* \"contracts/ERC404.sol\":4388:4392  name */\n  dup3\n    /* \"contracts/ERC404.sol\":4388:4400  name = _name */\n  tag_11\n  jump\t// in\ntag_10:\n  pop\n    /* \"contracts/ERC404.sol\":4411:4417  symbol */\n  0x02\n    /* \"contracts/ERC404.sol\":4411:4427  symbol = _symbol */\n  tag_12\n    /* \"contracts/ERC404.sol\":4420:4427  _symbol */\n  dup6\n    /* \"contracts/ERC404.sol\":4411:4417  symbol */\n  dup3\n    /* \"contracts/ERC404.sol\":4411:4427  symbol = _symbol */\n  tag_11\n  jump\t// in\ntag_12:\n  pop\n    /* \"contracts/ERC404.sol\":4438:4458  decimals = _decimals */\n  0xff\n  dup4\n  and\n  0x80\n  dup2\n  swap1\n  mstore\n    /* \"contracts/ERC404.sol\":4505:4519  10 ** decimals */\n  tag_13\n  swap1\n    /* \"contracts/ERC404.sol\":4505:4507  10 */\n  0x0a\n    /* \"contracts/ERC404.sol\":4505:4519  10 ** decimals */\n  tag_14\n  jump\t// in\ntag_13:\n    /* \"contracts/ERC404.sol\":4483:4520  _totalNativeSupply * (10 ** decimals) */\n  tag_15\n  swap1\n    /* \"contracts/ERC404.sol\":4483:4501  _totalNativeSupply */\n  dup4\n    /* \"contracts/ERC404.sol\":4483:4520  _totalNativeSupply * (10 ** decimals) */\n  tag_16\n  jump\t// in\ntag_15:\n    /* \"contracts/ERC404.sol\":4469:4520  totalSupply = _totalNativeSupply * (10 ** decimals) */\n  0xa0\n  mstore\n  pop\n  pop\n  pop\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/AaveGhoster.sol\":357:374  balanceOf[_owner] */\n  swap1\n  swap3\n  and\n  0x00\n  swap1\n  dup2\n  mstore\n    /* \"contracts/AaveGhoster.sol\":357:366  balanceOf */\n  0x04\n    /* \"contracts/AaveGhoster.sol\":357:374  balanceOf[_owner] */\n  0x20\n  mstore\n  0x40\n  swap1\n  keccak256\n    /* \"contracts/AaveGhoster.sol\":377:393  15000 * 10 ** 18 */\n  0x032d26d12e980b600000\n    /* \"contracts/AaveGhoster.sol\":357:393  balanceOf[_owner] = 15000 * 10 ** 18 */\n  swap1\n  sstore\n  pop\n    /* \"contracts/AaveGhoster.sol\":145:3230  contract AaveGhoster is ERC404 {... */\n  tag_27\n  swap1\n  pop\n  jump\n    /* \"#utility.yul\":14:304   */\ntag_3:\n    /* \"#utility.yul\":84:90   */\n  0x00\n    /* \"#utility.yul\":137:139   */\n  0x20\n    /* \"#utility.yul\":125:134   */\n  dup3\n    /* \"#utility.yul\":116:123   */\n  dup5\n    /* \"#utility.yul\":112:135   */\n  sub\n    /* \"#utility.yul\":108:140   */\n  slt\n    /* \"#utility.yul\":105:157   */\n  iszero\n  tag_29\n  jumpi\n    /* \"#utility.yul\":153:154   */\n  0x00\n    /* \"#utility.yul\":150:151   */\n  dup1\n    /* \"#utility.yul\":143:155   */\n  revert\n    /* \"#utility.yul\":105:157   */\ntag_29:\n    /* \"#utility.yul\":179:195   */\n  dup2\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":224:255   */\n  dup2\n  and\n    /* \"#utility.yul\":214:256   */\n  dup2\n  eq\n    /* \"#utility.yul\":204:274   */\n  tag_30\n  jumpi\n    /* \"#utility.yul\":270:271   */\n  0x00\n    /* \"#utility.yul\":267:268   */\n  dup1\n    /* \"#utility.yul\":260:272   */\n  revert\n    /* \"#utility.yul\":204:274   */\ntag_30:\n    /* \"#utility.yul\":293:298   */\n  swap4\n    /* \"#utility.yul\":14:304   */\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":309:436   */\ntag_19:\n    /* \"#utility.yul\":370:380   */\n  0x4e487b71\n    /* \"#utility.yul\":365:368   */\n  0xe0\n    /* \"#utility.yul\":361:381   */\n  shl\n    /* \"#utility.yul\":358:359   */\n  0x00\n    /* \"#utility.yul\":351:382   */\n  mstore\n    /* \"#utility.yul\":401:405   */\n  0x41\n    /* \"#utility.yul\":398:399   */\n  0x04\n    /* \"#utility.yul\":391:406   */\n  mstore\n    /* \"#utility.yul\":425:429   */\n  0x24\n    /* \"#utility.yul\":422:423   */\n  0x00\n    /* \"#utility.yul\":415:430   */\n  revert\n    /* \"#utility.yul\":441:821   */\ntag_20:\n    /* \"#utility.yul\":520:521   */\n  0x01\n    /* \"#utility.yul\":516:528   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":563:575   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":584:645   */\n  tag_33\n  jumpi\n    /* \"#utility.yul\":638:642   */\n  0x7f\n    /* \"#utility.yul\":630:636   */\n  dup3\n    /* \"#utility.yul\":626:643   */\n  and\n    /* \"#utility.yul\":616:643   */\n  swap2\n  pop\n    /* \"#utility.yul\":584:645   */\ntag_33:\n    /* \"#utility.yul\":691:693   */\n  0x20\n    /* \"#utility.yul\":683:689   */\n  dup3\n    /* \"#utility.yul\":680:694   */\n  lt\n    /* \"#utility.yul\":660:678   */\n  dup2\n    /* \"#utility.yul\":657:695   */\n  sub\n    /* \"#utility.yul\":654:815   */\n  tag_34\n  jumpi\n    /* \"#utility.yul\":737:747   */\n  0x4e487b71\n    /* \"#utility.yul\":732:735   */\n  0xe0\n    /* \"#utility.yul\":728:748   */\n  shl\n    /* \"#utility.yul\":725:726   */\n  0x00\n    /* \"#utility.yul\":718:749   */\n  mstore\n    /* \"#utility.yul\":772:776   */\n  0x22\n    /* \"#utility.yul\":769:770   */\n  0x04\n    /* \"#utility.yul\":762:777   */\n  mstore\n    /* \"#utility.yul\":800:804   */\n  0x24\n    /* \"#utility.yul\":797:798   */\n  0x00\n    /* \"#utility.yul\":790:805   */\n  revert\n    /* \"#utility.yul\":654:815   */\ntag_34:\n  pop\n    /* \"#utility.yul\":441:821   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":952:1495   */\ntag_22:\n    /* \"#utility.yul\":1054:1056   */\n  0x1f\n    /* \"#utility.yul\":1049:1052   */\n  dup3\n    /* \"#utility.yul\":1046:1057   */\n  gt\n    /* \"#utility.yul\":1043:1489   */\n  iszero\n  tag_37\n  jumpi\n    /* \"#utility.yul\":1090:1091   */\n  0x00\n    /* \"#utility.yul\":1114:1119   */\n  dup2\n    /* \"#utility.yul\":1111:1112   */\n  0x00\n    /* \"#utility.yul\":1104:1120   */\n  mstore\n    /* \"#utility.yul\":1158:1162   */\n  0x20\n    /* \"#utility.yul\":1155:1156   */\n  0x00\n    /* \"#utility.yul\":1145:1163   */\n  keccak256\n    /* \"#utility.yul\":1228:1230   */\n  0x1f\n    /* \"#utility.yul\":1216:1226   */\n  dup6\n    /* \"#utility.yul\":1212:1231   */\n  add\n    /* \"#utility.yul\":1209:1210   */\n  0x05\n    /* \"#utility.yul\":1205:1232   */\n  shr\n    /* \"#utility.yul\":1199:1203   */\n  dup2\n    /* \"#utility.yul\":1195:1233   */\n  add\n    /* \"#utility.yul\":1264:1268   */\n  0x20\n    /* \"#utility.yul\":1252:1262   */\n  dup7\n    /* \"#utility.yul\":1249:1269   */\n  lt\n    /* \"#utility.yul\":1246:1293   */\n  iszero\n  tag_38\n  jumpi\n  pop\n    /* \"#utility.yul\":1287:1291   */\n  dup1\n    /* \"#utility.yul\":1246:1293   */\ntag_38:\n    /* \"#utility.yul\":1342:1344   */\n  0x1f\n    /* \"#utility.yul\":1337:1340   */\n  dup6\n    /* \"#utility.yul\":1333:1345   */\n  add\n    /* \"#utility.yul\":1330:1331   */\n  0x05\n    /* \"#utility.yul\":1326:1346   */\n  shr\n    /* \"#utility.yul\":1320:1324   */\n  dup3\n    /* \"#utility.yul\":1316:1347   */\n  add\n    /* \"#utility.yul\":1306:1347   */\n  swap2\n  pop\n    /* \"#utility.yul\":1397:1479   */\ntag_39:\n    /* \"#utility.yul\":1415:1417   */\n  dup2\n    /* \"#utility.yul\":1408:1413   */\n  dup2\n    /* \"#utility.yul\":1405:1418   */\n  lt\n    /* \"#utility.yul\":1397:1479   */\n  iszero\n  tag_41\n  jumpi\n    /* \"#utility.yul\":1460:1477   */\n  dup3\n  dup2\n  sstore\n    /* \"#utility.yul\":1441:1442   */\n  0x01\n    /* \"#utility.yul\":1430:1443   */\n  add\n    /* \"#utility.yul\":1397:1479   */\n  jump(tag_39)\ntag_41:\n    /* \"#utility.yul\":1401:1404   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":1043:1489   */\ntag_37:\n    /* \"#utility.yul\":952:1495   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1671:3016   */\ntag_11:\n    /* \"#utility.yul\":1791:1801   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1813:1843   */\n  dup2\n  gt\n    /* \"#utility.yul\":1810:1866   */\n  iszero\n  tag_45\n  jumpi\n    /* \"#utility.yul\":1846:1864   */\n  tag_45\n  tag_19\n  jump\t// in\ntag_45:\n    /* \"#utility.yul\":1875:1972   */\n  tag_46\n    /* \"#utility.yul\":1965:1971   */\n  dup2\n    /* \"#utility.yul\":1925:1963   */\n  tag_47\n    /* \"#utility.yul\":1957:1961   */\n  dup5\n    /* \"#utility.yul\":1951:1962   */\n  sload\n    /* \"#utility.yul\":1925:1963   */\n  tag_20\n  jump\t// in\ntag_47:\n    /* \"#utility.yul\":1919:1923   */\n  dup5\n    /* \"#utility.yul\":1875:1972   */\n  tag_22\n  jump\t// in\ntag_46:\n    /* \"#utility.yul\":2027:2031   */\n  0x20\n  dup1\n    /* \"#utility.yul\":2084:2086   */\n  0x1f\n    /* \"#utility.yul\":2073:2087   */\n  dup4\n  gt\n    /* \"#utility.yul\":2101:2102   */\n  0x01\n    /* \"#utility.yul\":2096:2759   */\n  dup2\n  eq\n  tag_49\n  jumpi\n    /* \"#utility.yul\":2803:2804   */\n  0x00\n    /* \"#utility.yul\":2820:2826   */\n  dup5\n    /* \"#utility.yul\":2817:2906   */\n  iszero\n  tag_50\n  jumpi\n  pop\n    /* \"#utility.yul\":2872:2891   */\n  dup6\n  dup4\n  add\n    /* \"#utility.yul\":2866:2892   */\n  mload\n    /* \"#utility.yul\":2817:2906   */\ntag_50:\n  not(0x00)\n    /* \"#utility.yul\":1628:1629   */\n  0x03\n    /* \"#utility.yul\":1624:1635   */\n  dup7\n  swap1\n  shl\n    /* \"#utility.yul\":1620:1644   */\n  shr\n    /* \"#utility.yul\":1616:1645   */\n  not\n    /* \"#utility.yul\":1606:1646   */\n  and\n    /* \"#utility.yul\":1652:1653   */\n  0x01\n    /* \"#utility.yul\":1648:1659   */\n  dup6\n  swap1\n  shl\n    /* \"#utility.yul\":1603:1660   */\n  or\n    /* \"#utility.yul\":2919:3000   */\n  dup6\n  sstore\n    /* \"#utility.yul\":2066:3010   */\n  jump(tag_41)\n    /* \"#utility.yul\":2096:2759   */\ntag_49:\n    /* \"#utility.yul\":899:900   */\n  0x00\n    /* \"#utility.yul\":892:906   */\n  dup6\n  dup2\n  mstore\n    /* \"#utility.yul\":936:940   */\n  0x20\n    /* \"#utility.yul\":923:941   */\n  dup2\n  keccak256\n  not(0x1f)\n    /* \"#utility.yul\":2132:2152   */\n  dup7\n  and\n  swap2\n    /* \"#utility.yul\":2250:2486   */\ntag_53:\n    /* \"#utility.yul\":2264:2271   */\n  dup3\n    /* \"#utility.yul\":2261:2262   */\n  dup2\n    /* \"#utility.yul\":2258:2272   */\n  lt\n    /* \"#utility.yul\":2250:2486   */\n  iszero\n  tag_55\n  jumpi\n    /* \"#utility.yul\":2353:2372   */\n  dup9\n  dup7\n  add\n    /* \"#utility.yul\":2347:2373   */\n  mload\n    /* \"#utility.yul\":2332:2374   */\n  dup3\n  sstore\n    /* \"#utility.yul\":2445:2472   */\n  swap5\n  dup5\n  add\n  swap5\n    /* \"#utility.yul\":2413:2414   */\n  0x01\n    /* \"#utility.yul\":2401:2415   */\n  swap1\n  swap2\n  add\n  swap1\n    /* \"#utility.yul\":2280:2299   */\n  dup5\n  add\n    /* \"#utility.yul\":2250:2486   */\n  jump(tag_53)\ntag_55:\n    /* \"#utility.yul\":2254:2257   */\n  pop\n    /* \"#utility.yul\":2514:2520   */\n  dup6\n    /* \"#utility.yul\":2505:2512   */\n  dup3\n    /* \"#utility.yul\":2502:2521   */\n  lt\n    /* \"#utility.yul\":2499:2700   */\n  iszero\n  tag_56\n  jumpi\n    /* \"#utility.yul\":2575:2594   */\n  dup8\n  dup6\n  add\n    /* \"#utility.yul\":2569:2595   */\n  mload\n  not(0x00)\n    /* \"#utility.yul\":2658:2659   */\n  0x03\n    /* \"#utility.yul\":2654:2668   */\n  dup9\n  swap1\n  shl\n    /* \"#utility.yul\":2670:2673   */\n  0xf8\n    /* \"#utility.yul\":2650:2674   */\n  and\n    /* \"#utility.yul\":2646:2683   */\n  shr\n    /* \"#utility.yul\":2642:2684   */\n  not\n    /* \"#utility.yul\":2627:2685   */\n  and\n    /* \"#utility.yul\":2612:2686   */\n  dup2\n  sstore\n    /* \"#utility.yul\":2499:2700   */\ntag_56:\n  pop\n  pop\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":2746:2747   */\n  0x01\n    /* \"#utility.yul\":2730:2744   */\n  swap1\n  dup2\n  shl\n    /* \"#utility.yul\":2726:2748   */\n  add\n    /* \"#utility.yul\":2713:2749   */\n  swap1\n  sstore\n  pop\n    /* \"#utility.yul\":1671:3016   */\n  jump\t// out\n    /* \"#utility.yul\":3021:3148   */\ntag_24:\n    /* \"#utility.yul\":3082:3092   */\n  0x4e487b71\n    /* \"#utility.yul\":3077:3080   */\n  0xe0\n    /* \"#utility.yul\":3073:3093   */\n  shl\n    /* \"#utility.yul\":3070:3071   */\n  0x00\n    /* \"#utility.yul\":3063:3094   */\n  mstore\n    /* \"#utility.yul\":3113:3117   */\n  0x11\n    /* \"#utility.yul\":3110:3111   */\n  0x04\n    /* \"#utility.yul\":3103:3118   */\n  mstore\n    /* \"#utility.yul\":3137:3141   */\n  0x24\n    /* \"#utility.yul\":3134:3135   */\n  0x00\n    /* \"#utility.yul\":3127:3142   */\n  revert\n    /* \"#utility.yul\":3153:3569   */\ntag_25:\n    /* \"#utility.yul\":3242:3243   */\n  0x01\n    /* \"#utility.yul\":3279:3284   */\n  dup2\n    /* \"#utility.yul\":3242:3243   */\n  dup2\n    /* \"#utility.yul\":3293:3563   */\ntag_59:\n    /* \"#utility.yul\":3314:3321   */\n  dup1\n    /* \"#utility.yul\":3304:3312   */\n  dup6\n    /* \"#utility.yul\":3301:3322   */\n  gt\n    /* \"#utility.yul\":3293:3563   */\n  iszero\n  tag_61\n  jumpi\n    /* \"#utility.yul\":3373:3377   */\n  dup2\n    /* \"#utility.yul\":3369:3370   */\n  0x00\n    /* \"#utility.yul\":3365:3371   */\n  not\n    /* \"#utility.yul\":3361:3378   */\n  div\n    /* \"#utility.yul\":3355:3359   */\n  dup3\n    /* \"#utility.yul\":3352:3379   */\n  gt\n    /* \"#utility.yul\":3349:3402   */\n  iszero\n  tag_63\n  jumpi\n    /* \"#utility.yul\":3382:3400   */\n  tag_63\n  tag_24\n  jump\t// in\ntag_63:\n    /* \"#utility.yul\":3432:3439   */\n  dup1\n    /* \"#utility.yul\":3422:3430   */\n  dup6\n    /* \"#utility.yul\":3418:3440   */\n  and\n    /* \"#utility.yul\":3415:3470   */\n  iszero\n  tag_64\n  jumpi\n    /* \"#utility.yul\":3452:3468   */\n  swap2\n  dup2\n  mul\n  swap2\n    /* \"#utility.yul\":3415:3470   */\ntag_64:\n    /* \"#utility.yul\":3531:3553   */\n  swap4\n  dup5\n  shr\n  swap4\n    /* \"#utility.yul\":3491:3506   */\n  swap1\n  dup1\n  mul\n  swap1\n    /* \"#utility.yul\":3293:3563   */\n  jump(tag_59)\ntag_61:\n    /* \"#utility.yul\":3297:3300   */\n  pop\n    /* \"#utility.yul\":3153:3569   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3574:4380   */\ntag_26:\n    /* \"#utility.yul\":3623:3628   */\n  0x00\n    /* \"#utility.yul\":3653:3661   */\n  dup3\n    /* \"#utility.yul\":3643:3723   */\n  tag_66\n  jumpi\n  pop\n    /* \"#utility.yul\":3694:3695   */\n  0x01\n    /* \"#utility.yul\":3708:3713   */\n  jump(tag_65)\n    /* \"#utility.yul\":3643:3723   */\ntag_66:\n    /* \"#utility.yul\":3742:3746   */\n  dup2\n    /* \"#utility.yul\":3732:3808   */\n  tag_67\n  jumpi\n  pop\n    /* \"#utility.yul\":3779:3780   */\n  0x00\n    /* \"#utility.yul\":3793:3798   */\n  jump(tag_65)\n    /* \"#utility.yul\":3732:3808   */\ntag_67:\n    /* \"#utility.yul\":3824:3828   */\n  dup2\n    /* \"#utility.yul\":3842:3843   */\n  0x01\n    /* \"#utility.yul\":3837:3896   */\n  dup2\n  eq\n  tag_69\n  jumpi\n    /* \"#utility.yul\":3910:3911   */\n  0x02\n    /* \"#utility.yul\":3905:4035   */\n  dup2\n  eq\n  tag_70\n  jumpi\n    /* \"#utility.yul\":3817:4035   */\n  jump(tag_68)\n    /* \"#utility.yul\":3837:3896   */\ntag_69:\n    /* \"#utility.yul\":3867:3868   */\n  0x01\n    /* \"#utility.yul\":3858:3868   */\n  swap2\n  pop\n    /* \"#utility.yul\":3881:3886   */\n  pop\n  jump(tag_65)\n    /* \"#utility.yul\":3905:4035   */\ntag_70:\n    /* \"#utility.yul\":3942:3945   */\n  0xff\n    /* \"#utility.yul\":3932:3940   */\n  dup5\n    /* \"#utility.yul\":3929:3946   */\n  gt\n    /* \"#utility.yul\":3926:3969   */\n  iszero\n  tag_72\n  jumpi\n    /* \"#utility.yul\":3949:3967   */\n  tag_72\n  tag_24\n  jump\t// in\ntag_72:\n  pop\n  pop\n    /* \"#utility.yul\":4005:4006   */\n  0x01\n    /* \"#utility.yul\":3991:4007   */\n  dup3\n  shl\n    /* \"#utility.yul\":4020:4025   */\n  jump(tag_65)\n    /* \"#utility.yul\":3817:4035   */\ntag_68:\n  pop\n    /* \"#utility.yul\":4119:4121   */\n  0x20\n    /* \"#utility.yul\":4109:4117   */\n  dup4\n    /* \"#utility.yul\":4106:4122   */\n  lt\n    /* \"#utility.yul\":4100:4103   */\n  0x0133\n    /* \"#utility.yul\":4094:4098   */\n  dup4\n    /* \"#utility.yul\":4091:4104   */\n  lt\n    /* \"#utility.yul\":4087:4123   */\n  and\n    /* \"#utility.yul\":4081:4083   */\n  0x4e\n    /* \"#utility.yul\":4071:4079   */\n  dup5\n    /* \"#utility.yul\":4068:4084   */\n  lt\n    /* \"#utility.yul\":4063:4065   */\n  0x0b\n    /* \"#utility.yul\":4057:4061   */\n  dup5\n    /* \"#utility.yul\":4054:4066   */\n  lt\n    /* \"#utility.yul\":4050:4085   */\n  and\n    /* \"#utility.yul\":4047:4124   */\n  or\n    /* \"#utility.yul\":4044:4203   */\n  iszero\n  tag_73\n  jumpi\n  pop\n    /* \"#utility.yul\":4156:4175   */\n  dup2\n  dup2\n  exp\n    /* \"#utility.yul\":4188:4193   */\n  jump(tag_65)\n    /* \"#utility.yul\":4044:4203   */\ntag_73:\n    /* \"#utility.yul\":4235:4269   */\n  tag_74\n    /* \"#utility.yul\":4260:4268   */\n  dup4\n    /* \"#utility.yul\":4254:4258   */\n  dup4\n    /* \"#utility.yul\":4235:4269   */\n  tag_25\n  jump\t// in\ntag_74:\n    /* \"#utility.yul\":4305:4311   */\n  dup1\n    /* \"#utility.yul\":4301:4302   */\n  0x00\n    /* \"#utility.yul\":4297:4303   */\n  not\n    /* \"#utility.yul\":4293:4312   */\n  div\n    /* \"#utility.yul\":4284:4291   */\n  dup3\n    /* \"#utility.yul\":4281:4313   */\n  gt\n    /* \"#utility.yul\":4278:4336   */\n  iszero\n  tag_76\n  jumpi\n    /* \"#utility.yul\":4316:4334   */\n  tag_76\n  tag_24\n  jump\t// in\ntag_76:\n    /* \"#utility.yul\":4354:4374   */\n  mul\n  swap1\n  pop\n    /* \"#utility.yul\":3574:4380   */\ntag_65:\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4385:4525   */\ntag_14:\n    /* \"#utility.yul\":4443:4448   */\n  0x00\n    /* \"#utility.yul\":4472:4519   */\n  tag_30\n    /* \"#utility.yul\":4513:4517   */\n  0xff\n    /* \"#utility.yul\":4503:4511   */\n  dup5\n    /* \"#utility.yul\":4499:4518   */\n  and\n    /* \"#utility.yul\":4493:4497   */\n  dup4\n    /* \"#utility.yul\":4472:4519   */\n  tag_26\n  jump\t// in\n    /* \"#utility.yul\":4530:4698   */\ntag_16:\n    /* \"#utility.yul\":4603:4612   */\n  dup1\n  dup3\n  mul\n    /* \"#utility.yul\":4634:4643   */\n  dup2\n  iszero\n    /* \"#utility.yul\":4651:4666   */\n  dup3\n  dup3\n  div\n    /* \"#utility.yul\":4645:4667   */\n  dup5\n  eq\n    /* \"#utility.yul\":4631:4668   */\n  or\n    /* \"#utility.yul\":4621:4692   */\n  tag_65\n  jumpi\n    /* \"#utility.yul\":4672:4690   */\n  tag_65\n  tag_24\n  jump\t// in\n    /* \"#utility.yul\":4530:4698   */\ntag_27:\n    /* \"contracts/AaveGhoster.sol\":145:3230  contract AaveGhoster is ERC404 {... */\n  mload(0x80)\n  mload(0xa0)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0x39e0141cfa02fdbe6dfe36b58aeb79b8b1e06ed955c6eb62416243533e42d84a\")\n  0x00\n  assignImmutable(\"0xf2aed5d52b85e7b229d9a0bb201e12bdcbbc5fc133feb54c1cb531c3f7cf58ed\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"contracts/AaveGhoster.sol\":145:3230  contract AaveGhoster is ERC404 {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x70a08231\n      gt\n      tag_30\n      jumpi\n      dup1\n      0xc87b56dd\n      gt\n      tag_31\n      jumpi\n      dup1\n      0xe0df5b6f\n      gt\n      tag_32\n      jumpi\n      dup1\n      0xe0df5b6f\n      eq\n      tag_26\n      jumpi\n      dup1\n      0xe985e9c5\n      eq\n      tag_27\n      jumpi\n      dup1\n      0xf28ca1dd\n      eq\n      tag_28\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_29\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_32:\n      dup1\n      0xc87b56dd\n      eq\n      tag_23\n      jumpi\n      dup1\n      0xd547cfb7\n      eq\n      tag_24\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_25\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_31:\n      dup1\n      0x9b19251a\n      gt\n      tag_33\n      jumpi\n      dup1\n      0x9b19251a\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xa22cb465\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xb88d4fde\n      eq\n      tag_22\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_33:\n      dup1\n      0x70a08231\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_18\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_30:\n      dup1\n      0x2b968958\n      gt\n      tag_34\n      jumpi\n      dup1\n      0x4f02c420\n      gt\n      tag_35\n      jumpi\n      dup1\n      0x4f02c420\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x504334c2\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x53d6fd59\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x6352211e\n      eq\n      tag_15\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_35:\n      dup1\n      0x2b968958\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x42842e0e\n      eq\n      tag_11\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_34:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x081812fc\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x18d217c3\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/ERC404.sol\":2800:2818  string public name */\n    tag_3:\n      tag_36\n      tag_37\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      tag_38\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC404.sol\":3511:3557  mapping(uint256 => address) public getApproved */\n    tag_4:\n      tag_40\n      tag_41\n      calldatasize\n      0x04\n      tag_42\n      jump\t// in\n    tag_41:\n      mstore(0x20, 0x06)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n    tag_40:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1019:1051   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":1001:1052   */\n      dup2\n      mstore\n        /* \"#utility.yul\":989:991   */\n      0x20\n        /* \"#utility.yul\":974:992   */\n      add\n        /* \"contracts/ERC404.sol\":3511:3557  mapping(uint256 => address) public getApproved */\n      tag_38\n        /* \"#utility.yul\":855:1058   */\n      jump\n        /* \"contracts/ERC404.sol\":5342:5984  function approve(... */\n    tag_5:\n      tag_46\n      tag_47\n      calldatasize\n      0x04\n      tag_48\n      jump\t// in\n    tag_47:\n      tag_49\n      jump\t// in\n    tag_46:\n      mload(0x40)\n        /* \"#utility.yul\":1665:1679   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1658:1680   */\n      iszero\n        /* \"#utility.yul\":1640:1681   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1628:1630   */\n      0x20\n        /* \"#utility.yul\":1613:1631   */\n      add\n        /* \"contracts/ERC404.sol\":5342:5984  function approve(... */\n      tag_38\n        /* \"#utility.yul\":1500:1687   */\n      jump\n        /* \"contracts/ERC404.sol\":3036:3072  uint256 public immutable totalSupply */\n    tag_6:\n      tag_52\n      immutable(\"0x39e0141cfa02fdbe6dfe36b58aeb79b8b1e06ed955c6eb62416243533e42d84a\")\n      dup2\n      jump\n    tag_52:\n      mload(0x40)\n        /* \"#utility.yul\":1838:1863   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1826:1828   */\n      0x20\n        /* \"#utility.yul\":1811:1829   */\n      add\n        /* \"contracts/ERC404.sol\":3036:3072  uint256 public immutable totalSupply */\n      tag_38\n        /* \"#utility.yul\":1692:1869   */\n      jump\n        /* \"contracts/AaveGhoster.sol\":409:507  function setDataURI(string memory _dataURI) public onlyOwner {... */\n    tag_7:\n      tag_56\n      tag_57\n      calldatasize\n      0x04\n      tag_58\n      jump\t// in\n    tag_57:\n      tag_59\n      jump\t// in\n    tag_56:\n      stop\n        /* \"contracts/ERC404.sol\":6391:8107  function transferFrom(... */\n    tag_8:\n      tag_56\n      tag_61\n      calldatasize\n      0x04\n      tag_62\n      jump\t// in\n    tag_61:\n      tag_63\n      jump\t// in\n        /* \"contracts/ERC404.sol\":797:948  function revokeOwnership() public virtual onlyOwner {... */\n    tag_9:\n      tag_56\n      tag_65\n      jump\t// in\n        /* \"contracts/ERC404.sol\":2936:2967  uint8 public immutable decimals */\n    tag_10:\n      tag_66\n      immutable(\"0xf2aed5d52b85e7b229d9a0bb201e12bdcbbc5fc133feb54c1cb531c3f7cf58ed\")\n      dup2\n      jump\n    tag_66:\n      mload(0x40)\n        /* \"#utility.yul\":3562:3566   */\n      0xff\n        /* \"#utility.yul\":3550:3567   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":3532:3568   */\n      dup2\n      mstore\n        /* \"#utility.yul\":3520:3522   */\n      0x20\n        /* \"#utility.yul\":3505:3523   */\n      add\n        /* \"contracts/ERC404.sol\":2936:2967  uint8 public immutable decimals */\n      tag_38\n        /* \"#utility.yul\":3390:3574   */\n      jump\n        /* \"contracts/ERC404.sol\":8403:8808  function safeTransferFrom(... */\n    tag_11:\n      tag_56\n      tag_71\n      calldatasize\n      0x04\n      tag_62\n      jump\t// in\n    tag_71:\n      tag_72\n      jump\t// in\n        /* \"contracts/ERC404.sol\":3171:3192  uint256 public minted */\n    tag_12:\n      tag_52\n      sload(0x03)\n      dup2\n      jump\n        /* \"contracts/AaveGhoster.sol\":629:787  function setNameSymbol(... */\n    tag_13:\n      tag_56\n      tag_77\n      calldatasize\n      0x04\n      tag_78\n      jump\t// in\n    tag_77:\n      tag_79\n      jump\t// in\n        /* \"contracts/ERC404.sol\":4671:4782  function setWhitelist(address target, bool state) public onlyOwner {... */\n    tag_14:\n      tag_56\n      tag_81\n      calldatasize\n      0x04\n      tag_82\n      jump\t// in\n    tag_81:\n      tag_83\n      jump\t// in\n        /* \"contracts/ERC404.sol\":4854:5047  function ownerOf(uint256 id) public view virtual returns (address owner) {... */\n    tag_15:\n      tag_40\n      tag_85\n      calldatasize\n      0x04\n      tag_42\n      jump\t// in\n    tag_85:\n      tag_86\n      jump\t// in\n        /* \"contracts/ERC404.sol\":3277:3321  mapping(address => uint256) public balanceOf */\n    tag_16:\n      tag_52\n      tag_89\n      calldatasize\n      0x04\n      tag_90\n      jump\t// in\n    tag_89:\n      mstore(0x20, 0x04)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\n        /* \"contracts/ERC404.sol\":238:258  address public owner */\n    tag_17:\n      sload(0x00)\n      tag_40\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"contracts/ERC404.sol\":2854:2874  string public symbol */\n    tag_18:\n      tag_36\n      tag_97\n      jump\t// in\n        /* \"contracts/ERC404.sol\":4122:4163  mapping(address => bool) public whitelist */\n    tag_19:\n      tag_46\n      tag_100\n      calldatasize\n      0x04\n      tag_90\n      jump\t// in\n    tag_100:\n      mstore(0x20, 0x0b)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      dup2\n      jump\n        /* \"contracts/ERC404.sol\":6035:6242  function setApprovalForAll(address operator, bool approved) public virtual {... */\n    tag_20:\n      tag_56\n      tag_104\n      calldatasize\n      0x04\n      tag_82\n      jump\t// in\n    tag_104:\n      tag_105\n      jump\t// in\n        /* \"contracts/ERC404.sol\":8166:8326  function transfer(... */\n    tag_21:\n      tag_46\n      tag_107\n      calldatasize\n      0x04\n      tag_48\n      jump\t// in\n    tag_107:\n      tag_108\n      jump\t// in\n        /* \"contracts/ERC404.sol\":8903:9340  function safeTransferFrom(... */\n    tag_22:\n      tag_56\n      tag_111\n      calldatasize\n      0x04\n      tag_112\n      jump\t// in\n    tag_111:\n      tag_113\n      jump\t// in\n        /* \"contracts/AaveGhoster.sol\":795:3227  function tokenURI(uint256 id) public view override returns (string memory) {... */\n    tag_23:\n      tag_36\n      tag_115\n      calldatasize\n      0x04\n      tag_42\n      jump\t// in\n    tag_115:\n      tag_116\n      jump\t// in\n        /* \"contracts/AaveGhoster.sol\":211:237  string public baseTokenURI */\n    tag_24:\n      tag_36\n      tag_119\n      jump\t// in\n        /* \"contracts/ERC404.sol\":3391:3455  mapping(address => mapping(address => uint256)) public allowance */\n    tag_25:\n      tag_52\n      tag_122\n      calldatasize\n      0x04\n      tag_123\n      jump\t// in\n    tag_122:\n      0x05\n      0x20\n      swap1\n      dup2\n      mstore\n      0x00\n      swap3\n      dup4\n      mstore\n      0x40\n      dup1\n      dup5\n      keccak256\n      swap1\n      swap2\n      mstore\n      swap1\n      dup3\n      mstore\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\n        /* \"contracts/AaveGhoster.sol\":515:621  function setTokenURI(string memory _tokenURI) public onlyOwner {... */\n    tag_26:\n      tag_56\n      tag_127\n      calldatasize\n      0x04\n      tag_58\n      jump\t// in\n    tag_127:\n      tag_128\n      jump\t// in\n        /* \"contracts/ERC404.sol\":3622:3690  mapping(address => mapping(address => bool)) public isApprovedForAll */\n    tag_27:\n      tag_46\n      tag_130\n      calldatasize\n      0x04\n      tag_123\n      jump\t// in\n    tag_130:\n      0x07\n      0x20\n      swap1\n      dup2\n      mstore\n      0x00\n      swap3\n      dup4\n      mstore\n      0x40\n      dup1\n      dup5\n      keccak256\n      swap1\n      swap2\n      mstore\n      swap1\n      dup3\n      mstore\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      dup2\n      jump\n        /* \"contracts/AaveGhoster.sol\":183:204  string public dataURI */\n    tag_28:\n      tag_36\n      tag_134\n      jump\t// in\n        /* \"contracts/ERC404.sol\":570:789  function transferOwnership(address _owner) public virtual onlyOwner {... */\n    tag_29:\n      tag_56\n      tag_137\n      calldatasize\n      0x04\n      tag_90\n      jump\t// in\n    tag_137:\n      tag_138\n      jump\t// in\n        /* \"contracts/ERC404.sol\":2800:2818  string public name */\n    tag_37:\n      0x01\n      dup1\n      sload\n      tag_139\n      swap1\n      tag_140\n      jump\t// in\n    tag_139:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_141\n      swap1\n      tag_140\n      jump\t// in\n    tag_141:\n      dup1\n      iszero\n      tag_142\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_143\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_142)\n    tag_143:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_144:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_144\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_142:\n      pop\n      pop\n      pop\n      pop\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/ERC404.sol\":5342:5984  function approve(... */\n    tag_49:\n        /* \"contracts/ERC404.sol\":5445:5449  bool */\n      0x00\n        /* \"contracts/ERC404.sol\":5480:5486  minted */\n      sload(0x03)\n        /* \"contracts/ERC404.sol\":5466:5476  amountOrId */\n      dup3\n        /* \"contracts/ERC404.sol\":5466:5486  amountOrId <= minted */\n      gt\n      iszero\n        /* \"contracts/ERC404.sol\":5466:5504  amountOrId <= minted && amountOrId > 0 */\n      dup1\n      iszero\n      tag_146\n      jumpi\n      pop\n        /* \"contracts/ERC404.sol\":5503:5504  0 */\n      0x00\n        /* \"contracts/ERC404.sol\":5490:5500  amountOrId */\n      dup3\n        /* \"contracts/ERC404.sol\":5490:5504  amountOrId > 0 */\n      gt\n        /* \"contracts/ERC404.sol\":5466:5504  amountOrId <= minted && amountOrId > 0 */\n    tag_146:\n        /* \"contracts/ERC404.sol\":5462:5953  if (amountOrId <= minted && amountOrId > 0) {... */\n      iszero\n      tag_147\n      jumpi\n        /* \"contracts/ERC404.sol\":5521:5534  address owner */\n      0x00\n        /* \"contracts/ERC404.sol\":5537:5557  _ownerOf[amountOrId] */\n      dup3\n      dup2\n      mstore\n        /* \"contracts/ERC404.sol\":5537:5545  _ownerOf */\n      0x08\n        /* \"contracts/ERC404.sol\":5537:5557  _ownerOf[amountOrId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"contracts/ERC404.sol\":5578:5588  msg.sender */\n      caller\n        /* \"contracts/ERC404.sol\":5578:5597  msg.sender != owner */\n      dup2\n      eq\n      dup1\n      iszero\n      swap1\n        /* \"contracts/ERC404.sol\":5578:5637  msg.sender != owner && !isApprovedForAll[owner][msg.sender] */\n      tag_148\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC404.sol\":5602:5625  isApprovedForAll[owner] */\n      dup2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/ERC404.sol\":5602:5618  isApprovedForAll */\n      0x07\n        /* \"contracts/ERC404.sol\":5602:5625  isApprovedForAll[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/ERC404.sol\":5626:5636  msg.sender */\n      caller\n        /* \"contracts/ERC404.sol\":5602:5637  isApprovedForAll[owner][msg.sender] */\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"contracts/ERC404.sol\":5601:5637  !isApprovedForAll[owner][msg.sender] */\n      iszero\n        /* \"contracts/ERC404.sol\":5578:5637  msg.sender != owner && !isApprovedForAll[owner][msg.sender] */\n    tag_148:\n        /* \"contracts/ERC404.sol\":5574:5695  if (msg.sender != owner && !isApprovedForAll[owner][msg.sender]) {... */\n      iszero\n      tag_149\n      jumpi\n        /* \"contracts/ERC404.sol\":5665:5679  Unauthorized() */\n      mload(0x40)\n      shl(0xe8, 0x82b429)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/ERC404.sol\":5574:5695  if (msg.sender != owner && !isApprovedForAll[owner][msg.sender]) {... */\n    tag_149:\n        /* \"contracts/ERC404.sol\":5711:5734  getApproved[amountOrId] */\n      0x00\n      dup4\n      dup2\n      mstore\n        /* \"contracts/ERC404.sol\":5711:5722  getApproved */\n      0x06\n        /* \"contracts/ERC404.sol\":5711:5734  getApproved[amountOrId] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"contracts/ERC404.sol\":5711:5744  getApproved[amountOrId] = spender */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup9\n      dup2\n      and\n      swap2\n      dup3\n      or\n      swap1\n      swap3\n      sstore\n        /* \"contracts/ERC404.sol\":5766:5802  Approval(owner, spender, amountOrId) */\n      swap3\n      mload\n        /* \"#utility.yul\":1838:1863   */\n      dup7\n      dup2\n      mstore\n        /* \"contracts/ERC404.sol\":5766:5802  Approval(owner, spender, amountOrId) */\n      swap1\n      dup5\n      and\n      swap2\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap2\n        /* \"#utility.yul\":1811:1829   */\n      add\n        /* \"contracts/ERC404.sol\":5766:5802  Approval(owner, spender, amountOrId) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/ERC404.sol\":5506:5814  {... */\n      pop\n        /* \"contracts/ERC404.sol\":5462:5953  if (amountOrId <= minted && amountOrId > 0) {... */\n      jump(tag_151)\n    tag_147:\n        /* \"contracts/ERC404.sol\":5845:5855  msg.sender */\n      caller\n        /* \"contracts/ERC404.sol\":5835:5856  allowance[msg.sender] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/ERC404.sol\":5835:5844  allowance */\n      0x05\n        /* \"contracts/ERC404.sol\":5835:5856  allowance[msg.sender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC404.sol\":5835:5865  allowance[msg.sender][spender] */\n      dup9\n      and\n      dup1\n      dup6\n      mstore\n      swap1\n      dup4\n      mstore\n      swap3\n      dup2\n      swap1\n      keccak256\n        /* \"contracts/ERC404.sol\":5835:5878  allowance[msg.sender][spender] = amountOrId */\n      dup7\n      swap1\n      sstore\n        /* \"contracts/ERC404.sol\":5900:5941  Approval(msg.sender, spender, amountOrId) */\n      mload\n        /* \"#utility.yul\":1838:1863   */\n      dup6\n      dup2\n      mstore\n        /* \"contracts/ERC404.sol\":5835:5865  allowance[msg.sender][spender] */\n      swap2\n      swap3\n        /* \"contracts/ERC404.sol\":5845:5855  msg.sender */\n      swap2\n        /* \"contracts/ERC404.sol\":5900:5941  Approval(msg.sender, spender, amountOrId) */\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap2\n        /* \"#utility.yul\":1811:1829   */\n      add\n        /* \"contracts/ERC404.sol\":5900:5941  Approval(msg.sender, spender, amountOrId) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/ERC404.sol\":5462:5953  if (amountOrId <= minted && amountOrId > 0) {... */\n    tag_151:\n      pop\n        /* \"contracts/ERC404.sol\":5972:5976  true */\n      0x01\n        /* \"contracts/ERC404.sol\":5342:5984  function approve(... */\n    tag_145:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/AaveGhoster.sol\":409:507  function setDataURI(string memory _dataURI) public onlyOwner {... */\n    tag_59:\n        /* \"contracts/ERC404.sol\":325:330  owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n        /* \"contracts/ERC404.sol\":311:321  msg.sender */\n      caller\n        /* \"contracts/ERC404.sol\":311:330  msg.sender != owner */\n      eq\n        /* \"contracts/ERC404.sol\":307:353  if (msg.sender != owner) revert Unauthorized() */\n      tag_154\n      jumpi\n        /* \"contracts/ERC404.sol\":339:353  Unauthorized() */\n      mload(0x40)\n      shl(0xe8, 0x82b429)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/ERC404.sol\":307:353  if (msg.sender != owner) revert Unauthorized() */\n    tag_154:\n        /* \"contracts/AaveGhoster.sol\":481:488  dataURI */\n      0x0c\n        /* \"contracts/AaveGhoster.sol\":481:499  dataURI = _dataURI */\n      tag_156\n        /* \"contracts/AaveGhoster.sol\":491:499  _dataURI */\n      dup3\n        /* \"contracts/AaveGhoster.sol\":481:488  dataURI */\n      dup3\n        /* \"contracts/AaveGhoster.sol\":481:499  dataURI = _dataURI */\n      tag_157\n      jump\t// in\n    tag_156:\n      pop\n        /* \"contracts/AaveGhoster.sol\":409:507  function setDataURI(string memory _dataURI) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/ERC404.sol\":6391:8107  function transferFrom(... */\n    tag_63:\n        /* \"contracts/ERC404.sol\":6537:6543  minted */\n      sload(0x03)\n        /* \"contracts/ERC404.sol\":6523:6533  amountOrId */\n      dup2\n        /* \"contracts/ERC404.sol\":6523:6543  amountOrId <= minted */\n      gt\n        /* \"contracts/ERC404.sol\":6519:8100  if (amountOrId <= minted) {... */\n      tag_159\n      jumpi\n        /* \"contracts/ERC404.sol\":6572:6592  _ownerOf[amountOrId] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/ERC404.sol\":6572:6580  _ownerOf */\n      0x08\n        /* \"contracts/ERC404.sol\":6572:6592  _ownerOf[amountOrId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC404.sol\":6564:6592  from != _ownerOf[amountOrId] */\n      dup5\n      dup2\n      and\n        /* \"contracts/ERC404.sol\":6572:6592  _ownerOf[amountOrId] */\n      swap2\n      and\n        /* \"contracts/ERC404.sol\":6564:6592  from != _ownerOf[amountOrId] */\n      eq\n        /* \"contracts/ERC404.sol\":6560:6651  if (from != _ownerOf[amountOrId]) {... */\n      tag_160\n      jumpi\n        /* \"contracts/ERC404.sol\":6620:6635  InvalidSender() */\n      mload(0x40)\n      shl(0xe1, 0x6edaef2f)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/ERC404.sol\":6560:6651  if (from != _ownerOf[amountOrId]) {... */\n    tag_160:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC404.sol\":6671:6687  to == address(0) */\n      dup3\n      and\n        /* \"contracts/ERC404.sol\":6667:6749  if (to == address(0)) {... */\n      tag_161\n      jumpi\n        /* \"contracts/ERC404.sol\":6715:6733  InvalidRecipient() */\n      mload(0x40)\n      shl(0xe1, 0x4e469669)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/ERC404.sol\":6667:6749  if (to == address(0)) {... */\n    tag_161:\n        /* \"contracts/ERC404.sol\":6787:6797  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC404.sol\":6787:6805  msg.sender != from */\n      dup5\n      and\n      eq\n      dup1\n      iszero\n      swap1\n        /* \"contracts/ERC404.sol\":6787:6861  msg.sender != from &&... */\n      tag_162\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC404.sol\":6827:6849  isApprovedForAll[from] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/ERC404.sol\":6827:6843  isApprovedForAll */\n      0x07\n        /* \"contracts/ERC404.sol\":6827:6849  isApprovedForAll[from] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/ERC404.sol\":6850:6860  msg.sender */\n      caller\n        /* \"contracts/ERC404.sol\":6827:6861  isApprovedForAll[from][msg.sender] */\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"contracts/ERC404.sol\":6826:6861  !isApprovedForAll[from][msg.sender] */\n      iszero\n        /* \"contracts/ERC404.sol\":6787:6861  msg.sender != from &&... */\n    tag_162:\n        /* \"contracts/ERC404.sol\":6787:6919  msg.sender != from &&... */\n      dup1\n      iszero\n      tag_163\n      jumpi\n      pop\n        /* \"contracts/ERC404.sol\":6896:6919  getApproved[amountOrId] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/ERC404.sol\":6896:6907  getApproved */\n      0x06\n        /* \"contracts/ERC404.sol\":6896:6919  getApproved[amountOrId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"contracts/ERC404.sol\":6882:6892  msg.sender */\n      caller\n        /* \"contracts/ERC404.sol\":6882:6919  msg.sender != getApproved[amountOrId] */\n      eq\n      iszero\n        /* \"contracts/ERC404.sol\":6787:6919  msg.sender != from &&... */\n    tag_163:\n        /* \"contracts/ERC404.sol\":6765:6991  if (... */\n      iszero\n      tag_164\n      jumpi\n        /* \"contracts/ERC404.sol\":6961:6975  Unauthorized() */\n      mload(0x40)\n      shl(0xe8, 0x82b429)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/ERC404.sol\":6765:6991  if (... */\n    tag_164:\n        /* \"contracts/ERC404.sol\":7026:7036  _getUnit() */\n      tag_165\n        /* \"contracts/ERC404.sol\":7026:7034  _getUnit */\n      tag_166\n        /* \"contracts/ERC404.sol\":7026:7036  _getUnit() */\n      jump\t// in\n    tag_165:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC404.sol\":7007:7022  balanceOf[from] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/ERC404.sol\":7007:7016  balanceOf */\n      0x04\n        /* \"contracts/ERC404.sol\":7007:7022  balanceOf[from] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"contracts/ERC404.sol\":7007:7036  balanceOf[from] -= _getUnit() */\n      dup1\n      sload\n        /* \"contracts/ERC404.sol\":7007:7022  balanceOf[from] */\n      swap1\n      swap2\n      swap1\n        /* \"contracts/ERC404.sol\":7007:7036  balanceOf[from] -= _getUnit() */\n      tag_167\n      swap1\n      dup5\n      swap1\n      tag_168\n      jump\t// in\n    tag_167:\n      swap1\n      swap2\n      sstore\n      pop\n        /* \"contracts/ERC404.sol\":7099:7109  _getUnit() */\n      tag_169\n      swap1\n      pop\n        /* \"contracts/ERC404.sol\":7099:7107  _getUnit */\n      tag_166\n        /* \"contracts/ERC404.sol\":7099:7109  _getUnit() */\n      jump\t// in\n    tag_169:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC404.sol\":7082:7095  balanceOf[to] */\n      dup1\n      dup5\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/ERC404.sol\":7082:7091  balanceOf */\n      0x04\n        /* \"contracts/ERC404.sol\":7082:7095  balanceOf[to] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/ERC404.sol\":7082:7109  balanceOf[to] += _getUnit() */\n      dup1\n      sload\n      swap1\n      swap7\n      add\n      swap1\n      swap6\n      sstore\n        /* \"contracts/ERC404.sol\":7141:7161  _ownerOf[amountOrId] */\n      dup6\n      dup3\n      mstore\n        /* \"contracts/ERC404.sol\":7141:7149  _ownerOf */\n      0x08\n        /* \"contracts/ERC404.sol\":7141:7161  _ownerOf[amountOrId] */\n      dup2\n      mstore\n      dup5\n      dup3\n      keccak256\n        /* \"contracts/ERC404.sol\":7141:7166  _ownerOf[amountOrId] = to */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      swap1\n      dup2\n      and\n      swap1\n      swap5\n      or\n      swap1\n      sstore\n        /* \"contracts/ERC404.sol\":7188:7199  getApproved */\n      0x06\n        /* \"contracts/ERC404.sol\":7188:7211  getApproved[amountOrId] */\n      dup2\n      mstore\n      dup5\n      dup3\n      keccak256\n        /* \"contracts/ERC404.sol\":7181:7211  delete getApproved[amountOrId] */\n      dup1\n      sload\n      swap1\n      swap4\n      and\n      swap1\n      swap3\n      sstore\n        /* \"contracts/ERC404.sol\":7289:7301  _owned[from] */\n      swap2\n      dup7\n      and\n      dup3\n      mstore\n        /* \"contracts/ERC404.sol\":7289:7295  _owned */\n      0x09\n        /* \"contracts/ERC404.sol\":7289:7301  _owned[from] */\n      swap1\n      mstore\n      swap1\n      dup2\n      keccak256\n        /* \"contracts/ERC404.sol\":7302:7321  _owned[from].length */\n      dup1\n      sload\n        /* \"contracts/ERC404.sol\":7302:7325  _owned[from].length - 1 */\n      tag_170\n      swap1\n      0x01\n      swap1\n      tag_168\n      jump\t// in\n    tag_170:\n        /* \"contracts/ERC404.sol\":7289:7326  _owned[from][_owned[from].length - 1] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_172\n      jumpi\n      tag_172\n      tag_173\n      jump\t// in\n    tag_172:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      keccak256\n      swap1\n      swap2\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC404.sol\":7341:7353  _owned[from] */\n      dup8\n      and\n      dup4\n      mstore\n        /* \"contracts/ERC404.sol\":7341:7347  _owned */\n      0x09\n        /* \"contracts/ERC404.sol\":7341:7353  _owned[from] */\n      dup3\n      mstore\n      0x40\n      dup1\n      dup5\n      keccak256\n        /* \"contracts/ERC404.sol\":7354:7377  _ownedIndex[amountOrId] */\n      dup7\n      dup6\n      mstore\n        /* \"contracts/ERC404.sol\":7354:7365  _ownedIndex */\n      0x0a\n        /* \"contracts/ERC404.sol\":7354:7377  _ownedIndex[amountOrId] */\n      swap1\n      swap4\n      mstore\n      swap1\n      swap3\n      keccak256\n      sload\n        /* \"contracts/ERC404.sol\":7341:7378  _owned[from][_ownedIndex[amountOrId]] */\n      dup2\n      sload\n        /* \"contracts/ERC404.sol\":7289:7326  _owned[from][_owned[from].length - 1] */\n      swap3\n      swap4\n      pop\n      dup4\n      swap3\n        /* \"contracts/ERC404.sol\":7341:7378  _owned[from][_ownedIndex[amountOrId]] */\n      dup2\n      lt\n      tag_176\n      jumpi\n      tag_176\n      tag_173\n      jump\t// in\n    tag_176:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      keccak256\n      swap1\n      swap2\n      add\n        /* \"contracts/ERC404.sol\":7341:7390  _owned[from][_ownedIndex[amountOrId]] = updatedId */\n      swap3\n      swap1\n      swap3\n      sstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC404.sol\":7425:7437  _owned[from] */\n      dup7\n      and\n      dup2\n      mstore\n        /* \"contracts/ERC404.sol\":7425:7431  _owned */\n      0x09\n        /* \"contracts/ERC404.sol\":7425:7437  _owned[from] */\n      swap1\n      swap2\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/ERC404.sol\":7425:7443  _owned[from].pop() */\n      dup1\n      sload\n      dup1\n      tag_179\n      jumpi\n      tag_179\n      tag_180\n      jump\t// in\n    tag_179:\n      0x00\n      dup3\n      dup2\n      mstore\n      0x20\n      dup1\n      dup3\n      keccak256\n      dup4\n      add\n      not(0x00)\n      swap1\n      dup2\n      add\n      dup4\n      swap1\n      sstore\n      swap1\n      swap3\n      add\n      swap1\n      swap3\n      sstore\n        /* \"contracts/ERC404.sol\":7529:7552  _ownedIndex[amountOrId] */\n      dup4\n      dup3\n      mstore\n        /* \"contracts/ERC404.sol\":7529:7540  _ownedIndex */\n      0x0a\n        /* \"contracts/ERC404.sol\":7529:7552  _ownedIndex[amountOrId] */\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sload\n        /* \"contracts/ERC404.sol\":7504:7526  _ownedIndex[updatedId] */\n      dup5\n      dup5\n      mstore\n      dup2\n      dup5\n      keccak256\n        /* \"contracts/ERC404.sol\":7504:7552  _ownedIndex[updatedId] = _ownedIndex[amountOrId] */\n      sstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC404.sol\":7606:7616  _owned[to] */\n      dup7\n      and\n      dup1\n      dup5\n      mstore\n        /* \"contracts/ERC404.sol\":7606:7612  _owned */\n      0x09\n        /* \"contracts/ERC404.sol\":7606:7616  _owned[to] */\n      dup4\n      mstore\n      swap1\n      dup4\n      keccak256\n        /* \"contracts/ERC404.sol\":7606:7633  _owned[to].push(amountOrId) */\n      dup1\n      sload\n        /* \"contracts/ERC404.sol\":7425:7443  _owned[from].pop() */\n      0x01\n        /* \"contracts/ERC404.sol\":7606:7633  _owned[to].push(amountOrId) */\n      dup2\n      dup2\n      add\n      dup4\n      sstore\n      dup3\n      dup7\n      mstore\n      swap4\n      dup6\n      keccak256\n      add\n      dup7\n      swap1\n      sstore\n        /* \"contracts/ERC404.sol\":7716:7726  _owned[to] */\n      swap3\n      mstore\n        /* \"contracts/ERC404.sol\":7716:7733  _owned[to].length */\n      swap1\n      sload\n        /* \"contracts/ERC404.sol\":7716:7737  _owned[to].length - 1 */\n      tag_183\n      swap2\n        /* \"contracts/ERC404.sol\":7425:7443  _owned[from].pop() */\n      swap1\n        /* \"contracts/ERC404.sol\":7716:7737  _owned[to].length - 1 */\n      tag_168\n      jump\t// in\n    tag_183:\n        /* \"contracts/ERC404.sol\":7690:7713  _ownedIndex[amountOrId] */\n      0x00\n      dup4\n      dup2\n      mstore\n        /* \"contracts/ERC404.sol\":7690:7701  _ownedIndex */\n      0x0a\n        /* \"contracts/ERC404.sol\":7690:7713  _ownedIndex[amountOrId] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"contracts/ERC404.sol\":7690:7737  _ownedIndex[amountOrId] = _owned[to].length - 1 */\n      swap3\n      swap1\n      swap3\n      sstore\n        /* \"contracts/ERC404.sol\":7759:7789  Transfer(from, to, amountOrId) */\n      swap1\n      mload\n        /* \"contracts/ERC404.sol\":7702:7712  amountOrId */\n      dup4\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC404.sol\":7759:7789  Transfer(from, to, amountOrId) */\n      dup1\n      dup8\n      and\n      swap3\n      swap1\n      dup9\n      and\n      swap2\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap2\n      log4\n        /* \"contracts/ERC404.sol\":7829:7831  to */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC404.sol\":7809:7844  ERC20Transfer(from, to, _getUnit()) */\n      and\n        /* \"contracts/ERC404.sol\":7823:7827  from */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC404.sol\":7809:7844  ERC20Transfer(from, to, _getUnit()) */\n      and\n      0xe59fdd36d0d223c0c7d996db7ad796880f45e1936cb0bb7ac102e7082e031487\n        /* \"contracts/ERC404.sol\":7833:7843  _getUnit() */\n      tag_184\n        /* \"contracts/ERC404.sol\":7833:7841  _getUnit */\n      tag_166\n        /* \"contracts/ERC404.sol\":7833:7843  _getUnit() */\n      jump\t// in\n    tag_184:\n        /* \"contracts/ERC404.sol\":7809:7844  ERC20Transfer(from, to, _getUnit()) */\n      mload(0x40)\n        /* \"#utility.yul\":1838:1863   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1826:1828   */\n      0x20\n        /* \"#utility.yul\":1811:1829   */\n      add\n        /* \"contracts/ERC404.sol\":7809:7844  ERC20Transfer(from, to, _getUnit()) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/ERC404.sol\":6545:7856  {... */\n      pop\n        /* \"contracts/ERC404.sol\":6391:8107  function transferFrom(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC404.sol\":6519:8100  if (amountOrId <= minted) {... */\n    tag_159:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC404.sol\":7895:7910  allowance[from] */\n      dup4\n      and\n        /* \"contracts/ERC404.sol\":7877:7892  uint256 allowed */\n      0x00\n        /* \"contracts/ERC404.sol\":7895:7910  allowance[from] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/ERC404.sol\":7895:7904  allowance */\n      0x05\n        /* \"contracts/ERC404.sol\":7895:7910  allowance[from] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/ERC404.sol\":7911:7921  msg.sender */\n      caller\n        /* \"contracts/ERC404.sol\":7895:7922  allowance[from][msg.sender] */\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n      not(0x00)\n        /* \"contracts/ERC404.sol\":7943:7971  allowed != type(uint256).max */\n      dup2\n      eq\n        /* \"contracts/ERC404.sol\":7939:8040  if (allowed != type(uint256).max)... */\n      tag_187\n      jumpi\n        /* \"contracts/ERC404.sol\":8020:8040  allowed - amountOrId */\n      tag_188\n        /* \"contracts/ERC404.sol\":8030:8040  amountOrId */\n      dup3\n        /* \"contracts/ERC404.sol\":8020:8027  allowed */\n      dup3\n        /* \"contracts/ERC404.sol\":8020:8040  allowed - amountOrId */\n      tag_168\n      jump\t// in\n    tag_188:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC404.sol\":7990:8005  allowance[from] */\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/ERC404.sol\":7990:7999  allowance */\n      0x05\n        /* \"contracts/ERC404.sol\":7990:8005  allowance[from] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/ERC404.sol\":8006:8016  msg.sender */\n      caller\n        /* \"contracts/ERC404.sol\":7990:8017  allowance[from][msg.sender] */\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n        /* \"contracts/ERC404.sol\":7990:8040  allowance[from][msg.sender] = allowed - amountOrId */\n      sstore\n        /* \"contracts/ERC404.sol\":7939:8040  if (allowed != type(uint256).max)... */\n    tag_187:\n        /* \"contracts/ERC404.sol\":8057:8088  _transfer(from, to, amountOrId) */\n      tag_189\n        /* \"contracts/ERC404.sol\":8067:8071  from */\n      dup5\n        /* \"contracts/ERC404.sol\":8073:8075  to */\n      dup5\n        /* \"contracts/ERC404.sol\":8077:8087  amountOrId */\n      dup5\n        /* \"contracts/ERC404.sol\":8057:8066  _transfer */\n      tag_190\n        /* \"contracts/ERC404.sol\":8057:8088  _transfer(from, to, amountOrId) */\n      jump\t// in\n    tag_189:\n      pop\n        /* \"contracts/ERC404.sol\":7862:8100  {... */\n      pop\n        /* \"contracts/ERC404.sol\":6519:8100  if (amountOrId <= minted) {... */\n    tag_186:\n        /* \"contracts/ERC404.sol\":6391:8107  function transferFrom(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC404.sol\":797:948  function revokeOwnership() public virtual onlyOwner {... */\n    tag_65:\n        /* \"contracts/ERC404.sol\":325:330  owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n        /* \"contracts/ERC404.sol\":311:321  msg.sender */\n      caller\n        /* \"contracts/ERC404.sol\":311:330  msg.sender != owner */\n      eq\n        /* \"contracts/ERC404.sol\":307:353  if (msg.sender != owner) revert Unauthorized() */\n      tag_192\n      jumpi\n        /* \"contracts/ERC404.sol\":339:353  Unauthorized() */\n      mload(0x40)\n      shl(0xe8, 0x82b429)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/ERC404.sol\":307:353  if (msg.sender != owner) revert Unauthorized() */\n    tag_192:\n        /* \"contracts/ERC404.sol\":876:877  0 */\n      0x00\n        /* \"contracts/ERC404.sol\":860:878  owner = address(0) */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      dup2\n      sstore\n        /* \"contracts/ERC404.sol\":896:940  OwnershipTransferred(msg.sender, address(0)) */\n      mload(0x40)\n        /* \"contracts/ERC404.sol\":917:927  msg.sender */\n      caller\n      swap1\n        /* \"contracts/ERC404.sol\":896:940  OwnershipTransferred(msg.sender, address(0)) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n        /* \"contracts/ERC404.sol\":876:877  0 */\n      dup4\n      swap1\n        /* \"contracts/ERC404.sol\":896:940  OwnershipTransferred(msg.sender, address(0)) */\n      log3\n        /* \"contracts/ERC404.sol\":797:948  function revokeOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/ERC404.sol\":8403:8808  function safeTransferFrom(... */\n    tag_72:\n        /* \"contracts/ERC404.sol\":8527:8553  transferFrom(from, to, id) */\n      tag_195\n        /* \"contracts/ERC404.sol\":8540:8544  from */\n      dup4\n        /* \"contracts/ERC404.sol\":8546:8548  to */\n      dup4\n        /* \"contracts/ERC404.sol\":8550:8552  id */\n      dup4\n        /* \"contracts/ERC404.sol\":8527:8539  transferFrom */\n      tag_63\n        /* \"contracts/ERC404.sol\":8527:8553  transferFrom(from, to, id) */\n      jump\t// in\n    tag_195:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC404.sol\":8584:8598  to.code.length */\n      dup3\n      and\n      extcodesize\n        /* \"contracts/ERC404.sol\":8584:8603  to.code.length != 0 */\n      iszero\n      dup1\n      iszero\n      swap1\n        /* \"contracts/ERC404.sol\":8584:8738  to.code.length != 0 &&... */\n      tag_196\n      jumpi\n      pop\n        /* \"contracts/ERC404.sol\":8620:8681  ERC721Receiver(to).onERC721Received(msg.sender, from, id, \"\") */\n      mload(0x40)\n      shl(0xe1, 0x0a85bd01)\n      dup1\n      dup3\n      mstore\n        /* \"contracts/ERC404.sol\":8656:8666  msg.sender */\n      caller\n        /* \"contracts/ERC404.sol\":8620:8681  ERC721Receiver(to).onERC721Received(msg.sender, from, id, \"\") */\n      0x04\n      dup4\n      add\n        /* \"#utility.yul\":9162:9196   */\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":9232:9247   */\n      dup6\n      dup2\n      and\n        /* \"#utility.yul\":9212:9230   */\n      0x24\n      dup5\n      add\n        /* \"#utility.yul\":9205:9248   */\n      mstore\n        /* \"#utility.yul\":9264:9282   */\n      0x44\n      dup4\n      add\n        /* \"#utility.yul\":9257:9291   */\n      dup5\n      swap1\n      mstore\n        /* \"#utility.yul\":9327:9330   */\n      0x80\n        /* \"#utility.yul\":9307:9325   */\n      0x64\n      dup5\n      add\n        /* \"#utility.yul\":9300:9331   */\n      mstore\n      0x00\n        /* \"#utility.yul\":9347:9366   */\n      0x84\n      dup5\n      add\n        /* \"#utility.yul\":9340:9370   */\n      mstore\n        /* \"contracts/ERC404.sol\":8698:8738  ERC721Receiver.onERC721Received.selector */\n      swap1\n      swap2\n        /* \"contracts/ERC404.sol\":8620:8655  ERC721Receiver(to).onERC721Received */\n      swap1\n      dup5\n      and\n      swap1\n        /* \"contracts/ERC404.sol\":8698:8738  ERC721Receiver.onERC721Received.selector */\n      0x150b7a02\n      swap1\n        /* \"#utility.yul\":9387:9406   */\n      0xa4\n      add\n        /* \"contracts/ERC404.sol\":8620:8681  ERC721Receiver(to).onERC721Received(msg.sender, from, id, \"\") */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_200\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_200:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_201\n      swap2\n      swap1\n      tag_202\n      jump\t// in\n    tag_201:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"contracts/ERC404.sol\":8620:8738  ERC721Receiver(to).onERC721Received(msg.sender, from, id, \"\") !=... */\n      and\n      eq\n      iszero\n        /* \"contracts/ERC404.sol\":8584:8738  to.code.length != 0 &&... */\n    tag_196:\n        /* \"contracts/ERC404.sol\":8566:8801  if (... */\n      iszero\n      tag_186\n      jumpi\n        /* \"contracts/ERC404.sol\":8772:8789  UnsafeRecipient() */\n      mload(0x40)\n      shl(0xe0, 0x3da63931)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/AaveGhoster.sol\":629:787  function setNameSymbol(... */\n    tag_79:\n        /* \"contracts/ERC404.sol\":325:330  owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n        /* \"contracts/ERC404.sol\":311:321  msg.sender */\n      caller\n        /* \"contracts/ERC404.sol\":311:330  msg.sender != owner */\n      eq\n        /* \"contracts/ERC404.sol\":307:353  if (msg.sender != owner) revert Unauthorized() */\n      tag_205\n      jumpi\n        /* \"contracts/ERC404.sol\":339:353  Unauthorized() */\n      mload(0x40)\n      shl(0xe8, 0x82b429)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/ERC404.sol\":307:353  if (msg.sender != owner) revert Unauthorized() */\n    tag_205:\n        /* \"contracts/AaveGhoster.sol\":749:779  _setNameSymbol(_name, _symbol) */\n      tag_156\n        /* \"contracts/AaveGhoster.sol\":764:769  _name */\n      dup3\n        /* \"contracts/AaveGhoster.sol\":771:778  _symbol */\n      dup3\n        /* \"contracts/AaveGhoster.sol\":749:763  _setNameSymbol */\n      tag_208\n        /* \"contracts/AaveGhoster.sol\":749:779  _setNameSymbol(_name, _symbol) */\n      jump\t// in\n        /* \"contracts/ERC404.sol\":4671:4782  function setWhitelist(address target, bool state) public onlyOwner {... */\n    tag_83:\n        /* \"contracts/ERC404.sol\":325:330  owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n        /* \"contracts/ERC404.sol\":311:321  msg.sender */\n      caller\n        /* \"contracts/ERC404.sol\":311:330  msg.sender != owner */\n      eq\n        /* \"contracts/ERC404.sol\":307:353  if (msg.sender != owner) revert Unauthorized() */\n      tag_210\n      jumpi\n        /* \"contracts/ERC404.sol\":339:353  Unauthorized() */\n      mload(0x40)\n      shl(0xe8, 0x82b429)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/ERC404.sol\":307:353  if (msg.sender != owner) revert Unauthorized() */\n    tag_210:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC404.sol\":4749:4766  whitelist[target] */\n      swap2\n      swap1\n      swap2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/ERC404.sol\":4749:4758  whitelist */\n      0x0b\n        /* \"contracts/ERC404.sol\":4749:4766  whitelist[target] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/ERC404.sol\":4749:4774  whitelist[target] = state */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap2\n      iszero\n      iszero\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"contracts/ERC404.sol\":4671:4782  function setWhitelist(address target, bool state) public onlyOwner {... */\n      jump\t// out\n        /* \"contracts/ERC404.sol\":4854:5047  function ownerOf(uint256 id) public view virtual returns (address owner) {... */\n    tag_86:\n        /* \"contracts/ERC404.sol\":4912:4925  address owner */\n      0x00\n        /* \"contracts/ERC404.sol\":4946:4958  _ownerOf[id] */\n      dup2\n      dup2\n      mstore\n        /* \"contracts/ERC404.sol\":4946:4954  _ownerOf */\n      0x08\n        /* \"contracts/ERC404.sol\":4946:4958  _ownerOf[id] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup1\n        /* \"contracts/ERC404.sol\":4971:5040  if (owner == address(0)) {... */\n      tag_213\n      jumpi\n        /* \"contracts/ERC404.sol\":5018:5028  NotFound() */\n      mload(0x40)\n      shl(0xe0, 0xc5723b51)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/ERC404.sol\":4971:5040  if (owner == address(0)) {... */\n    tag_213:\n        /* \"contracts/ERC404.sol\":4854:5047  function ownerOf(uint256 id) public view virtual returns (address owner) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/ERC404.sol\":2854:2874  string public symbol */\n    tag_97:\n      0x02\n      dup1\n      sload\n      tag_139\n      swap1\n      tag_140\n      jump\t// in\n        /* \"contracts/ERC404.sol\":6035:6242  function setApprovalForAll(address operator, bool approved) public virtual {... */\n    tag_105:\n        /* \"contracts/ERC404.sol\":6138:6148  msg.sender */\n      caller\n        /* \"contracts/ERC404.sol\":6121:6149  isApprovedForAll[msg.sender] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/ERC404.sol\":6121:6137  isApprovedForAll */\n      0x07\n        /* \"contracts/ERC404.sol\":6121:6149  isApprovedForAll[msg.sender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC404.sol\":6121:6159  isApprovedForAll[msg.sender][operator] */\n      dup8\n      and\n      dup1\n      dup6\n      mstore\n      swap1\n      dup4\n      mstore\n      swap3\n      dup2\n      swap1\n      keccak256\n        /* \"contracts/ERC404.sol\":6121:6170  isApprovedForAll[msg.sender][operator] = approved */\n      dup1\n      sload\n      not(0xff)\n      and\n      dup7\n      iszero\n      iszero\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"contracts/ERC404.sol\":6188:6234  ApprovalForAll(msg.sender, operator, approved) */\n      swap1\n      mload\n        /* \"#utility.yul\":1640:1681   */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/ERC404.sol\":6121:6159  isApprovedForAll[msg.sender][operator] */\n      swap2\n      swap3\n        /* \"contracts/ERC404.sol\":6138:6148  msg.sender */\n      swap2\n        /* \"contracts/ERC404.sol\":6188:6234  ApprovalForAll(msg.sender, operator, approved) */\n      0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31\n      swap2\n        /* \"#utility.yul\":1613:1631   */\n      add\n        /* \"contracts/ERC404.sol\":6188:6234  ApprovalForAll(msg.sender, operator, approved) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/ERC404.sol\":6035:6242  function setApprovalForAll(address operator, bool approved) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC404.sol\":8166:8326  function transfer(... */\n    tag_108:\n        /* \"contracts/ERC404.sol\":8261:8265  bool */\n      0x00\n        /* \"contracts/ERC404.sol\":8285:8318  _transfer(msg.sender, to, amount) */\n      tag_222\n        /* \"contracts/ERC404.sol\":8295:8305  msg.sender */\n      caller\n        /* \"contracts/ERC404.sol\":8307:8309  to */\n      dup5\n        /* \"contracts/ERC404.sol\":8311:8317  amount */\n      dup5\n        /* \"contracts/ERC404.sol\":8285:8294  _transfer */\n      tag_190\n        /* \"contracts/ERC404.sol\":8285:8318  _transfer(msg.sender, to, amount) */\n      jump\t// in\n    tag_222:\n        /* \"contracts/ERC404.sol\":8278:8318  return _transfer(msg.sender, to, amount) */\n      swap4\n        /* \"contracts/ERC404.sol\":8166:8326  function transfer(... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC404.sol\":8903:9340  function safeTransferFrom(... */\n    tag_113:\n        /* \"contracts/ERC404.sol\":9057:9083  transferFrom(from, to, id) */\n      tag_224\n        /* \"contracts/ERC404.sol\":9070:9074  from */\n      dup6\n        /* \"contracts/ERC404.sol\":9076:9078  to */\n      dup6\n        /* \"contracts/ERC404.sol\":9080:9082  id */\n      dup6\n        /* \"contracts/ERC404.sol\":9057:9069  transferFrom */\n      tag_63\n        /* \"contracts/ERC404.sol\":9057:9083  transferFrom(from, to, id) */\n      jump\t// in\n    tag_224:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC404.sol\":9114:9128  to.code.length */\n      dup5\n      and\n      extcodesize\n        /* \"contracts/ERC404.sol\":9114:9133  to.code.length != 0 */\n      iszero\n      dup1\n      iszero\n      swap1\n        /* \"contracts/ERC404.sol\":9114:9270  to.code.length != 0 &&... */\n      tag_225\n      jumpi\n      pop\n        /* \"contracts/ERC404.sol\":9150:9213  ERC721Receiver(to).onERC721Received(msg.sender, from, id, data) */\n      mload(0x40)\n      shl(0xe1, 0x0a85bd01)\n      dup1\n      dup3\n      mstore\n        /* \"contracts/ERC404.sol\":9230:9270  ERC721Receiver.onERC721Received.selector */\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC404.sol\":9150:9185  ERC721Receiver(to).onERC721Received */\n      dup7\n      and\n      swap1\n        /* \"contracts/ERC404.sol\":9230:9270  ERC721Receiver.onERC721Received.selector */\n      0x150b7a02\n      swap1\n        /* \"contracts/ERC404.sol\":9150:9213  ERC721Receiver(to).onERC721Received(msg.sender, from, id, data) */\n      tag_226\n      swap1\n        /* \"contracts/ERC404.sol\":9186:9196  msg.sender */\n      caller\n      swap1\n        /* \"contracts/ERC404.sol\":9198:9202  from */\n      dup11\n      swap1\n        /* \"contracts/ERC404.sol\":9204:9206  id */\n      dup10\n      swap1\n        /* \"contracts/ERC404.sol\":9208:9212  data */\n      dup10\n      swap1\n      dup10\n      swap1\n        /* \"contracts/ERC404.sol\":9150:9213  ERC721Receiver(to).onERC721Received(msg.sender, from, id, data) */\n      0x04\n      add\n      tag_227\n      jump\t// in\n    tag_226:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_229\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_229:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_230\n      swap2\n      swap1\n      tag_202\n      jump\t// in\n    tag_230:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"contracts/ERC404.sol\":9150:9270  ERC721Receiver(to).onERC721Received(msg.sender, from, id, data) !=... */\n      and\n      eq\n      iszero\n        /* \"contracts/ERC404.sol\":9114:9270  to.code.length != 0 &&... */\n    tag_225:\n        /* \"contracts/ERC404.sol\":9096:9333  if (... */\n      iszero\n      tag_189\n      jumpi\n        /* \"contracts/ERC404.sol\":9304:9321  UnsafeRecipient() */\n      mload(0x40)\n      shl(0xe0, 0x3da63931)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/AaveGhoster.sol\":795:3227  function tokenURI(uint256 id) public view override returns (string memory) {... */\n    tag_116:\n        /* \"contracts/AaveGhoster.sol\":855:868  string memory */\n      0x60\n        /* \"contracts/AaveGhoster.sol\":914:915  0 */\n      0x00\n        /* \"contracts/AaveGhoster.sol\":891:903  baseTokenURI */\n      0x0d\n        /* \"contracts/AaveGhoster.sol\":885:911  bytes(baseTokenURI).length */\n      dup1\n      sload\n      tag_233\n      swap1\n      tag_140\n      jump\t// in\n    tag_233:\n      swap1\n      pop\n        /* \"contracts/AaveGhoster.sol\":885:915  bytes(baseTokenURI).length > 0 */\n      gt\n        /* \"contracts/AaveGhoster.sol\":881:3220  if (bytes(baseTokenURI).length > 0) {... */\n      iszero\n      tag_234\n      jumpi\n        /* \"contracts/AaveGhoster.sol\":953:965  baseTokenURI */\n      0x0d\n        /* \"contracts/AaveGhoster.sol\":967:987  Strings.toString(id) */\n      tag_235\n        /* \"contracts/AaveGhoster.sol\":984:986  id */\n      dup4\n        /* \"contracts/AaveGhoster.sol\":967:983  Strings.toString */\n      tag_236\n        /* \"contracts/AaveGhoster.sol\":967:987  Strings.toString(id) */\n      jump\t// in\n    tag_235:\n        /* \"contracts/AaveGhoster.sol\":939:988  string.concat(baseTokenURI, Strings.toString(id)) */\n      add(0x20, mload(0x40))\n      tag_237\n      swap3\n      swap2\n      swap1\n      tag_238\n      jump\t// in\n    tag_237:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"contracts/AaveGhoster.sol\":932:988  return string.concat(baseTokenURI, Strings.toString(id)) */\n      swap1\n      pop\n        /* \"contracts/AaveGhoster.sol\":795:3227  function tokenURI(uint256 id) public view override returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/AaveGhoster.sol\":881:3220  if (bytes(baseTokenURI).length > 0) {... */\n    tag_234:\n        /* \"contracts/AaveGhoster.sol\":1021:1031  uint8 seed */\n      0x00\n        /* \"contracts/AaveGhoster.sol\":1074:1076  id */\n      dup3\n        /* \"contracts/AaveGhoster.sol\":1057:1077  abi.encodePacked(id) */\n      add(0x20, mload(0x40))\n      tag_240\n      swap2\n        /* \"#utility.yul\":11534:11553   */\n      dup2\n      mstore\n        /* \"#utility.yul\":11578:11580   */\n      0x20\n        /* \"#utility.yul\":11569:11581   */\n      add\n      swap1\n        /* \"#utility.yul\":11405:11587   */\n      jump\n        /* \"contracts/AaveGhoster.sol\":1057:1077  abi.encodePacked(id) */\n    tag_240:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"contracts/AaveGhoster.sol\":1047:1078  keccak256(abi.encodePacked(id)) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"contracts/AaveGhoster.sol\":1034:1080  uint8(bytes1(keccak256(abi.encodePacked(id)))) */\n      0xf8\n      shr\n        /* \"contracts/AaveGhoster.sol\":1021:1080  uint8 seed = uint8(bytes1(keccak256(abi.encodePacked(id)))) */\n      swap1\n      pop\n        /* \"contracts/AaveGhoster.sol\":1095:1114  string memory image */\n      0x60\n        /* \"contracts/AaveGhoster.sol\":1129:1148  string memory color */\n      dup1\n        /* \"contracts/AaveGhoster.sol\":1177:1180  100 */\n      0x64\n        /* \"contracts/AaveGhoster.sol\":1169:1173  seed */\n      dup4\n        /* \"contracts/AaveGhoster.sol\":1169:1180  seed <= 100 */\n      0xff\n      and\n      gt\n        /* \"contracts/AaveGhoster.sol\":1165:2225  if (seed <= 100) {... */\n      tag_242\n      jumpi\n        /* \"contracts/AaveGhoster.sol\":1201:1216  image = \"1.png\" */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x05\n      dup2\n      mstore\n      0x20\n      add\n      shl(0xd8, 0x312e706e67)\n      dup2\n      mstore\n      pop\n      swap2\n      pop\n        /* \"contracts/AaveGhoster.sol\":1235:1250  color = \"Green\" */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x05\n      dup2\n      mstore\n      0x20\n      add\n      shl(0xd9, 0x23b932b2b7)\n      dup2\n      mstore\n      pop\n      swap1\n      pop\n        /* \"contracts/AaveGhoster.sol\":1165:2225  if (seed <= 100) {... */\n      jump(tag_260)\n    tag_242:\n        /* \"contracts/AaveGhoster.sol\":1284:1287  160 */\n      0xa0\n        /* \"contracts/AaveGhoster.sol\":1276:1280  seed */\n      dup4\n        /* \"contracts/AaveGhoster.sol\":1276:1287  seed <= 160 */\n      0xff\n      and\n      gt\n        /* \"contracts/AaveGhoster.sol\":1272:2225  if (seed <= 160) {... */\n      tag_244\n      jumpi\n        /* \"contracts/AaveGhoster.sol\":1308:1323  image = \"2.png\" */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x05\n      dup2\n      mstore\n      0x20\n      add\n      shl(0xd8, 0x322e706e67)\n      dup2\n      mstore\n      pop\n      swap2\n      pop\n        /* \"contracts/AaveGhoster.sol\":1342:1356  color = \"Blue\" */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x04\n      dup2\n      mstore\n      0x20\n      add\n      shl(0xe0, 0x426c7565)\n      dup2\n      mstore\n      pop\n      swap1\n      pop\n        /* \"contracts/AaveGhoster.sol\":1272:2225  if (seed <= 160) {... */\n      jump(tag_260)\n    tag_244:\n        /* \"contracts/AaveGhoster.sol\":1390:1393  210 */\n      0xd2\n        /* \"contracts/AaveGhoster.sol\":1382:1386  seed */\n      dup4\n        /* \"contracts/AaveGhoster.sol\":1382:1393  seed <= 210 */\n      0xff\n      and\n      gt\n        /* \"contracts/AaveGhoster.sol\":1378:2225  if (seed <= 210) {... */\n      tag_246\n      jumpi\n        /* \"contracts/AaveGhoster.sol\":1414:1429  image = \"3.png\" */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x05\n      dup2\n      mstore\n      0x20\n      add\n      shl(0xd8, 0x332e706e67)\n      dup2\n      mstore\n      pop\n      swap2\n      pop\n        /* \"contracts/AaveGhoster.sol\":1448:1464  color = \"Purple\" */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x06\n      dup2\n      mstore\n      0x20\n      add\n      shl(0xd0, 0x507572706c65)\n      dup2\n      mstore\n      pop\n      swap1\n      pop\n        /* \"contracts/AaveGhoster.sol\":1378:2225  if (seed <= 210) {... */\n      jump(tag_260)\n    tag_246:\n        /* \"contracts/AaveGhoster.sol\":1498:1501  240 */\n      0xf0\n        /* \"contracts/AaveGhoster.sol\":1490:1494  seed */\n      dup4\n        /* \"contracts/AaveGhoster.sol\":1490:1501  seed <= 240 */\n      0xff\n      and\n      gt\n        /* \"contracts/AaveGhoster.sol\":1486:2225  if (seed <= 240) {... */\n      tag_248\n      jumpi\n        /* \"contracts/AaveGhoster.sol\":1522:1537  image = \"4.png\" */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x05\n      dup2\n      mstore\n      0x20\n      add\n      shl(0xd8, 0x342e706e67)\n      dup2\n      mstore\n      pop\n      swap2\n      pop\n        /* \"contracts/AaveGhoster.sol\":1556:1572  color = \"Orange\" */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x06\n      dup2\n      mstore\n      0x20\n      add\n      shl(0xd0, 0x4f72616e6765)\n      dup2\n      mstore\n      pop\n      swap1\n      pop\n        /* \"contracts/AaveGhoster.sol\":1486:2225  if (seed <= 240) {... */\n      jump(tag_260)\n    tag_248:\n        /* \"contracts/AaveGhoster.sol\":1606:1609  255 */\n      0xff\n        /* \"contracts/AaveGhoster.sol\":1598:1602  seed */\n      dup4\n        /* \"contracts/AaveGhoster.sol\":1598:1609  seed <= 255 */\n      0xff\n      and\n      gt\n        /* \"contracts/AaveGhoster.sol\":1594:2225  if (seed <= 255) {... */\n      tag_250\n      jumpi\n        /* \"contracts/AaveGhoster.sol\":1630:1645  image = \"5.png\" */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x05\n      dup2\n      mstore\n      0x20\n      add\n      shl(0xd8, 0x352e706e67)\n      dup2\n      mstore\n      pop\n      swap2\n      pop\n        /* \"contracts/AaveGhoster.sol\":1664:1677  color = \"Red\" */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x03\n      dup2\n      mstore\n      0x20\n      add\n      shl(0xea, 0x149959)\n      dup2\n      mstore\n      pop\n      swap1\n      pop\n        /* \"contracts/AaveGhoster.sol\":1594:2225  if (seed <= 255) {... */\n      jump(tag_260)\n    tag_250:\n        /* \"contracts/AaveGhoster.sol\":1710:1713  300 */\n      0x012c\n        /* \"contracts/AaveGhoster.sol\":1702:1706  seed */\n      dup4\n        /* \"contracts/AaveGhoster.sol\":1702:1713  seed <= 300 */\n      0xff\n      and\n      gt\n        /* \"contracts/AaveGhoster.sol\":1698:2225  if (seed <= 300) {... */\n      tag_252\n      jumpi\n        /* \"contracts/AaveGhoster.sol\":1734:1749  image = \"6.png\" */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x05\n      dup2\n      mstore\n      0x20\n      add\n      shl(0xd8, 0x362e706e67)\n      dup2\n      mstore\n      pop\n      swap2\n      pop\n        /* \"contracts/AaveGhoster.sol\":1768:1783  color = \"White\" */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x05\n      dup2\n      mstore\n      0x20\n      add\n      shl(0xd8, 0x5768697465)\n      dup2\n      mstore\n      pop\n      swap1\n      pop\n        /* \"contracts/AaveGhoster.sol\":1698:2225  if (seed <= 300) {... */\n      jump(tag_260)\n    tag_252:\n        /* \"contracts/AaveGhoster.sol\":1816:1819  360 */\n      0x0168\n        /* \"contracts/AaveGhoster.sol\":1808:1812  seed */\n      dup4\n        /* \"contracts/AaveGhoster.sol\":1808:1819  seed <= 360 */\n      0xff\n      and\n      gt\n        /* \"contracts/AaveGhoster.sol\":1804:2225  if (seed <= 360) {... */\n      tag_254\n      jumpi\n        /* \"contracts/AaveGhoster.sol\":1840:1855  image = \"7.png\" */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x05\n      dup2\n      mstore\n      0x20\n      add\n      shl(0xd8, 0x372e706e67)\n      dup2\n      mstore\n      pop\n      swap2\n      pop\n        /* \"contracts/AaveGhoster.sol\":1874:1889  color = \"Black\" */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x05\n      dup2\n      mstore\n      0x20\n      add\n      shl(0xd8, 0x426c61636b)\n      dup2\n      mstore\n      pop\n      swap1\n      pop\n        /* \"contracts/AaveGhoster.sol\":1804:2225  if (seed <= 360) {... */\n      jump(tag_260)\n    tag_254:\n        /* \"contracts/AaveGhoster.sol\":1922:1925  410 */\n      0x019a\n        /* \"contracts/AaveGhoster.sol\":1914:1918  seed */\n      dup4\n        /* \"contracts/AaveGhoster.sol\":1914:1925  seed <= 410 */\n      0xff\n      and\n      gt\n        /* \"contracts/AaveGhoster.sol\":1910:2225  if (seed <= 410) {... */\n      tag_256\n      jumpi\n        /* \"contracts/AaveGhoster.sol\":1946:1961  image = \"8.png\" */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x05\n      dup2\n      mstore\n      0x20\n      add\n      shl(0xd8, 0x382e706e67)\n      dup2\n      mstore\n      pop\n      swap2\n      pop\n        /* \"contracts/AaveGhoster.sol\":1980:1994  color = \"Pink\" */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x04\n      dup2\n      mstore\n      0x20\n      add\n      shl(0xe0, 0x50696e6b)\n      dup2\n      mstore\n      pop\n      swap1\n      pop\n        /* \"contracts/AaveGhoster.sol\":1910:2225  if (seed <= 410) {... */\n      jump(tag_260)\n    tag_256:\n        /* \"contracts/AaveGhoster.sol\":2027:2030  450 */\n      0x01c2\n        /* \"contracts/AaveGhoster.sol\":2019:2023  seed */\n      dup4\n        /* \"contracts/AaveGhoster.sol\":2019:2030  seed <= 450 */\n      0xff\n      and\n      gt\n        /* \"contracts/AaveGhoster.sol\":2015:2225  if (seed <= 450) {... */\n      tag_258\n      jumpi\n        /* \"contracts/AaveGhoster.sol\":2051:2066  image = \"9.png\" */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x05\n      dup2\n      mstore\n      0x20\n      add\n      shl(0xd8, 0x392e706e67)\n      dup2\n      mstore\n      pop\n      swap2\n      pop\n        /* \"contracts/AaveGhoster.sol\":2085:2101  color = \"Yellow\" */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x06\n      dup2\n      mstore\n      0x20\n      add\n      shl(0xd0, 0x59656c6c6f77)\n      dup2\n      mstore\n      pop\n      swap1\n      pop\n        /* \"contracts/AaveGhoster.sol\":2015:2225  if (seed <= 450) {... */\n      jump(tag_260)\n    tag_258:\n        /* \"contracts/AaveGhoster.sol\":2134:2137  510 */\n      0x01fe\n        /* \"contracts/AaveGhoster.sol\":2126:2130  seed */\n      dup4\n        /* \"contracts/AaveGhoster.sol\":2126:2137  seed <= 510 */\n      0xff\n      and\n      gt\n        /* \"contracts/AaveGhoster.sol\":2122:2225  if (seed <= 510) {... */\n      tag_260\n      jumpi\n        /* \"contracts/AaveGhoster.sol\":2158:2174  image = \"10.png\" */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x06\n      dup2\n      mstore\n      0x20\n      add\n      shl(0xd0, 0x31302e706e67)\n      dup2\n      mstore\n      pop\n      swap2\n      pop\n        /* \"contracts/AaveGhoster.sol\":2193:2209  color = \"Violet\" */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x06\n      dup2\n      mstore\n      0x20\n      add\n      shl(0xd2, 0x159a5bdb195d)\n      dup2\n      mstore\n      pop\n      swap1\n      pop\n        /* \"contracts/AaveGhoster.sol\":2122:2225  if (seed <= 510) {... */\n    tag_260:\n        /* \"contracts/AaveGhoster.sol\":2255:2281  string memory jsonPreImage */\n      0x00\n        /* \"contracts/AaveGhoster.sol\":2393:2413  Strings.toString(id) */\n      tag_261\n        /* \"contracts/AaveGhoster.sol\":2410:2412  id */\n      dup7\n        /* \"contracts/AaveGhoster.sol\":2393:2409  Strings.toString */\n      tag_236\n        /* \"contracts/AaveGhoster.sol\":2393:2413  Strings.toString(id) */\n      jump\t// in\n    tag_261:\n        /* \"contracts/AaveGhoster.sol\":2352:2414  string.concat('{\"name\": \"AaveGhoster #', Strings.toString(id)) */\n      add(0x20, mload(0x40))\n      tag_262\n      swap2\n      swap1\n      tag_263\n      jump\t// in\n    tag_262:\n      0x40\n      dup1\n      mload\n      not(0x1f)\n      dup2\n      dup5\n      sub\n      add\n      dup2\n      mstore\n      swap1\n      dup3\n      swap1\n      mstore\n        /* \"contracts/AaveGhoster.sol\":2316:2634  string.concat(... */\n      tag_264\n      swap2\n        /* \"contracts/AaveGhoster.sol\":2352:2414  string.concat('{\"name\": \"AaveGhoster #', Strings.toString(id)) */\n      0x20\n        /* \"contracts/AaveGhoster.sol\":2316:2634  string.concat(... */\n      add\n      tag_265\n      jump\t// in\n    tag_264:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"contracts/AaveGhoster.sol\":2667:2674  dataURI */\n      0x0c\n        /* \"contracts/AaveGhoster.sol\":2676:2681  image */\n      dup5\n        /* \"contracts/AaveGhoster.sol\":2653:2682  string.concat(dataURI, image) */\n      add(0x20, mload(0x40))\n      tag_266\n      swap3\n      swap2\n      swap1\n      tag_238\n      jump\t// in\n    tag_266:\n      0x40\n      dup1\n      mload\n      not(0x1f)\n      dup2\n      dup5\n      sub\n      add\n      dup2\n      mstore\n      swap1\n      dup3\n      swap1\n      mstore\n        /* \"contracts/AaveGhoster.sol\":2284:2697  string.concat(... */\n      tag_267\n      swap3\n      swap2\n        /* \"contracts/AaveGhoster.sol\":2653:2682  string.concat(dataURI, image) */\n      0x20\n        /* \"contracts/AaveGhoster.sol\":2284:2697  string.concat(... */\n      add\n      tag_268\n      jump\t// in\n    tag_267:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"contracts/AaveGhoster.sol\":2255:2697  string memory jsonPreImage = string.concat(... */\n      swap1\n      pop\n        /* \"contracts/AaveGhoster.sol\":2712:2739  string memory jsonPostImage */\n      0x00\n        /* \"contracts/AaveGhoster.sol\":2842:2847  color */\n      dup3\n        /* \"contracts/AaveGhoster.sol\":2742:2862  string.concat(... */\n      add(0x20, mload(0x40))\n      tag_269\n      swap2\n      swap1\n      tag_270\n      jump\t// in\n    tag_269:\n      0x40\n      dup1\n      mload\n      not(0x1f)\n      dup2\n      dup5\n      sub\n      add\n      dup2\n      mstore\n        /* \"contracts/AaveGhoster.sol\":2877:2914  string memory jsonPostTraits = '\"}]}' */\n      dup3\n      dup3\n      add\n      dup3\n      mstore\n      0x04\n      dup4\n      mstore\n      shl(0xe0, 0x227d5d7d)\n        /* \"contracts/AaveGhoster.sol\":2742:2862  string.concat(... */\n      0x20\n        /* \"contracts/AaveGhoster.sol\":2877:2914  string memory jsonPostTraits = '\"}]}' */\n      dup5\n      dup2\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"contracts/AaveGhoster.sol\":3083:3125  string.concat(jsonPreImage, jsonPostImage) */\n      swap2\n      mload\n        /* \"contracts/AaveGhoster.sol\":2742:2862  string.concat(... */\n      swap1\n      swap4\n      pop\n        /* \"contracts/AaveGhoster.sol\":3083:3125  string.concat(jsonPreImage, jsonPostImage) */\n      tag_271\n      swap2\n        /* \"contracts/AaveGhoster.sol\":3097:3109  jsonPreImage */\n      dup6\n      swap2\n        /* \"contracts/AaveGhoster.sol\":2742:2862  string.concat(... */\n      dup6\n      swap2\n        /* \"contracts/AaveGhoster.sol\":3083:3125  string.concat(jsonPreImage, jsonPostImage) */\n      add\n      tag_268\n      jump\t// in\n    tag_271:\n      0x40\n      dup1\n      mload\n      not(0x1f)\n      dup2\n      dup5\n      sub\n      add\n      dup2\n      mstore\n      swap1\n      dup3\n      swap1\n      mstore\n        /* \"contracts/AaveGhoster.sol\":3043:3189  string.concat(... */\n      tag_272\n      swap2\n        /* \"contracts/AaveGhoster.sol\":3152:3166  jsonPostTraits */\n      dup4\n      swap1\n        /* \"contracts/AaveGhoster.sol\":3083:3125  string.concat(jsonPreImage, jsonPostImage) */\n      0x20\n        /* \"contracts/AaveGhoster.sol\":3043:3189  string.concat(... */\n      add\n      tag_268\n      jump\t// in\n    tag_272:\n      0x40\n      dup1\n      mload\n      not(0x1f)\n      dup2\n      dup5\n      sub\n      add\n      dup2\n      mstore\n      swap1\n      dup3\n      swap1\n      mstore\n        /* \"contracts/AaveGhoster.sol\":2955:3208  string.concat(... */\n      tag_273\n      swap2\n        /* \"contracts/AaveGhoster.sol\":3043:3189  string.concat(... */\n      0x20\n        /* \"contracts/AaveGhoster.sol\":2955:3208  string.concat(... */\n      add\n      tag_274\n      jump\t// in\n    tag_273:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"contracts/AaveGhoster.sol\":2931:3208  return... */\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/AaveGhoster.sol\":795:3227  function tokenURI(uint256 id) public view override returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/AaveGhoster.sol\":211:237  string public baseTokenURI */\n    tag_119:\n      0x0d\n      dup1\n      sload\n      tag_139\n      swap1\n      tag_140\n      jump\t// in\n        /* \"contracts/AaveGhoster.sol\":515:621  function setTokenURI(string memory _tokenURI) public onlyOwner {... */\n    tag_128:\n        /* \"contracts/ERC404.sol\":325:330  owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n        /* \"contracts/ERC404.sol\":311:321  msg.sender */\n      caller\n        /* \"contracts/ERC404.sol\":311:330  msg.sender != owner */\n      eq\n        /* \"contracts/ERC404.sol\":307:353  if (msg.sender != owner) revert Unauthorized() */\n      tag_281\n      jumpi\n        /* \"contracts/ERC404.sol\":339:353  Unauthorized() */\n      mload(0x40)\n      shl(0xe8, 0x82b429)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/ERC404.sol\":307:353  if (msg.sender != owner) revert Unauthorized() */\n    tag_281:\n        /* \"contracts/AaveGhoster.sol\":589:601  baseTokenURI */\n      0x0d\n        /* \"contracts/AaveGhoster.sol\":589:613  baseTokenURI = _tokenURI */\n      tag_156\n        /* \"contracts/AaveGhoster.sol\":604:613  _tokenURI */\n      dup3\n        /* \"contracts/AaveGhoster.sol\":589:601  baseTokenURI */\n      dup3\n        /* \"contracts/AaveGhoster.sol\":589:613  baseTokenURI = _tokenURI */\n      tag_157\n      jump\t// in\n        /* \"contracts/AaveGhoster.sol\":183:204  string public dataURI */\n    tag_134:\n      0x0c\n      dup1\n      sload\n      tag_139\n      swap1\n      tag_140\n      jump\t// in\n        /* \"contracts/ERC404.sol\":570:789  function transferOwnership(address _owner) public virtual onlyOwner {... */\n    tag_138:\n        /* \"contracts/ERC404.sol\":325:330  owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n        /* \"contracts/ERC404.sol\":311:321  msg.sender */\n      caller\n        /* \"contracts/ERC404.sol\":311:330  msg.sender != owner */\n      eq\n        /* \"contracts/ERC404.sol\":307:353  if (msg.sender != owner) revert Unauthorized() */\n      tag_290\n      jumpi\n        /* \"contracts/ERC404.sol\":339:353  Unauthorized() */\n      mload(0x40)\n      shl(0xe8, 0x82b429)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/ERC404.sol\":307:353  if (msg.sender != owner) revert Unauthorized() */\n    tag_290:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC404.sol\":653:673  _owner == address(0) */\n      dup2\n      and\n        /* \"contracts/ERC404.sol\":649:696  if (_owner == address(0)) revert InvalidOwner() */\n      tag_292\n      jumpi\n        /* \"contracts/ERC404.sol\":682:696  InvalidOwner() */\n      mload(0x40)\n      shl(0xe0, 0x49e27cff)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/ERC404.sol\":649:696  if (_owner == address(0)) revert InvalidOwner() */\n    tag_292:\n        /* \"contracts/ERC404.sol\":709:714  owner */\n      0x00\n        /* \"contracts/ERC404.sol\":709:723  owner = _owner */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup4\n      and\n      swap1\n      dup2\n      or\n      dup3\n      sstore\n        /* \"contracts/ERC404.sol\":741:781  OwnershipTransferred(msg.sender, _owner) */\n      mload(0x40)\n        /* \"contracts/ERC404.sol\":709:723  owner = _owner */\n      swap1\n      swap2\n        /* \"contracts/ERC404.sol\":762:772  msg.sender */\n      caller\n      swap2\n        /* \"contracts/ERC404.sol\":741:781  OwnershipTransferred(msg.sender, _owner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap2\n        /* \"contracts/ERC404.sol\":709:714  owner */\n      swap1\n        /* \"contracts/ERC404.sol\":741:781  OwnershipTransferred(msg.sender, _owner) */\n      log3\n        /* \"contracts/ERC404.sol\":570:789  function transferOwnership(address _owner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/ERC404.sol\":10540:10632  function _getUnit() internal view returns (uint256) {... */\n    tag_166:\n        /* \"contracts/ERC404.sol\":10583:10590  uint256 */\n      0x00\n        /* \"contracts/ERC404.sol\":10610:10624  10 ** decimals */\n      tag_294\n        /* \"contracts/ERC404.sol\":10616:10624  decimals */\n      immutable(\"0xf2aed5d52b85e7b229d9a0bb201e12bdcbbc5fc133feb54c1cb531c3f7cf58ed\")\n        /* \"contracts/ERC404.sol\":10610:10612  10 */\n      0x0a\n        /* \"contracts/ERC404.sol\":10610:10624  10 ** decimals */\n      tag_295\n      jump\t// in\n    tag_294:\n        /* \"contracts/ERC404.sol\":10603:10624  return 10 ** decimals */\n      swap1\n      pop\n        /* \"contracts/ERC404.sol\":10540:10632  function _getUnit() internal view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/ERC404.sol\":9408:10501  function _transfer(... */\n    tag_190:\n        /* \"contracts/ERC404.sol\":9521:9525  bool */\n      0x00\n        /* \"contracts/ERC404.sol\":9538:9550  uint256 unit */\n      dup1\n        /* \"contracts/ERC404.sol\":9553:9563  _getUnit() */\n      tag_297\n        /* \"contracts/ERC404.sol\":9553:9561  _getUnit */\n      tag_166\n        /* \"contracts/ERC404.sol\":9553:9563  _getUnit() */\n      jump\t// in\n    tag_297:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC404.sol\":9604:9619  balanceOf[from] */\n      dup1\n      dup8\n      and\n        /* \"contracts/ERC404.sol\":9574:9601  uint256 balanceBeforeSender */\n      0x00\n        /* \"contracts/ERC404.sol\":9604:9619  balanceOf[from] */\n      dup2\n      dup2\n      mstore\n        /* \"contracts/ERC404.sol\":9604:9613  balanceOf */\n      0x04\n        /* \"contracts/ERC404.sol\":9604:9619  balanceOf[from] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n      dup1\n      sload\n        /* \"contracts/ERC404.sol\":9662:9675  balanceOf[to] */\n      swap5\n      dup11\n      and\n      dup4\n      mstore\n      swap1\n      dup3\n      keccak256\n      sload\n        /* \"contracts/ERC404.sol\":9688:9703  balanceOf[from] */\n      swap3\n      dup3\n      mstore\n        /* \"contracts/ERC404.sol\":9538:9563  uint256 unit = _getUnit() */\n      swap4\n      swap5\n      pop\n        /* \"contracts/ERC404.sol\":9604:9619  balanceOf[from] */\n      swap2\n      swap3\n        /* \"contracts/ERC404.sol\":9662:9675  balanceOf[to] */\n      swap1\n      swap2\n        /* \"contracts/ERC404.sol\":9707:9713  amount */\n      dup7\n      swap2\n        /* \"contracts/ERC404.sol\":9604:9619  balanceOf[from] */\n      swap1\n        /* \"contracts/ERC404.sol\":9688:9713  balanceOf[from] -= amount */\n      tag_298\n        /* \"contracts/ERC404.sol\":9707:9713  amount */\n      dup4\n        /* \"contracts/ERC404.sol\":9604:9619  balanceOf[from] */\n      dup7\n        /* \"contracts/ERC404.sol\":9688:9713  balanceOf[from] -= amount */\n      tag_168\n      jump\t// in\n    tag_298:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC404.sol\":9751:9764  balanceOf[to] */\n      dup1\n      dup8\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/ERC404.sol\":9751:9760  balanceOf */\n      0x04\n        /* \"contracts/ERC404.sol\":9751:9764  balanceOf[to] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/ERC404.sol\":9751:9774  balanceOf[to] += amount */\n      dup1\n      sload\n      dup11\n      add\n      swap1\n      sstore\n        /* \"contracts/ERC404.sol\":9859:9874  whitelist[from] */\n      swap3\n      dup11\n      and\n      dup3\n      mstore\n        /* \"contracts/ERC404.sol\":9859:9868  whitelist */\n      0x0b\n        /* \"contracts/ERC404.sol\":9859:9874  whitelist[from] */\n      swap1\n      mstore\n      keccak256\n      sload\n      0xff\n      and\n        /* \"contracts/ERC404.sol\":9854:10105  if (!whitelist[from]) {... */\n      tag_299\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC404.sol\":9965:9980  balanceOf[from] */\n      dup8\n      and\n        /* \"contracts/ERC404.sol\":9891:9913  uint256 tokens_to_burn */\n      0x00\n        /* \"contracts/ERC404.sol\":9965:9980  balanceOf[from] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/ERC404.sol\":9965:9974  balanceOf */\n      0x04\n        /* \"contracts/ERC404.sol\":9965:9980  balanceOf[from] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n        /* \"contracts/ERC404.sol\":9965:9987  balanceOf[from] / unit */\n      tag_300\n      swap1\n        /* \"contracts/ERC404.sol\":9983:9987  unit */\n      dup6\n      swap1\n        /* \"contracts/ERC404.sol\":9965:9987  balanceOf[from] / unit */\n      tag_301\n      jump\t// in\n    tag_300:\n        /* \"contracts/ERC404.sol\":9917:9943  balanceBeforeSender / unit */\n      tag_302\n        /* \"contracts/ERC404.sol\":9939:9943  unit */\n      dup6\n        /* \"contracts/ERC404.sol\":9917:9936  balanceBeforeSender */\n      dup6\n        /* \"contracts/ERC404.sol\":9917:9943  balanceBeforeSender / unit */\n      tag_301\n      jump\t// in\n    tag_302:\n        /* \"contracts/ERC404.sol\":9916:9988  (balanceBeforeSender / unit) -... */\n      tag_303\n      swap2\n      swap1\n      tag_168\n      jump\t// in\n    tag_303:\n        /* \"contracts/ERC404.sol\":9891:9988  uint256 tokens_to_burn = (balanceBeforeSender / unit) -... */\n      swap1\n      pop\n        /* \"contracts/ERC404.sol\":10008:10017  uint256 i */\n      0x00\n        /* \"contracts/ERC404.sol\":10003:10094  for (uint256 i = 0; i < tokens_to_burn; i++) {... */\n    tag_304:\n        /* \"contracts/ERC404.sol\":10027:10041  tokens_to_burn */\n      dup2\n        /* \"contracts/ERC404.sol\":10023:10024  i */\n      dup2\n        /* \"contracts/ERC404.sol\":10023:10041  i < tokens_to_burn */\n      lt\n        /* \"contracts/ERC404.sol\":10003:10094  for (uint256 i = 0; i < tokens_to_burn; i++) {... */\n      iszero\n      tag_305\n      jumpi\n        /* \"contracts/ERC404.sol\":10067:10078  _burn(from) */\n      tag_307\n        /* \"contracts/ERC404.sol\":10073:10077  from */\n      dup10\n        /* \"contracts/ERC404.sol\":10067:10072  _burn */\n      tag_308\n        /* \"contracts/ERC404.sol\":10067:10078  _burn(from) */\n      jump\t// in\n    tag_307:\n        /* \"contracts/ERC404.sol\":10043:10046  i++ */\n      0x01\n      add\n        /* \"contracts/ERC404.sol\":10003:10094  for (uint256 i = 0; i < tokens_to_burn; i++) {... */\n      jump(tag_304)\n    tag_305:\n      pop\n        /* \"contracts/ERC404.sol\":9876:10105  {... */\n      pop\n        /* \"contracts/ERC404.sol\":9854:10105  if (!whitelist[from]) {... */\n    tag_299:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC404.sol\":10181:10194  whitelist[to] */\n      dup7\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/ERC404.sol\":10181:10190  whitelist */\n      0x0b\n        /* \"contracts/ERC404.sol\":10181:10194  whitelist[to] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"contracts/ERC404.sol\":10176:10423  if (!whitelist[to]) {... */\n      tag_309\n      jumpi\n        /* \"contracts/ERC404.sol\":10211:10233  uint256 tokens_to_mint */\n      0x00\n        /* \"contracts/ERC404.sol\":10279:10307  balanceBeforeReceiver / unit */\n      tag_310\n        /* \"contracts/ERC404.sol\":10303:10307  unit */\n      dup5\n        /* \"contracts/ERC404.sol\":10279:10300  balanceBeforeReceiver */\n      dup4\n        /* \"contracts/ERC404.sol\":10279:10307  balanceBeforeReceiver / unit */\n      tag_301\n      jump\t// in\n    tag_310:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC404.sol\":10237:10250  balanceOf[to] */\n      dup9\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/ERC404.sol\":10237:10246  balanceOf */\n      0x04\n        /* \"contracts/ERC404.sol\":10237:10250  balanceOf[to] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/ERC404.sol\":10237:10257  balanceOf[to] / unit */\n      tag_311\n      swap1\n        /* \"contracts/ERC404.sol\":10253:10257  unit */\n      dup7\n      swap1\n        /* \"contracts/ERC404.sol\":10237:10257  balanceOf[to] / unit */\n      tag_301\n      jump\t// in\n    tag_311:\n        /* \"contracts/ERC404.sol\":10236:10308  (balanceOf[to] / unit) -... */\n      tag_312\n      swap2\n      swap1\n      tag_168\n      jump\t// in\n    tag_312:\n        /* \"contracts/ERC404.sol\":10211:10308  uint256 tokens_to_mint = (balanceOf[to] / unit) -... */\n      swap1\n      pop\n        /* \"contracts/ERC404.sol\":10328:10337  uint256 i */\n      0x00\n        /* \"contracts/ERC404.sol\":10323:10412  for (uint256 i = 0; i < tokens_to_mint; i++) {... */\n    tag_313:\n        /* \"contracts/ERC404.sol\":10347:10361  tokens_to_mint */\n      dup2\n        /* \"contracts/ERC404.sol\":10343:10344  i */\n      dup2\n        /* \"contracts/ERC404.sol\":10343:10361  i < tokens_to_mint */\n      lt\n        /* \"contracts/ERC404.sol\":10323:10412  for (uint256 i = 0; i < tokens_to_mint; i++) {... */\n      iszero\n      tag_314\n      jumpi\n        /* \"contracts/ERC404.sol\":10387:10396  _mint(to) */\n      tag_316\n        /* \"contracts/ERC404.sol\":10393:10395  to */\n      dup9\n        /* \"contracts/ERC404.sol\":10387:10392  _mint */\n      tag_317\n        /* \"contracts/ERC404.sol\":10387:10396  _mint(to) */\n      jump\t// in\n    tag_316:\n        /* \"contracts/ERC404.sol\":10363:10366  i++ */\n      0x01\n      add\n        /* \"contracts/ERC404.sol\":10323:10412  for (uint256 i = 0; i < tokens_to_mint; i++) {... */\n      jump(tag_313)\n    tag_314:\n      pop\n        /* \"contracts/ERC404.sol\":10196:10423  {... */\n      pop\n        /* \"contracts/ERC404.sol\":10176:10423  if (!whitelist[to]) {... */\n    tag_309:\n        /* \"contracts/ERC404.sol\":10460:10462  to */\n      dup6\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC404.sol\":10440:10471  ERC20Transfer(from, to, amount) */\n      and\n        /* \"contracts/ERC404.sol\":10454:10458  from */\n      dup8\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC404.sol\":10440:10471  ERC20Transfer(from, to, amount) */\n      and\n      0xe59fdd36d0d223c0c7d996db7ad796880f45e1936cb0bb7ac102e7082e031487\n        /* \"contracts/ERC404.sol\":10464:10470  amount */\n      dup8\n        /* \"contracts/ERC404.sol\":10440:10471  ERC20Transfer(from, to, amount) */\n      mload(0x40)\n      tag_318\n      swap2\n        /* \"#utility.yul\":1838:1863   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1826:1828   */\n      0x20\n        /* \"#utility.yul\":1811:1829   */\n      add\n      swap1\n        /* \"#utility.yul\":1692:1869   */\n      jump\n        /* \"contracts/ERC404.sol\":10440:10471  ERC20Transfer(from, to, amount) */\n    tag_318:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n      pop\n        /* \"contracts/ERC404.sol\":10489:10493  true */\n      0x01\n      swap7\n        /* \"contracts/ERC404.sol\":9408:10501  function _transfer(... */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC404.sol\":11503:11663  function _setNameSymbol(... */\n    tag_208:\n        /* \"contracts/ERC404.sol\":11616:11620  name */\n      0x01\n        /* \"contracts/ERC404.sol\":11616:11628  name = _name */\n      tag_320\n        /* \"contracts/ERC404.sol\":11623:11628  _name */\n      dup4\n        /* \"contracts/ERC404.sol\":11616:11620  name */\n      dup3\n        /* \"contracts/ERC404.sol\":11616:11628  name = _name */\n      tag_157\n      jump\t// in\n    tag_320:\n      pop\n        /* \"contracts/ERC404.sol\":11639:11645  symbol */\n      0x02\n        /* \"contracts/ERC404.sol\":11639:11655  symbol = _symbol */\n      tag_186\n        /* \"contracts/ERC404.sol\":11648:11655  _symbol */\n      dup3\n        /* \"contracts/ERC404.sol\":11639:11645  symbol */\n      dup3\n        /* \"contracts/ERC404.sol\":11639:11655  symbol = _symbol */\n      tag_157\n      jump\t// in\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":637:1335  function toString(uint256 value) internal pure returns (string memory) {... */\n    tag_236:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":693:706  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":742:756  uint256 length */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":759:776  Math.log10(value) */\n      tag_323\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":770:775  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":759:769  Math.log10 */\n      tag_324\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":759:776  Math.log10(value) */\n      jump\t// in\n    tag_323:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":779:780  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":759:780  Math.log10(value) + 1 */\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":742:780  uint256 length = Math.log10(value) + 1 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":794:814  string memory buffer */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":828:834  length */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":817:835  new string(length) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_326\n      jumpi\n      tag_326\n      tag_327\n      jump\t// in\n    tag_326:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x1f\n      add\n      not(0x1f)\n      and\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_328\n      jumpi\n      0x20\n      dup3\n      add\n      dup2\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n    tag_328:\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":794:835  string memory buffer = new string(length) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":955:983  add(buffer, add(32, length)) */\n      dup2\n      dup2\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":971:973  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":955:983  add(buffer, add(32, length)) */\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1010:1292  while (true) {... */\n    tag_329:\n      not(0x00)\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1041:1046  ptr-- */\n      add\n      shl(0x81, 0x181899199a1a9b1b9c1cb0b131b232b3)\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1175:1177  10 */\n      0x0a\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1164:1178  mod(value, 10) */\n      dup7\n      mod\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1159:1191  byte(mod(value, 10), HEX_DIGITS) */\n      byte\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1041:1046  ptr-- */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1146:1192  mstore8(ptr, byte(mod(value, 10), HEX_DIGITS)) */\n      mstore8\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1236:1238  10 */\n      0x0a\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1227:1238  value /= 10 */\n      dup6\n      div\n      swap5\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1256:1277  if (value == 0) break */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1010:1292  while (true) {... */\n      tag_329\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1256:1277  if (value == 0) break */\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1312:1318  buffer */\n      swap4\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":637:1335  function toString(uint256 value) internal pure returns (string memory) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC404.sol\":11122:11495  function _burn(address from) internal virtual {... */\n    tag_308:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC404.sol\":11183:11201  from == address(0) */\n      dup2\n      and\n        /* \"contracts/ERC404.sol\":11179:11252  if (from == address(0)) {... */\n      tag_336\n      jumpi\n        /* \"contracts/ERC404.sol\":11225:11240  InvalidSender() */\n      mload(0x40)\n      shl(0xe1, 0x6edaef2f)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/ERC404.sol\":11179:11252  if (from == address(0)) {... */\n    tag_336:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC404.sol\":11277:11289  _owned[from] */\n      dup2\n      and\n        /* \"contracts/ERC404.sol\":11264:11274  uint256 id */\n      0x00\n        /* \"contracts/ERC404.sol\":11277:11289  _owned[from] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/ERC404.sol\":11277:11283  _owned */\n      0x09\n        /* \"contracts/ERC404.sol\":11277:11289  _owned[from] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"contracts/ERC404.sol\":11290:11309  _owned[from].length */\n      dup1\n      sload\n        /* \"contracts/ERC404.sol\":11290:11313  _owned[from].length - 1 */\n      tag_337\n      swap1\n        /* \"contracts/ERC404.sol\":11312:11313  1 */\n      0x01\n      swap1\n        /* \"contracts/ERC404.sol\":11290:11313  _owned[from].length - 1 */\n      tag_168\n      jump\t// in\n    tag_337:\n        /* \"contracts/ERC404.sol\":11277:11314  _owned[from][_owned[from].length - 1] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_339\n      jumpi\n      tag_339\n      tag_173\n      jump\t// in\n    tag_339:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      sload\n        /* \"contracts/ERC404.sol\":11264:11314  uint256 id = _owned[from][_owned[from].length - 1] */\n      swap1\n      pop\n        /* \"contracts/ERC404.sol\":11325:11331  _owned */\n      0x09\n        /* \"contracts/ERC404.sol\":11325:11337  _owned[from] */\n      0x00\n        /* \"contracts/ERC404.sol\":11332:11336  from */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC404.sol\":11325:11337  _owned[from] */\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/ERC404.sol\":11325:11343  _owned[from].pop() */\n      dup1\n      sload\n      dup1\n      tag_342\n      jumpi\n      tag_342\n      tag_180\n      jump\t// in\n    tag_342:\n      0x00\n      dup3\n      dup2\n      mstore\n      0x20\n      dup1\n      dup3\n      keccak256\n      dup4\n      add\n      not(0x00)\n      swap1\n      dup2\n      add\n      dup4\n      swap1\n      sstore\n      swap1\n      swap3\n      add\n      swap1\n      swap3\n      sstore\n        /* \"contracts/ERC404.sol\":11361:11376  _ownedIndex[id] */\n      dup3\n      dup3\n      mstore\n        /* \"contracts/ERC404.sol\":11361:11372  _ownedIndex */\n      0x0a\n        /* \"contracts/ERC404.sol\":11361:11376  _ownedIndex[id] */\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/ERC404.sol\":11354:11376  delete _ownedIndex[id] */\n      dup4\n      swap1\n      sstore\n        /* \"contracts/ERC404.sol\":11394:11402  _ownerOf */\n      0x08\n        /* \"contracts/ERC404.sol\":11394:11406  _ownerOf[id] */\n      dup3\n      mstore\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/ERC404.sol\":11387:11406  delete _ownerOf[id] */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      swap1\n      dup2\n      and\n      swap1\n      swap2\n      sstore\n        /* \"contracts/ERC404.sol\":11424:11435  getApproved */\n      0x06\n        /* \"contracts/ERC404.sol\":11424:11439  getApproved[id] */\n      swap1\n      swap3\n      mstore\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/ERC404.sol\":11417:11439  delete getApproved[id] */\n      dup1\n      sload\n      swap1\n      swap3\n      and\n      swap1\n      swap2\n      sstore\n        /* \"contracts/ERC404.sol\":11457:11487  Transfer(from, address(0), id) */\n      mload\n        /* \"contracts/ERC404.sol\":11373:11375  id */\n      dup3\n      swap2\n        /* \"contracts/ERC404.sol\":11325:11343  _owned[from].pop() */\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC404.sol\":11457:11487  Transfer(from, address(0), id) */\n      dup6\n      and\n      swap1\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap1\n        /* \"contracts/ERC404.sol\":11325:11343  _owned[from].pop() */\n      dup4\n      swap1\n        /* \"contracts/ERC404.sol\":11457:11487  Transfer(from, address(0), id) */\n      log4\n        /* \"contracts/ERC404.sol\":11168:11495  {... */\n      pop\n        /* \"contracts/ERC404.sol\":11122:11495  function _burn(address from) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"contracts/ERC404.sol\":10640:11114  function _mint(address to) internal virtual {... */\n    tag_317:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC404.sol\":10699:10715  to == address(0) */\n      dup2\n      and\n        /* \"contracts/ERC404.sol\":10695:10769  if (to == address(0)) {... */\n      tag_345\n      jumpi\n        /* \"contracts/ERC404.sol\":10739:10757  InvalidRecipient() */\n      mload(0x40)\n      shl(0xe1, 0x4e469669)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/ERC404.sol\":10695:10769  if (to == address(0)) {... */\n    tag_345:\n        /* \"contracts/ERC404.sol\":10806:10812  minted */\n      0x03\n        /* \"contracts/ERC404.sol\":10806:10814  minted++ */\n      dup1\n      sload\n      0x01\n      add\n      swap1\n      dup2\n      swap1\n      sstore\n        /* \"contracts/ERC404.sol\":10806:10812  minted */\n      0x00\n        /* \"contracts/ERC404.sol\":10874:10886  _ownerOf[id] */\n      dup2\n      dup2\n      mstore\n        /* \"contracts/ERC404.sol\":10874:10882  _ownerOf */\n      0x08\n        /* \"contracts/ERC404.sol\":10874:10886  _ownerOf[id] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"contracts/ERC404.sol\":10874:10900  _ownerOf[id] != address(0) */\n      iszero\n        /* \"contracts/ERC404.sol\":10870:10951  if (_ownerOf[id] != address(0)) {... */\n      tag_346\n      jumpi\n        /* \"contracts/ERC404.sol\":10924:10939  AlreadyExists() */\n      mload(0x40)\n      shl(0xe1, 0x119b4fd3)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/ERC404.sol\":10870:10951  if (_ownerOf[id] != address(0)) {... */\n    tag_346:\n        /* \"contracts/ERC404.sol\":10963:10975  _ownerOf[id] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/ERC404.sol\":10963:10971  _ownerOf */\n      0x08\n        /* \"contracts/ERC404.sol\":10963:10975  _ownerOf[id] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/ERC404.sol\":10963:10980  _ownerOf[id] = to */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup8\n      and\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"contracts/ERC404.sol\":10991:11001  _owned[to] */\n      dup1\n      dup5\n      mstore\n        /* \"contracts/ERC404.sol\":10991:10997  _owned */\n      0x09\n        /* \"contracts/ERC404.sol\":10991:11001  _owned[to] */\n      dup4\n      mstore\n      swap1\n      dup4\n      keccak256\n        /* \"contracts/ERC404.sol\":10991:11010  _owned[to].push(id) */\n      dup1\n      sload\n      0x01\n      dup2\n      dup2\n      add\n      dup4\n      sstore\n      dup3\n      dup7\n      mstore\n      swap4\n      dup6\n      keccak256\n      add\n      dup6\n      swap1\n      sstore\n        /* \"contracts/ERC404.sol\":11039:11049  _owned[to] */\n      swap3\n      mstore\n        /* \"contracts/ERC404.sol\":11039:11056  _owned[to].length */\n      swap1\n      sload\n        /* \"contracts/ERC404.sol\":11039:11060  _owned[to].length - 1 */\n      tag_348\n      swap2\n      swap1\n      tag_168\n      jump\t// in\n    tag_348:\n        /* \"contracts/ERC404.sol\":11021:11036  _ownedIndex[id] */\n      0x00\n      dup3\n      dup2\n      mstore\n        /* \"contracts/ERC404.sol\":11021:11032  _ownedIndex */\n      0x0a\n        /* \"contracts/ERC404.sol\":11021:11036  _ownedIndex[id] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"contracts/ERC404.sol\":11021:11060  _ownedIndex[id] = _owned[to].length - 1 */\n      swap3\n      swap1\n      swap3\n      sstore\n        /* \"contracts/ERC404.sol\":11078:11106  Transfer(address(0), to, id) */\n      swap1\n      mload\n        /* \"contracts/ERC404.sol\":11033:11035  id */\n      dup3\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC404.sol\":11078:11106  Transfer(address(0), to, id) */\n      dup6\n      and\n      swap2\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap1\n        /* \"contracts/ERC404.sol\":11021:11036  _ownedIndex[id] */\n      dup3\n      swap1\n        /* \"contracts/ERC404.sol\":11078:11106  Transfer(address(0), to, id) */\n      log4\n        /* \"contracts/ERC404.sol\":10684:11114  {... */\n      pop\n        /* \"contracts/ERC404.sol\":10640:11114  function _mint(address to) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12214:13130  function log10(uint256 value) internal pure returns (uint256) {... */\n    tag_324:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12267:12274  uint256 */\n      0x00\n      dup1\n      shl(0x40, 0x184f03e93ff9f4daa797ed6e38ed64bf6a1f01)\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12342:12359  value >= 10 ** 64 */\n      dup4\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12338:12441  if (value >= 10 ** 64) {... */\n      tag_350\n      jumpi\n      shl(0x40, 0x184f03e93ff9f4daa797ed6e38ed64bf6a1f01)\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12379:12396  value /= 10 ** 64 */\n      dup4\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12424:12426  64 */\n      0x40\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12414:12426  result += 64 */\n      add\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12338:12441  if (value >= 10 ** 64) {... */\n    tag_350:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12467:12475  10 ** 32 */\n      0x04ee2d6d415b85acef8100000000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12458:12463  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12458:12475  value >= 10 ** 32 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12454:12557  if (value >= 10 ** 32) {... */\n      tag_353\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12504:12512  10 ** 32 */\n      0x04ee2d6d415b85acef8100000000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12495:12512  value /= 10 ** 32 */\n      dup4\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12540:12542  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12530:12542  result += 32 */\n      add\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12454:12557  if (value >= 10 ** 32) {... */\n    tag_353:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12583:12591  10 ** 16 */\n      0x2386f26fc10000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12574:12579  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12574:12591  value >= 10 ** 16 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12570:12673  if (value >= 10 ** 16) {... */\n      tag_356\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12620:12628  10 ** 16 */\n      0x2386f26fc10000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12611:12628  value /= 10 ** 16 */\n      dup4\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12656:12658  16 */\n      0x10\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12646:12658  result += 16 */\n      add\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12570:12673  if (value >= 10 ** 16) {... */\n    tag_356:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12699:12706  10 ** 8 */\n      0x05f5e100\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12690:12695  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12690:12706  value >= 10 ** 8 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12686:12786  if (value >= 10 ** 8) {... */\n      tag_359\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12735:12742  10 ** 8 */\n      0x05f5e100\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12726:12742  value /= 10 ** 8 */\n      dup4\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12770:12771  8 */\n      0x08\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12760:12771  result += 8 */\n      add\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12686:12786  if (value >= 10 ** 8) {... */\n    tag_359:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12812:12819  10 ** 4 */\n      0x2710\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12803:12808  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12803:12819  value >= 10 ** 4 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12799:12899  if (value >= 10 ** 4) {... */\n      tag_362\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12848:12855  10 ** 4 */\n      0x2710\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12839:12855  value /= 10 ** 4 */\n      dup4\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12883:12884  4 */\n      0x04\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12873:12884  result += 4 */\n      add\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12799:12899  if (value >= 10 ** 4) {... */\n    tag_362:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12925:12932  10 ** 2 */\n      0x64\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12916:12921  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12916:12932  value >= 10 ** 2 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12912:13012  if (value >= 10 ** 2) {... */\n      tag_365\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12961:12968  10 ** 2 */\n      0x64\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12952:12968  value /= 10 ** 2 */\n      dup4\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12996:12997  2 */\n      0x02\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12986:12997  result += 2 */\n      add\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12912:13012  if (value >= 10 ** 2) {... */\n    tag_365:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13038:13045  10 ** 1 */\n      0x0a\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13029:13034  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13029:13045  value >= 10 ** 1 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13025:13091  if (value >= 10 ** 1) {... */\n      tag_145\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13075:13076  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13065:13076  result += 1 */\n      add\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13117:13123  result */\n      swap3\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12214:13130  function log10(uint256 value) internal pure returns (uint256) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:264   */\n    tag_369:\n        /* \"#utility.yul\":99:100   */\n      0x00\n        /* \"#utility.yul\":109:222   */\n    tag_380:\n        /* \"#utility.yul\":123:129   */\n      dup4\n        /* \"#utility.yul\":120:121   */\n      dup2\n        /* \"#utility.yul\":117:130   */\n      lt\n        /* \"#utility.yul\":109:222   */\n      iszero\n      tag_382\n      jumpi\n        /* \"#utility.yul\":199:210   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":193:211   */\n      mload\n        /* \"#utility.yul\":180:191   */\n      dup4\n      dup3\n      add\n        /* \"#utility.yul\":173:212   */\n      mstore\n        /* \"#utility.yul\":145:147   */\n      0x20\n        /* \"#utility.yul\":138:148   */\n      add\n        /* \"#utility.yul\":109:222   */\n      jump(tag_380)\n    tag_382:\n      pop\n      pop\n        /* \"#utility.yul\":256:257   */\n      0x00\n        /* \"#utility.yul\":238:254   */\n      swap2\n      add\n        /* \"#utility.yul\":231:258   */\n      mstore\n        /* \"#utility.yul\":14:264   */\n      jump\t// out\n        /* \"#utility.yul\":269:665   */\n    tag_39:\n        /* \"#utility.yul\":418:420   */\n      0x20\n        /* \"#utility.yul\":407:416   */\n      dup2\n        /* \"#utility.yul\":400:421   */\n      mstore\n        /* \"#utility.yul\":381:385   */\n      0x00\n        /* \"#utility.yul\":450:456   */\n      dup3\n        /* \"#utility.yul\":444:457   */\n      mload\n        /* \"#utility.yul\":493:499   */\n      dup1\n        /* \"#utility.yul\":488:490   */\n      0x20\n        /* \"#utility.yul\":477:486   */\n      dup5\n        /* \"#utility.yul\":473:491   */\n      add\n        /* \"#utility.yul\":466:500   */\n      mstore\n        /* \"#utility.yul\":509:588   */\n      tag_384\n        /* \"#utility.yul\":581:587   */\n      dup2\n        /* \"#utility.yul\":576:578   */\n      0x40\n        /* \"#utility.yul\":565:574   */\n      dup6\n        /* \"#utility.yul\":561:579   */\n      add\n        /* \"#utility.yul\":556:558   */\n      0x20\n        /* \"#utility.yul\":548:554   */\n      dup8\n        /* \"#utility.yul\":544:559   */\n      add\n        /* \"#utility.yul\":509:588   */\n      tag_369\n      jump\t// in\n    tag_384:\n        /* \"#utility.yul\":649:651   */\n      0x1f\n        /* \"#utility.yul\":628:643   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":624:653   */\n      and\n        /* \"#utility.yul\":609:654   */\n      swap2\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":656:658   */\n      0x40\n        /* \"#utility.yul\":605:659   */\n      add\n      swap3\n        /* \"#utility.yul\":269:665   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":670:850   */\n    tag_42:\n        /* \"#utility.yul\":729:735   */\n      0x00\n        /* \"#utility.yul\":782:784   */\n      0x20\n        /* \"#utility.yul\":770:779   */\n      dup3\n        /* \"#utility.yul\":761:768   */\n      dup5\n        /* \"#utility.yul\":757:780   */\n      sub\n        /* \"#utility.yul\":753:785   */\n      slt\n        /* \"#utility.yul\":750:802   */\n      iszero\n      tag_386\n      jumpi\n        /* \"#utility.yul\":798:799   */\n      0x00\n        /* \"#utility.yul\":795:796   */\n      dup1\n        /* \"#utility.yul\":788:800   */\n      revert\n        /* \"#utility.yul\":750:802   */\n    tag_386:\n      pop\n        /* \"#utility.yul\":821:844   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":670:850   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1063:1236   */\n    tag_370:\n        /* \"#utility.yul\":1131:1151   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1180:1211   */\n      dup2\n      and\n        /* \"#utility.yul\":1170:1212   */\n      dup2\n      eq\n        /* \"#utility.yul\":1160:1230   */\n      tag_213\n      jumpi\n        /* \"#utility.yul\":1226:1227   */\n      0x00\n        /* \"#utility.yul\":1223:1224   */\n      dup1\n        /* \"#utility.yul\":1216:1228   */\n      revert\n        /* \"#utility.yul\":1241:1495   */\n    tag_48:\n        /* \"#utility.yul\":1309:1315   */\n      0x00\n        /* \"#utility.yul\":1317:1323   */\n      dup1\n        /* \"#utility.yul\":1370:1372   */\n      0x40\n        /* \"#utility.yul\":1358:1367   */\n      dup4\n        /* \"#utility.yul\":1349:1356   */\n      dup6\n        /* \"#utility.yul\":1345:1368   */\n      sub\n        /* \"#utility.yul\":1341:1373   */\n      slt\n        /* \"#utility.yul\":1338:1390   */\n      iszero\n      tag_391\n      jumpi\n        /* \"#utility.yul\":1386:1387   */\n      0x00\n        /* \"#utility.yul\":1383:1384   */\n      dup1\n        /* \"#utility.yul\":1376:1388   */\n      revert\n        /* \"#utility.yul\":1338:1390   */\n    tag_391:\n        /* \"#utility.yul\":1409:1438   */\n      tag_392\n        /* \"#utility.yul\":1428:1437   */\n      dup4\n        /* \"#utility.yul\":1409:1438   */\n      tag_370\n      jump\t// in\n    tag_392:\n        /* \"#utility.yul\":1399:1438   */\n      swap5\n        /* \"#utility.yul\":1485:1487   */\n      0x20\n        /* \"#utility.yul\":1470:1488   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":1457:1489   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":1241:1495   */\n      jump\t// out\n        /* \"#utility.yul\":1874:2001   */\n    tag_327:\n        /* \"#utility.yul\":1935:1945   */\n      0x4e487b71\n        /* \"#utility.yul\":1930:1933   */\n      0xe0\n        /* \"#utility.yul\":1926:1946   */\n      shl\n        /* \"#utility.yul\":1923:1924   */\n      0x00\n        /* \"#utility.yul\":1916:1947   */\n      mstore\n        /* \"#utility.yul\":1966:1970   */\n      0x41\n        /* \"#utility.yul\":1963:1964   */\n      0x04\n        /* \"#utility.yul\":1956:1971   */\n      mstore\n        /* \"#utility.yul\":1990:1994   */\n      0x24\n        /* \"#utility.yul\":1987:1988   */\n      0x00\n        /* \"#utility.yul\":1980:1995   */\n      revert\n        /* \"#utility.yul\":2006:2725   */\n    tag_371:\n        /* \"#utility.yul\":2049:2054   */\n      0x00\n        /* \"#utility.yul\":2102:2105   */\n      dup3\n        /* \"#utility.yul\":2095:2099   */\n      0x1f\n        /* \"#utility.yul\":2087:2093   */\n      dup4\n        /* \"#utility.yul\":2083:2100   */\n      add\n        /* \"#utility.yul\":2079:2106   */\n      slt\n        /* \"#utility.yul\":2069:2124   */\n      tag_397\n      jumpi\n        /* \"#utility.yul\":2120:2121   */\n      0x00\n        /* \"#utility.yul\":2117:2118   */\n      dup1\n        /* \"#utility.yul\":2110:2122   */\n      revert\n        /* \"#utility.yul\":2069:2124   */\n    tag_397:\n        /* \"#utility.yul\":2156:2162   */\n      dup2\n        /* \"#utility.yul\":2143:2163   */\n      calldataload\n        /* \"#utility.yul\":2182:2200   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2219:2221   */\n      dup1\n        /* \"#utility.yul\":2215:2217   */\n      dup3\n        /* \"#utility.yul\":2212:2222   */\n      gt\n        /* \"#utility.yul\":2209:2245   */\n      iszero\n      tag_399\n      jumpi\n        /* \"#utility.yul\":2225:2243   */\n      tag_399\n      tag_327\n      jump\t// in\n    tag_399:\n        /* \"#utility.yul\":2300:2302   */\n      0x40\n        /* \"#utility.yul\":2294:2303   */\n      mload\n        /* \"#utility.yul\":2268:2270   */\n      0x1f\n        /* \"#utility.yul\":2354:2367   */\n      dup4\n      add\n      not(0x1f)\n        /* \"#utility.yul\":2350:2372   */\n      swap1\n      dup2\n      and\n        /* \"#utility.yul\":2374:2376   */\n      0x3f\n        /* \"#utility.yul\":2346:2377   */\n      add\n        /* \"#utility.yul\":2342:2382   */\n      and\n        /* \"#utility.yul\":2330:2383   */\n      dup2\n      add\n      swap1\n        /* \"#utility.yul\":2398:2416   */\n      dup3\n      dup3\n      gt\n        /* \"#utility.yul\":2418:2440   */\n      dup2\n      dup4\n      lt\n        /* \"#utility.yul\":2395:2441   */\n      or\n        /* \"#utility.yul\":2392:2464   */\n      iszero\n      tag_401\n      jumpi\n        /* \"#utility.yul\":2444:2462   */\n      tag_401\n      tag_327\n      jump\t// in\n    tag_401:\n        /* \"#utility.yul\":2484:2494   */\n      dup2\n        /* \"#utility.yul\":2480:2482   */\n      0x40\n        /* \"#utility.yul\":2473:2495   */\n      mstore\n        /* \"#utility.yul\":2519:2521   */\n      dup4\n        /* \"#utility.yul\":2511:2517   */\n      dup2\n        /* \"#utility.yul\":2504:2522   */\n      mstore\n        /* \"#utility.yul\":2565:2568   */\n      dup7\n        /* \"#utility.yul\":2558:2562   */\n      0x20\n        /* \"#utility.yul\":2553:2555   */\n      dup6\n        /* \"#utility.yul\":2545:2551   */\n      dup9\n        /* \"#utility.yul\":2541:2556   */\n      add\n        /* \"#utility.yul\":2537:2563   */\n      add\n        /* \"#utility.yul\":2534:2569   */\n      gt\n        /* \"#utility.yul\":2531:2586   */\n      iszero\n      tag_402\n      jumpi\n        /* \"#utility.yul\":2582:2583   */\n      0x00\n        /* \"#utility.yul\":2579:2580   */\n      dup1\n        /* \"#utility.yul\":2572:2584   */\n      revert\n        /* \"#utility.yul\":2531:2586   */\n    tag_402:\n        /* \"#utility.yul\":2646:2648   */\n      dup4\n        /* \"#utility.yul\":2639:2643   */\n      0x20\n        /* \"#utility.yul\":2631:2637   */\n      dup8\n        /* \"#utility.yul\":2627:2644   */\n      add\n        /* \"#utility.yul\":2620:2624   */\n      0x20\n        /* \"#utility.yul\":2612:2618   */\n      dup4\n        /* \"#utility.yul\":2608:2625   */\n      add\n        /* \"#utility.yul\":2595:2649   */\n      calldatacopy\n        /* \"#utility.yul\":2693:2694   */\n      0x00\n        /* \"#utility.yul\":2686:2690   */\n      0x20\n        /* \"#utility.yul\":2681:2683   */\n      dup6\n        /* \"#utility.yul\":2673:2679   */\n      dup4\n        /* \"#utility.yul\":2669:2684   */\n      add\n        /* \"#utility.yul\":2665:2691   */\n      add\n        /* \"#utility.yul\":2658:2695   */\n      mstore\n        /* \"#utility.yul\":2713:2719   */\n      dup1\n        /* \"#utility.yul\":2704:2719   */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":2006:2725   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2730:3052   */\n    tag_58:\n        /* \"#utility.yul\":2799:2805   */\n      0x00\n        /* \"#utility.yul\":2852:2854   */\n      0x20\n        /* \"#utility.yul\":2840:2849   */\n      dup3\n        /* \"#utility.yul\":2831:2838   */\n      dup5\n        /* \"#utility.yul\":2827:2850   */\n      sub\n        /* \"#utility.yul\":2823:2855   */\n      slt\n        /* \"#utility.yul\":2820:2872   */\n      iszero\n      tag_404\n      jumpi\n        /* \"#utility.yul\":2868:2869   */\n      0x00\n        /* \"#utility.yul\":2865:2866   */\n      dup1\n        /* \"#utility.yul\":2858:2870   */\n      revert\n        /* \"#utility.yul\":2820:2872   */\n    tag_404:\n        /* \"#utility.yul\":2908:2917   */\n      dup2\n        /* \"#utility.yul\":2895:2918   */\n      calldataload\n        /* \"#utility.yul\":2941:2959   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2933:2939   */\n      dup2\n        /* \"#utility.yul\":2930:2960   */\n      gt\n        /* \"#utility.yul\":2927:2977   */\n      iszero\n      tag_405\n      jumpi\n        /* \"#utility.yul\":2973:2974   */\n      0x00\n        /* \"#utility.yul\":2970:2971   */\n      dup1\n        /* \"#utility.yul\":2963:2975   */\n      revert\n        /* \"#utility.yul\":2927:2977   */\n    tag_405:\n        /* \"#utility.yul\":2996:3046   */\n      tag_406\n        /* \"#utility.yul\":3038:3045   */\n      dup5\n        /* \"#utility.yul\":3029:3035   */\n      dup3\n        /* \"#utility.yul\":3018:3027   */\n      dup6\n        /* \"#utility.yul\":3014:3036   */\n      add\n        /* \"#utility.yul\":2996:3046   */\n      tag_371\n      jump\t// in\n    tag_406:\n        /* \"#utility.yul\":2986:3046   */\n      swap5\n        /* \"#utility.yul\":2730:3052   */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3057:3385   */\n    tag_62:\n        /* \"#utility.yul\":3134:3140   */\n      0x00\n        /* \"#utility.yul\":3142:3148   */\n      dup1\n        /* \"#utility.yul\":3150:3156   */\n      0x00\n        /* \"#utility.yul\":3203:3205   */\n      0x60\n        /* \"#utility.yul\":3191:3200   */\n      dup5\n        /* \"#utility.yul\":3182:3189   */\n      dup7\n        /* \"#utility.yul\":3178:3201   */\n      sub\n        /* \"#utility.yul\":3174:3206   */\n      slt\n        /* \"#utility.yul\":3171:3223   */\n      iszero\n      tag_408\n      jumpi\n        /* \"#utility.yul\":3219:3220   */\n      0x00\n        /* \"#utility.yul\":3216:3217   */\n      dup1\n        /* \"#utility.yul\":3209:3221   */\n      revert\n        /* \"#utility.yul\":3171:3223   */\n    tag_408:\n        /* \"#utility.yul\":3242:3271   */\n      tag_409\n        /* \"#utility.yul\":3261:3270   */\n      dup5\n        /* \"#utility.yul\":3242:3271   */\n      tag_370\n      jump\t// in\n    tag_409:\n        /* \"#utility.yul\":3232:3271   */\n      swap3\n      pop\n        /* \"#utility.yul\":3290:3328   */\n      tag_410\n        /* \"#utility.yul\":3324:3326   */\n      0x20\n        /* \"#utility.yul\":3313:3322   */\n      dup6\n        /* \"#utility.yul\":3309:3327   */\n      add\n        /* \"#utility.yul\":3290:3328   */\n      tag_370\n      jump\t// in\n    tag_410:\n        /* \"#utility.yul\":3280:3328   */\n      swap2\n      pop\n        /* \"#utility.yul\":3375:3377   */\n      0x40\n        /* \"#utility.yul\":3364:3373   */\n      dup5\n        /* \"#utility.yul\":3360:3378   */\n      add\n        /* \"#utility.yul\":3347:3379   */\n      calldataload\n        /* \"#utility.yul\":3337:3379   */\n      swap1\n      pop\n        /* \"#utility.yul\":3057:3385   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":3579:4122   */\n    tag_78:\n        /* \"#utility.yul\":3667:3673   */\n      0x00\n        /* \"#utility.yul\":3675:3681   */\n      dup1\n        /* \"#utility.yul\":3728:3730   */\n      0x40\n        /* \"#utility.yul\":3716:3725   */\n      dup4\n        /* \"#utility.yul\":3707:3714   */\n      dup6\n        /* \"#utility.yul\":3703:3726   */\n      sub\n        /* \"#utility.yul\":3699:3731   */\n      slt\n        /* \"#utility.yul\":3696:3748   */\n      iszero\n      tag_413\n      jumpi\n        /* \"#utility.yul\":3744:3745   */\n      0x00\n        /* \"#utility.yul\":3741:3742   */\n      dup1\n        /* \"#utility.yul\":3734:3746   */\n      revert\n        /* \"#utility.yul\":3696:3748   */\n    tag_413:\n        /* \"#utility.yul\":3784:3793   */\n      dup3\n        /* \"#utility.yul\":3771:3794   */\n      calldataload\n        /* \"#utility.yul\":3813:3831   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3854:3856   */\n      dup1\n        /* \"#utility.yul\":3846:3852   */\n      dup3\n        /* \"#utility.yul\":3843:3857   */\n      gt\n        /* \"#utility.yul\":3840:3874   */\n      iszero\n      tag_414\n      jumpi\n        /* \"#utility.yul\":3870:3871   */\n      0x00\n        /* \"#utility.yul\":3867:3868   */\n      dup1\n        /* \"#utility.yul\":3860:3872   */\n      revert\n        /* \"#utility.yul\":3840:3874   */\n    tag_414:\n        /* \"#utility.yul\":3893:3943   */\n      tag_415\n        /* \"#utility.yul\":3935:3942   */\n      dup7\n        /* \"#utility.yul\":3926:3932   */\n      dup4\n        /* \"#utility.yul\":3915:3924   */\n      dup8\n        /* \"#utility.yul\":3911:3933   */\n      add\n        /* \"#utility.yul\":3893:3943   */\n      tag_371\n      jump\t// in\n    tag_415:\n        /* \"#utility.yul\":3883:3943   */\n      swap4\n      pop\n        /* \"#utility.yul\":3996:3998   */\n      0x20\n        /* \"#utility.yul\":3985:3994   */\n      dup6\n        /* \"#utility.yul\":3981:3999   */\n      add\n        /* \"#utility.yul\":3968:4000   */\n      calldataload\n        /* \"#utility.yul\":3952:4000   */\n      swap2\n      pop\n        /* \"#utility.yul\":4025:4027   */\n      dup1\n        /* \"#utility.yul\":4015:4023   */\n      dup3\n        /* \"#utility.yul\":4012:4028   */\n      gt\n        /* \"#utility.yul\":4009:4045   */\n      iszero\n      tag_416\n      jumpi\n        /* \"#utility.yul\":4041:4042   */\n      0x00\n        /* \"#utility.yul\":4038:4039   */\n      dup1\n        /* \"#utility.yul\":4031:4043   */\n      revert\n        /* \"#utility.yul\":4009:4045   */\n    tag_416:\n      pop\n        /* \"#utility.yul\":4064:4116   */\n      tag_417\n        /* \"#utility.yul\":4108:4115   */\n      dup6\n        /* \"#utility.yul\":4097:4105   */\n      dup3\n        /* \"#utility.yul\":4086:4095   */\n      dup7\n        /* \"#utility.yul\":4082:4106   */\n      add\n        /* \"#utility.yul\":4064:4116   */\n      tag_371\n      jump\t// in\n    tag_417:\n        /* \"#utility.yul\":4054:4116   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":3579:4122   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4127:4474   */\n    tag_82:\n        /* \"#utility.yul\":4192:4198   */\n      0x00\n        /* \"#utility.yul\":4200:4206   */\n      dup1\n        /* \"#utility.yul\":4253:4255   */\n      0x40\n        /* \"#utility.yul\":4241:4250   */\n      dup4\n        /* \"#utility.yul\":4232:4239   */\n      dup6\n        /* \"#utility.yul\":4228:4251   */\n      sub\n        /* \"#utility.yul\":4224:4256   */\n      slt\n        /* \"#utility.yul\":4221:4273   */\n      iszero\n      tag_419\n      jumpi\n        /* \"#utility.yul\":4269:4270   */\n      0x00\n        /* \"#utility.yul\":4266:4267   */\n      dup1\n        /* \"#utility.yul\":4259:4271   */\n      revert\n        /* \"#utility.yul\":4221:4273   */\n    tag_419:\n        /* \"#utility.yul\":4292:4321   */\n      tag_420\n        /* \"#utility.yul\":4311:4320   */\n      dup4\n        /* \"#utility.yul\":4292:4321   */\n      tag_370\n      jump\t// in\n    tag_420:\n        /* \"#utility.yul\":4282:4321   */\n      swap2\n      pop\n        /* \"#utility.yul\":4371:4373   */\n      0x20\n        /* \"#utility.yul\":4360:4369   */\n      dup4\n        /* \"#utility.yul\":4356:4374   */\n      add\n        /* \"#utility.yul\":4343:4375   */\n      calldataload\n        /* \"#utility.yul\":4418:4423   */\n      dup1\n        /* \"#utility.yul\":4411:4424   */\n      iszero\n        /* \"#utility.yul\":4404:4425   */\n      iszero\n        /* \"#utility.yul\":4397:4402   */\n      dup2\n        /* \"#utility.yul\":4394:4426   */\n      eq\n        /* \"#utility.yul\":4384:4444   */\n      tag_421\n      jumpi\n        /* \"#utility.yul\":4440:4441   */\n      0x00\n        /* \"#utility.yul\":4437:4438   */\n      dup1\n        /* \"#utility.yul\":4430:4442   */\n      revert\n        /* \"#utility.yul\":4384:4444   */\n    tag_421:\n        /* \"#utility.yul\":4463:4468   */\n      dup1\n        /* \"#utility.yul\":4453:4468   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":4127:4474   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4479:4665   */\n    tag_90:\n        /* \"#utility.yul\":4538:4544   */\n      0x00\n        /* \"#utility.yul\":4591:4593   */\n      0x20\n        /* \"#utility.yul\":4579:4588   */\n      dup3\n        /* \"#utility.yul\":4570:4577   */\n      dup5\n        /* \"#utility.yul\":4566:4589   */\n      sub\n        /* \"#utility.yul\":4562:4594   */\n      slt\n        /* \"#utility.yul\":4559:4611   */\n      iszero\n      tag_423\n      jumpi\n        /* \"#utility.yul\":4607:4608   */\n      0x00\n        /* \"#utility.yul\":4604:4605   */\n      dup1\n        /* \"#utility.yul\":4597:4609   */\n      revert\n        /* \"#utility.yul\":4559:4611   */\n    tag_423:\n        /* \"#utility.yul\":4630:4659   */\n      tag_222\n        /* \"#utility.yul\":4649:4658   */\n      dup3\n        /* \"#utility.yul\":4630:4659   */\n      tag_370\n      jump\t// in\n        /* \"#utility.yul\":4670:5478   */\n    tag_112:\n        /* \"#utility.yul\":4767:4773   */\n      0x00\n        /* \"#utility.yul\":4775:4781   */\n      dup1\n        /* \"#utility.yul\":4783:4789   */\n      0x00\n        /* \"#utility.yul\":4791:4797   */\n      dup1\n        /* \"#utility.yul\":4799:4805   */\n      0x00\n        /* \"#utility.yul\":4852:4855   */\n      0x80\n        /* \"#utility.yul\":4840:4849   */\n      dup7\n        /* \"#utility.yul\":4831:4838   */\n      dup9\n        /* \"#utility.yul\":4827:4850   */\n      sub\n        /* \"#utility.yul\":4823:4856   */\n      slt\n        /* \"#utility.yul\":4820:4873   */\n      iszero\n      tag_426\n      jumpi\n        /* \"#utility.yul\":4869:4870   */\n      0x00\n        /* \"#utility.yul\":4866:4867   */\n      dup1\n        /* \"#utility.yul\":4859:4871   */\n      revert\n        /* \"#utility.yul\":4820:4873   */\n    tag_426:\n        /* \"#utility.yul\":4892:4921   */\n      tag_427\n        /* \"#utility.yul\":4911:4920   */\n      dup7\n        /* \"#utility.yul\":4892:4921   */\n      tag_370\n      jump\t// in\n    tag_427:\n        /* \"#utility.yul\":4882:4921   */\n      swap5\n      pop\n        /* \"#utility.yul\":4940:4978   */\n      tag_428\n        /* \"#utility.yul\":4974:4976   */\n      0x20\n        /* \"#utility.yul\":4963:4972   */\n      dup8\n        /* \"#utility.yul\":4959:4977   */\n      add\n        /* \"#utility.yul\":4940:4978   */\n      tag_370\n      jump\t// in\n    tag_428:\n        /* \"#utility.yul\":4930:4978   */\n      swap4\n      pop\n        /* \"#utility.yul\":5025:5027   */\n      0x40\n        /* \"#utility.yul\":5014:5023   */\n      dup7\n        /* \"#utility.yul\":5010:5028   */\n      add\n        /* \"#utility.yul\":4997:5029   */\n      calldataload\n        /* \"#utility.yul\":4987:5029   */\n      swap3\n      pop\n        /* \"#utility.yul\":5080:5082   */\n      0x60\n        /* \"#utility.yul\":5069:5078   */\n      dup7\n        /* \"#utility.yul\":5065:5083   */\n      add\n        /* \"#utility.yul\":5052:5084   */\n      calldataload\n        /* \"#utility.yul\":5103:5121   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":5144:5146   */\n      dup1\n        /* \"#utility.yul\":5136:5142   */\n      dup3\n        /* \"#utility.yul\":5133:5147   */\n      gt\n        /* \"#utility.yul\":5130:5164   */\n      iszero\n      tag_429\n      jumpi\n        /* \"#utility.yul\":5160:5161   */\n      0x00\n        /* \"#utility.yul\":5157:5158   */\n      dup1\n        /* \"#utility.yul\":5150:5162   */\n      revert\n        /* \"#utility.yul\":5130:5164   */\n    tag_429:\n        /* \"#utility.yul\":5198:5204   */\n      dup2\n        /* \"#utility.yul\":5187:5196   */\n      dup9\n        /* \"#utility.yul\":5183:5205   */\n      add\n        /* \"#utility.yul\":5173:5205   */\n      swap2\n      pop\n        /* \"#utility.yul\":5243:5250   */\n      dup9\n        /* \"#utility.yul\":5236:5240   */\n      0x1f\n        /* \"#utility.yul\":5232:5234   */\n      dup4\n        /* \"#utility.yul\":5228:5241   */\n      add\n        /* \"#utility.yul\":5224:5251   */\n      slt\n        /* \"#utility.yul\":5214:5269   */\n      tag_430\n      jumpi\n        /* \"#utility.yul\":5265:5266   */\n      0x00\n        /* \"#utility.yul\":5262:5263   */\n      dup1\n        /* \"#utility.yul\":5255:5267   */\n      revert\n        /* \"#utility.yul\":5214:5269   */\n    tag_430:\n        /* \"#utility.yul\":5305:5307   */\n      dup2\n        /* \"#utility.yul\":5292:5308   */\n      calldataload\n        /* \"#utility.yul\":5331:5333   */\n      dup2\n        /* \"#utility.yul\":5323:5329   */\n      dup2\n        /* \"#utility.yul\":5320:5334   */\n      gt\n        /* \"#utility.yul\":5317:5351   */\n      iszero\n      tag_431\n      jumpi\n        /* \"#utility.yul\":5347:5348   */\n      0x00\n        /* \"#utility.yul\":5344:5345   */\n      dup1\n        /* \"#utility.yul\":5337:5349   */\n      revert\n        /* \"#utility.yul\":5317:5351   */\n    tag_431:\n        /* \"#utility.yul\":5392:5399   */\n      dup10\n        /* \"#utility.yul\":5387:5389   */\n      0x20\n        /* \"#utility.yul\":5378:5384   */\n      dup3\n        /* \"#utility.yul\":5374:5376   */\n      dup6\n        /* \"#utility.yul\":5370:5385   */\n      add\n        /* \"#utility.yul\":5366:5390   */\n      add\n        /* \"#utility.yul\":5363:5400   */\n      gt\n        /* \"#utility.yul\":5360:5417   */\n      iszero\n      tag_432\n      jumpi\n        /* \"#utility.yul\":5413:5414   */\n      0x00\n        /* \"#utility.yul\":5410:5411   */\n      dup1\n        /* \"#utility.yul\":5403:5415   */\n      revert\n        /* \"#utility.yul\":5360:5417   */\n    tag_432:\n        /* \"#utility.yul\":4670:5478   */\n      swap7\n      swap10\n      swap6\n      swap9\n      pop\n      swap4\n      swap7\n      pop\n        /* \"#utility.yul\":5444:5446   */\n      0x20\n        /* \"#utility.yul\":5436:5447   */\n      add\n      swap5\n        /* \"#utility.yul\":5466:5472   */\n      swap4\n        /* \"#utility.yul\":4670:5478   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5483:5743   */\n    tag_123:\n        /* \"#utility.yul\":5551:5557   */\n      0x00\n        /* \"#utility.yul\":5559:5565   */\n      dup1\n        /* \"#utility.yul\":5612:5614   */\n      0x40\n        /* \"#utility.yul\":5600:5609   */\n      dup4\n        /* \"#utility.yul\":5591:5598   */\n      dup6\n        /* \"#utility.yul\":5587:5610   */\n      sub\n        /* \"#utility.yul\":5583:5615   */\n      slt\n        /* \"#utility.yul\":5580:5632   */\n      iszero\n      tag_434\n      jumpi\n        /* \"#utility.yul\":5628:5629   */\n      0x00\n        /* \"#utility.yul\":5625:5626   */\n      dup1\n        /* \"#utility.yul\":5618:5630   */\n      revert\n        /* \"#utility.yul\":5580:5632   */\n    tag_434:\n        /* \"#utility.yul\":5651:5680   */\n      tag_435\n        /* \"#utility.yul\":5670:5679   */\n      dup4\n        /* \"#utility.yul\":5651:5680   */\n      tag_370\n      jump\t// in\n    tag_435:\n        /* \"#utility.yul\":5641:5680   */\n      swap2\n      pop\n        /* \"#utility.yul\":5699:5737   */\n      tag_436\n        /* \"#utility.yul\":5733:5735   */\n      0x20\n        /* \"#utility.yul\":5722:5731   */\n      dup5\n        /* \"#utility.yul\":5718:5736   */\n      add\n        /* \"#utility.yul\":5699:5737   */\n      tag_370\n      jump\t// in\n    tag_436:\n        /* \"#utility.yul\":5689:5737   */\n      swap1\n      pop\n        /* \"#utility.yul\":5483:5743   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5748:6128   */\n    tag_140:\n        /* \"#utility.yul\":5827:5828   */\n      0x01\n        /* \"#utility.yul\":5823:5835   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":5870:5882   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":5891:5952   */\n      tag_438\n      jumpi\n        /* \"#utility.yul\":5945:5949   */\n      0x7f\n        /* \"#utility.yul\":5937:5943   */\n      dup3\n        /* \"#utility.yul\":5933:5950   */\n      and\n        /* \"#utility.yul\":5923:5950   */\n      swap2\n      pop\n        /* \"#utility.yul\":5891:5952   */\n    tag_438:\n        /* \"#utility.yul\":5998:6000   */\n      0x20\n        /* \"#utility.yul\":5990:5996   */\n      dup3\n        /* \"#utility.yul\":5987:6001   */\n      lt\n        /* \"#utility.yul\":5967:5985   */\n      dup2\n        /* \"#utility.yul\":5964:6002   */\n      sub\n        /* \"#utility.yul\":5961:6122   */\n      tag_439\n      jumpi\n        /* \"#utility.yul\":6044:6054   */\n      0x4e487b71\n        /* \"#utility.yul\":6039:6042   */\n      0xe0\n        /* \"#utility.yul\":6035:6055   */\n      shl\n        /* \"#utility.yul\":6032:6033   */\n      0x00\n        /* \"#utility.yul\":6025:6056   */\n      mstore\n        /* \"#utility.yul\":6079:6083   */\n      0x22\n        /* \"#utility.yul\":6076:6077   */\n      0x04\n        /* \"#utility.yul\":6069:6084   */\n      mstore\n        /* \"#utility.yul\":6107:6111   */\n      0x24\n        /* \"#utility.yul\":6104:6105   */\n      0x00\n        /* \"#utility.yul\":6097:6112   */\n      revert\n        /* \"#utility.yul\":5961:6122   */\n    tag_439:\n      pop\n        /* \"#utility.yul\":5748:6128   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6259:6802   */\n    tag_373:\n        /* \"#utility.yul\":6361:6363   */\n      0x1f\n        /* \"#utility.yul\":6356:6359   */\n      dup3\n        /* \"#utility.yul\":6353:6364   */\n      gt\n        /* \"#utility.yul\":6350:6796   */\n      iszero\n      tag_186\n      jumpi\n        /* \"#utility.yul\":6397:6398   */\n      0x00\n        /* \"#utility.yul\":6421:6426   */\n      dup2\n        /* \"#utility.yul\":6418:6419   */\n      0x00\n        /* \"#utility.yul\":6411:6427   */\n      mstore\n        /* \"#utility.yul\":6465:6469   */\n      0x20\n        /* \"#utility.yul\":6462:6463   */\n      0x00\n        /* \"#utility.yul\":6452:6470   */\n      keccak256\n        /* \"#utility.yul\":6535:6537   */\n      0x1f\n        /* \"#utility.yul\":6523:6533   */\n      dup6\n        /* \"#utility.yul\":6519:6538   */\n      add\n        /* \"#utility.yul\":6516:6517   */\n      0x05\n        /* \"#utility.yul\":6512:6539   */\n      shr\n        /* \"#utility.yul\":6506:6510   */\n      dup2\n        /* \"#utility.yul\":6502:6540   */\n      add\n        /* \"#utility.yul\":6571:6575   */\n      0x20\n        /* \"#utility.yul\":6559:6569   */\n      dup7\n        /* \"#utility.yul\":6556:6576   */\n      lt\n        /* \"#utility.yul\":6553:6600   */\n      iszero\n      tag_443\n      jumpi\n      pop\n        /* \"#utility.yul\":6594:6598   */\n      dup1\n        /* \"#utility.yul\":6553:6600   */\n    tag_443:\n        /* \"#utility.yul\":6649:6651   */\n      0x1f\n        /* \"#utility.yul\":6644:6647   */\n      dup6\n        /* \"#utility.yul\":6640:6652   */\n      add\n        /* \"#utility.yul\":6637:6638   */\n      0x05\n        /* \"#utility.yul\":6633:6653   */\n      shr\n        /* \"#utility.yul\":6627:6631   */\n      dup3\n        /* \"#utility.yul\":6623:6654   */\n      add\n        /* \"#utility.yul\":6613:6654   */\n      swap2\n      pop\n        /* \"#utility.yul\":6704:6786   */\n    tag_444:\n        /* \"#utility.yul\":6722:6724   */\n      dup2\n        /* \"#utility.yul\":6715:6720   */\n      dup2\n        /* \"#utility.yul\":6712:6725   */\n      lt\n        /* \"#utility.yul\":6704:6786   */\n      iszero\n      tag_446\n      jumpi\n        /* \"#utility.yul\":6767:6784   */\n      dup3\n      dup2\n      sstore\n        /* \"#utility.yul\":6748:6749   */\n      0x01\n        /* \"#utility.yul\":6737:6750   */\n      add\n        /* \"#utility.yul\":6704:6786   */\n      jump(tag_444)\n    tag_446:\n        /* \"#utility.yul\":6708:6711   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":6259:6802   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6978:8323   */\n    tag_157:\n        /* \"#utility.yul\":7104:7107   */\n      dup2\n        /* \"#utility.yul\":7098:7108   */\n      mload\n        /* \"#utility.yul\":7131:7149   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7123:7129   */\n      dup2\n        /* \"#utility.yul\":7120:7150   */\n      gt\n        /* \"#utility.yul\":7117:7173   */\n      iszero\n      tag_450\n      jumpi\n        /* \"#utility.yul\":7153:7171   */\n      tag_450\n      tag_327\n      jump\t// in\n    tag_450:\n        /* \"#utility.yul\":7182:7279   */\n      tag_451\n        /* \"#utility.yul\":7272:7278   */\n      dup2\n        /* \"#utility.yul\":7232:7270   */\n      tag_452\n        /* \"#utility.yul\":7264:7268   */\n      dup5\n        /* \"#utility.yul\":7258:7269   */\n      sload\n        /* \"#utility.yul\":7232:7270   */\n      tag_140\n      jump\t// in\n    tag_452:\n        /* \"#utility.yul\":7226:7230   */\n      dup5\n        /* \"#utility.yul\":7182:7279   */\n      tag_373\n      jump\t// in\n    tag_451:\n        /* \"#utility.yul\":7334:7338   */\n      0x20\n      dup1\n        /* \"#utility.yul\":7391:7393   */\n      0x1f\n        /* \"#utility.yul\":7380:7394   */\n      dup4\n      gt\n        /* \"#utility.yul\":7408:7409   */\n      0x01\n        /* \"#utility.yul\":7403:8066   */\n      dup2\n      eq\n      tag_454\n      jumpi\n        /* \"#utility.yul\":8110:8111   */\n      0x00\n        /* \"#utility.yul\":8127:8133   */\n      dup5\n        /* \"#utility.yul\":8124:8213   */\n      iszero\n      tag_455\n      jumpi\n      pop\n        /* \"#utility.yul\":8179:8198   */\n      dup6\n      dup4\n      add\n        /* \"#utility.yul\":8173:8199   */\n      mload\n        /* \"#utility.yul\":8124:8213   */\n    tag_455:\n      not(0x00)\n        /* \"#utility.yul\":6935:6936   */\n      0x03\n        /* \"#utility.yul\":6931:6942   */\n      dup7\n      swap1\n      shl\n        /* \"#utility.yul\":6927:6951   */\n      shr\n        /* \"#utility.yul\":6923:6952   */\n      not\n        /* \"#utility.yul\":6913:6953   */\n      and\n        /* \"#utility.yul\":6959:6960   */\n      0x01\n        /* \"#utility.yul\":6955:6966   */\n      dup6\n      swap1\n      shl\n        /* \"#utility.yul\":6910:6967   */\n      or\n        /* \"#utility.yul\":8226:8307   */\n      dup6\n      sstore\n        /* \"#utility.yul\":7373:8317   */\n      jump(tag_446)\n        /* \"#utility.yul\":7403:8066   */\n    tag_454:\n        /* \"#utility.yul\":6206:6207   */\n      0x00\n        /* \"#utility.yul\":6199:6213   */\n      dup6\n      dup2\n      mstore\n        /* \"#utility.yul\":6243:6247   */\n      0x20\n        /* \"#utility.yul\":6230:6248   */\n      dup2\n      keccak256\n      not(0x1f)\n        /* \"#utility.yul\":7439:7459   */\n      dup7\n      and\n      swap2\n        /* \"#utility.yul\":7557:7793   */\n    tag_458:\n        /* \"#utility.yul\":7571:7578   */\n      dup3\n        /* \"#utility.yul\":7568:7569   */\n      dup2\n        /* \"#utility.yul\":7565:7579   */\n      lt\n        /* \"#utility.yul\":7557:7793   */\n      iszero\n      tag_460\n      jumpi\n        /* \"#utility.yul\":7660:7679   */\n      dup9\n      dup7\n      add\n        /* \"#utility.yul\":7654:7680   */\n      mload\n        /* \"#utility.yul\":7639:7681   */\n      dup3\n      sstore\n        /* \"#utility.yul\":7752:7779   */\n      swap5\n      dup5\n      add\n      swap5\n        /* \"#utility.yul\":7720:7721   */\n      0x01\n        /* \"#utility.yul\":7708:7722   */\n      swap1\n      swap2\n      add\n      swap1\n        /* \"#utility.yul\":7587:7606   */\n      dup5\n      add\n        /* \"#utility.yul\":7557:7793   */\n      jump(tag_458)\n    tag_460:\n        /* \"#utility.yul\":7561:7564   */\n      pop\n        /* \"#utility.yul\":7821:7827   */\n      dup6\n        /* \"#utility.yul\":7812:7819   */\n      dup3\n        /* \"#utility.yul\":7809:7828   */\n      lt\n        /* \"#utility.yul\":7806:8007   */\n      iszero\n      tag_461\n      jumpi\n        /* \"#utility.yul\":7882:7901   */\n      dup8\n      dup6\n      add\n        /* \"#utility.yul\":7876:7902   */\n      mload\n      not(0x00)\n        /* \"#utility.yul\":7965:7966   */\n      0x03\n        /* \"#utility.yul\":7961:7975   */\n      dup9\n      swap1\n      shl\n        /* \"#utility.yul\":7977:7980   */\n      0xf8\n        /* \"#utility.yul\":7957:7981   */\n      and\n        /* \"#utility.yul\":7953:7990   */\n      shr\n        /* \"#utility.yul\":7949:7991   */\n      not\n        /* \"#utility.yul\":7934:7992   */\n      and\n        /* \"#utility.yul\":7919:7993   */\n      dup2\n      sstore\n        /* \"#utility.yul\":7806:8007   */\n    tag_461:\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":8053:8054   */\n      0x01\n        /* \"#utility.yul\":8037:8051   */\n      swap1\n      dup2\n      shl\n        /* \"#utility.yul\":8033:8055   */\n      add\n        /* \"#utility.yul\":8020:8056   */\n      swap1\n      sstore\n      pop\n        /* \"#utility.yul\":6978:8323   */\n      jump\t// out\n        /* \"#utility.yul\":8328:8455   */\n    tag_375:\n        /* \"#utility.yul\":8389:8399   */\n      0x4e487b71\n        /* \"#utility.yul\":8384:8387   */\n      0xe0\n        /* \"#utility.yul\":8380:8400   */\n      shl\n        /* \"#utility.yul\":8377:8378   */\n      0x00\n        /* \"#utility.yul\":8370:8401   */\n      mstore\n        /* \"#utility.yul\":8420:8424   */\n      0x11\n        /* \"#utility.yul\":8417:8418   */\n      0x04\n        /* \"#utility.yul\":8410:8425   */\n      mstore\n        /* \"#utility.yul\":8444:8448   */\n      0x24\n        /* \"#utility.yul\":8441:8442   */\n      0x00\n        /* \"#utility.yul\":8434:8449   */\n      revert\n        /* \"#utility.yul\":8460:8588   */\n    tag_168:\n        /* \"#utility.yul\":8527:8536   */\n      dup2\n      dup2\n      sub\n        /* \"#utility.yul\":8548:8559   */\n      dup2\n      dup2\n      gt\n        /* \"#utility.yul\":8545:8582   */\n      iszero\n      tag_145\n      jumpi\n        /* \"#utility.yul\":8562:8580   */\n      tag_145\n      tag_375\n      jump\t// in\n        /* \"#utility.yul\":8593:8720   */\n    tag_173:\n        /* \"#utility.yul\":8654:8664   */\n      0x4e487b71\n        /* \"#utility.yul\":8649:8652   */\n      0xe0\n        /* \"#utility.yul\":8645:8665   */\n      shl\n        /* \"#utility.yul\":8642:8643   */\n      0x00\n        /* \"#utility.yul\":8635:8666   */\n      mstore\n        /* \"#utility.yul\":8685:8689   */\n      0x32\n        /* \"#utility.yul\":8682:8683   */\n      0x04\n        /* \"#utility.yul\":8675:8690   */\n      mstore\n        /* \"#utility.yul\":8709:8713   */\n      0x24\n        /* \"#utility.yul\":8706:8707   */\n      0x00\n        /* \"#utility.yul\":8699:8714   */\n      revert\n        /* \"#utility.yul\":8725:8852   */\n    tag_180:\n        /* \"#utility.yul\":8786:8796   */\n      0x4e487b71\n        /* \"#utility.yul\":8781:8784   */\n      0xe0\n        /* \"#utility.yul\":8777:8797   */\n      shl\n        /* \"#utility.yul\":8774:8775   */\n      0x00\n        /* \"#utility.yul\":8767:8798   */\n      mstore\n        /* \"#utility.yul\":8817:8821   */\n      0x31\n        /* \"#utility.yul\":8814:8815   */\n      0x04\n        /* \"#utility.yul\":8807:8822   */\n      mstore\n        /* \"#utility.yul\":8841:8845   */\n      0x24\n        /* \"#utility.yul\":8838:8839   */\n      0x00\n        /* \"#utility.yul\":8831:8846   */\n      revert\n        /* \"#utility.yul\":9417:9707   */\n    tag_202:\n        /* \"#utility.yul\":9486:9492   */\n      0x00\n        /* \"#utility.yul\":9539:9541   */\n      0x20\n        /* \"#utility.yul\":9527:9536   */\n      dup3\n        /* \"#utility.yul\":9518:9525   */\n      dup5\n        /* \"#utility.yul\":9514:9537   */\n      sub\n        /* \"#utility.yul\":9510:9542   */\n      slt\n        /* \"#utility.yul\":9507:9559   */\n      iszero\n      tag_470\n      jumpi\n        /* \"#utility.yul\":9555:9556   */\n      0x00\n        /* \"#utility.yul\":9552:9553   */\n      dup1\n        /* \"#utility.yul\":9545:9557   */\n      revert\n        /* \"#utility.yul\":9507:9559   */\n    tag_470:\n        /* \"#utility.yul\":9581:9597   */\n      dup2\n      mload\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"#utility.yul\":9626:9658   */\n      dup2\n      and\n        /* \"#utility.yul\":9616:9659   */\n      dup2\n      eq\n        /* \"#utility.yul\":9606:9677   */\n      tag_222\n      jumpi\n        /* \"#utility.yul\":9673:9674   */\n      0x00\n        /* \"#utility.yul\":9670:9671   */\n      dup1\n        /* \"#utility.yul\":9663:9675   */\n      revert\n        /* \"#utility.yul\":9712:10374   */\n    tag_227:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":9991:10006   */\n      dup7\n      dup2\n      and\n        /* \"#utility.yul\":9973:10007   */\n      dup3\n      mstore\n        /* \"#utility.yul\":10043:10058   */\n      dup6\n      and\n        /* \"#utility.yul\":10038:10040   */\n      0x20\n        /* \"#utility.yul\":10023:10041   */\n      dup3\n      add\n        /* \"#utility.yul\":10016:10059   */\n      mstore\n        /* \"#utility.yul\":10090:10092   */\n      0x40\n        /* \"#utility.yul\":10075:10093   */\n      dup2\n      add\n        /* \"#utility.yul\":10068:10102   */\n      dup5\n      swap1\n      mstore\n        /* \"#utility.yul\":10138:10141   */\n      0x80\n        /* \"#utility.yul\":10133:10135   */\n      0x60\n        /* \"#utility.yul\":10118:10136   */\n      dup3\n      add\n        /* \"#utility.yul\":10111:10142   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":10158:10177   */\n      dup2\n      add\n        /* \"#utility.yul\":10151:10186   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":9916:9920   */\n      0x00\n        /* \"#utility.yul\":10179:10185   */\n      dup3\n        /* \"#utility.yul\":10229:10235   */\n      dup5\n        /* \"#utility.yul\":9953:9956   */\n      0xa0\n        /* \"#utility.yul\":10208:10227   */\n      dup5\n      add\n        /* \"#utility.yul\":10195:10244   */\n      calldatacopy\n        /* \"#utility.yul\":10294:10295   */\n      0x00\n        /* \"#utility.yul\":10288:10291   */\n      0xa0\n        /* \"#utility.yul\":10279:10285   */\n      dup5\n        /* \"#utility.yul\":10268:10277   */\n      dup5\n        /* \"#utility.yul\":10264:10286   */\n      add\n        /* \"#utility.yul\":10260:10292   */\n      add\n        /* \"#utility.yul\":10253:10296   */\n      mstore\n        /* \"#utility.yul\":10364:10367   */\n      0xa0\n        /* \"#utility.yul\":10357:10359   */\n      0x1f\n        /* \"#utility.yul\":10353:10360   */\n      not\n        /* \"#utility.yul\":10348:10350   */\n      0x1f\n        /* \"#utility.yul\":10340:10346   */\n      dup6\n        /* \"#utility.yul\":10336:10351   */\n      add\n        /* \"#utility.yul\":10332:10361   */\n      and\n        /* \"#utility.yul\":10321:10330   */\n      dup4\n        /* \"#utility.yul\":10317:10362   */\n      add\n        /* \"#utility.yul\":10313:10368   */\n      add\n        /* \"#utility.yul\":10305:10368   */\n      swap1\n      pop\n        /* \"#utility.yul\":9712:10374   */\n      swap7\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10379:11400   */\n    tag_238:\n        /* \"#utility.yul\":10555:10558   */\n      0x00\n        /* \"#utility.yul\":10584:10585   */\n      dup1\n        /* \"#utility.yul\":10617:10623   */\n      dup5\n        /* \"#utility.yul\":10611:10624   */\n      sload\n        /* \"#utility.yul\":10647:10683   */\n      tag_474\n        /* \"#utility.yul\":10673:10682   */\n      dup2\n        /* \"#utility.yul\":10647:10683   */\n      tag_140\n      jump\t// in\n    tag_474:\n        /* \"#utility.yul\":10702:10703   */\n      0x01\n        /* \"#utility.yul\":10719:10736   */\n      dup3\n      dup2\n      and\n        /* \"#utility.yul\":10745:10878   */\n      dup1\n      iszero\n      tag_476\n      jumpi\n        /* \"#utility.yul\":10892:10893   */\n      0x01\n        /* \"#utility.yul\":10887:11245   */\n      dup2\n      eq\n      tag_477\n      jumpi\n        /* \"#utility.yul\":10712:11245   */\n      jump(tag_475)\n        /* \"#utility.yul\":10745:10878   */\n    tag_476:\n      not(0xff)\n        /* \"#utility.yul\":10778:10802   */\n      dup5\n      and\n        /* \"#utility.yul\":10766:10803   */\n      dup8\n      mstore\n        /* \"#utility.yul\":10851:10865   */\n      dup3\n      iszero\n        /* \"#utility.yul\":10844:10866   */\n      iszero\n        /* \"#utility.yul\":10832:10867   */\n      dup4\n      mul\n        /* \"#utility.yul\":10823:10868   */\n      dup8\n      add\n      swap5\n      pop\n        /* \"#utility.yul\":10745:10878   */\n      jump(tag_475)\n        /* \"#utility.yul\":10887:11245   */\n    tag_477:\n        /* \"#utility.yul\":10918:10924   */\n      dup9\n        /* \"#utility.yul\":10915:10916   */\n      0x00\n        /* \"#utility.yul\":10908:10925   */\n      mstore\n        /* \"#utility.yul\":10948:10952   */\n      0x20\n        /* \"#utility.yul\":10993:10997   */\n      dup1\n        /* \"#utility.yul\":10990:10991   */\n      0x00\n        /* \"#utility.yul\":10980:10998   */\n      keccak256\n        /* \"#utility.yul\":11020:11021   */\n      0x00\n        /* \"#utility.yul\":11034:11199   */\n    tag_478:\n        /* \"#utility.yul\":11048:11054   */\n      dup6\n        /* \"#utility.yul\":11045:11046   */\n      dup2\n        /* \"#utility.yul\":11042:11055   */\n      lt\n        /* \"#utility.yul\":11034:11199   */\n      iszero\n      tag_480\n      jumpi\n        /* \"#utility.yul\":11126:11140   */\n      dup2\n      sload\n        /* \"#utility.yul\":11113:11124   */\n      dup11\n      dup3\n      add\n        /* \"#utility.yul\":11106:11141   */\n      mstore\n        /* \"#utility.yul\":11169:11185   */\n      swap1\n      dup5\n      add\n      swap1\n        /* \"#utility.yul\":11063:11073   */\n      dup3\n      add\n        /* \"#utility.yul\":11034:11199   */\n      jump(tag_478)\n    tag_480:\n        /* \"#utility.yul\":11038:11041   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":11228:11234   */\n      dup3\n        /* \"#utility.yul\":11223:11226   */\n      dup8\n        /* \"#utility.yul\":11219:11235   */\n      add\n        /* \"#utility.yul\":11212:11235   */\n      swap5\n      pop\n        /* \"#utility.yul\":10712:11245   */\n    tag_475:\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":11276:11282   */\n      dup4\n        /* \"#utility.yul\":11270:11283   */\n      mload\n        /* \"#utility.yul\":11292:11360   */\n      tag_481\n        /* \"#utility.yul\":11351:11359   */\n      dup2\n        /* \"#utility.yul\":11346:11349   */\n      dup4\n        /* \"#utility.yul\":11339:11343   */\n      0x20\n        /* \"#utility.yul\":11331:11337   */\n      dup9\n        /* \"#utility.yul\":11327:11344   */\n      add\n        /* \"#utility.yul\":11292:11360   */\n      tag_369\n      jump\t// in\n    tag_481:\n        /* \"#utility.yul\":11376:11394   */\n      add\n      swap5\n        /* \"#utility.yul\":10379:11400   */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11592:12078   */\n    tag_263:\n        /* \"#utility.yul\":11844:11910   */\n      0x7b226e616d65223a20224161766547686f737465722023000000000000000000\n        /* \"#utility.yul\":11839:11842   */\n      dup2\n        /* \"#utility.yul\":11832:11911   */\n      mstore\n        /* \"#utility.yul\":11814:11817   */\n      0x00\n        /* \"#utility.yul\":11940:11946   */\n      dup3\n        /* \"#utility.yul\":11934:11947   */\n      mload\n        /* \"#utility.yul\":11956:12031   */\n      tag_484\n        /* \"#utility.yul\":12024:12030   */\n      dup2\n        /* \"#utility.yul\":12019:12021   */\n      0x17\n        /* \"#utility.yul\":12014:12017   */\n      dup6\n        /* \"#utility.yul\":12010:12022   */\n      add\n        /* \"#utility.yul\":12003:12007   */\n      0x20\n        /* \"#utility.yul\":11995:12001   */\n      dup8\n        /* \"#utility.yul\":11991:12008   */\n      add\n        /* \"#utility.yul\":11956:12031   */\n      tag_369\n      jump\t// in\n    tag_484:\n        /* \"#utility.yul\":12051:12067   */\n      swap2\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":12069:12071   */\n      0x17\n        /* \"#utility.yul\":12047:12072   */\n      add\n      swap3\n        /* \"#utility.yul\":11592:12078   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12083:13013   */\n    tag_265:\n        /* \"#utility.yul\":12315:12318   */\n      0x00\n        /* \"#utility.yul\":12353:12359   */\n      dup3\n        /* \"#utility.yul\":12347:12360   */\n      mload\n        /* \"#utility.yul\":12369:12435   */\n      tag_486\n        /* \"#utility.yul\":12428:12434   */\n      dup2\n        /* \"#utility.yul\":12423:12426   */\n      dup5\n        /* \"#utility.yul\":12416:12420   */\n      0x20\n        /* \"#utility.yul\":12408:12414   */\n      dup8\n        /* \"#utility.yul\":12404:12421   */\n      add\n        /* \"#utility.yul\":12369:12435   */\n      tag_369\n      jump\t// in\n    tag_486:\n        /* \"#utility.yul\":12496:12562   */\n      0x222c226465736372697074696f6e223a224120636f6c6c656374696f6e206f66\n        /* \"#utility.yul\":12457:12473   */\n      swap3\n      add\n        /* \"#utility.yul\":12482:12563   */\n      swap2\n      dup3\n      mstore\n      pop\n        /* \"#utility.yul\":12597:12631   */\n      0x2031352c303030204161766547686f7374657220656e61626c65642062792045\n        /* \"#utility.yul\":12590:12594   */\n      0x20\n        /* \"#utility.yul\":12579:12595   */\n      dup3\n      add\n        /* \"#utility.yul\":12572:12632   */\n      mstore\n        /* \"#utility.yul\":12664:12698   */\n      0x52433430342c20616e206578706572696d656e74616c20746f6b656e20737461\n        /* \"#utility.yul\":12659:12661   */\n      0x40\n        /* \"#utility.yul\":12648:12662   */\n      dup3\n      add\n        /* \"#utility.yul\":12641:12699   */\n      mstore\n        /* \"#utility.yul\":12731:12797   */\n      0x6e6461726420696e7370697265642062792050616e646f7261222c2265787465\n        /* \"#utility.yul\":12726:12728   */\n      0x60\n        /* \"#utility.yul\":12715:12729   */\n      dup3\n      add\n        /* \"#utility.yul\":12708:12798   */\n      mstore\n        /* \"#utility.yul\":12831:12897   */\n      0x726e616c5f75726c223a2268747470733a2f2f6161766567686f737465722e6f\n        /* \"#utility.yul\":12825:12828   */\n      0x80\n        /* \"#utility.yul\":12814:12829   */\n      dup3\n      add\n        /* \"#utility.yul\":12807:12898   */\n      mstore\n      shl(0x81, 0x373634b73291161134b6b0b3b2911d11)\n        /* \"#utility.yul\":12925:12928   */\n      0xa0\n        /* \"#utility.yul\":12914:12929   */\n      dup3\n      add\n        /* \"#utility.yul\":12907:12976   */\n      mstore\n        /* \"#utility.yul\":13003:13006   */\n      0xb0\n        /* \"#utility.yul\":12992:13007   */\n      add\n      swap2\n        /* \"#utility.yul\":12083:13013   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13018:13514   */\n    tag_268:\n        /* \"#utility.yul\":13197:13200   */\n      0x00\n        /* \"#utility.yul\":13235:13241   */\n      dup4\n        /* \"#utility.yul\":13229:13242   */\n      mload\n        /* \"#utility.yul\":13251:13317   */\n      tag_488\n        /* \"#utility.yul\":13310:13316   */\n      dup2\n        /* \"#utility.yul\":13305:13308   */\n      dup5\n        /* \"#utility.yul\":13298:13302   */\n      0x20\n        /* \"#utility.yul\":13290:13296   */\n      dup9\n        /* \"#utility.yul\":13286:13303   */\n      add\n        /* \"#utility.yul\":13251:13317   */\n      tag_369\n      jump\t// in\n    tag_488:\n        /* \"#utility.yul\":13380:13393   */\n      dup4\n      mload\n        /* \"#utility.yul\":13339:13355   */\n      swap1\n      dup4\n      add\n      swap1\n        /* \"#utility.yul\":13402:13472   */\n      tag_481\n        /* \"#utility.yul\":13380:13393   */\n      dup2\n        /* \"#utility.yul\":13339:13355   */\n      dup4\n        /* \"#utility.yul\":13449:13453   */\n      0x20\n        /* \"#utility.yul\":13437:13454   */\n      dup9\n      add\n        /* \"#utility.yul\":13402:13472   */\n      tag_369\n      jump\t// in\n        /* \"#utility.yul\":13519:14086   */\n    tag_270:\n        /* \"#utility.yul\":13781:13847   */\n      0x222c2261747472696275746573223a5b7b2274726169745f74797065223a2243\n        /* \"#utility.yul\":13776:13779   */\n      dup2\n        /* \"#utility.yul\":13769:13848   */\n      mstore\n        /* \"#utility.yul\":13887:13919   */\n      0x37b637b91116113b30b63ab2911d11\n        /* \"#utility.yul\":13882:13885   */\n      0x89\n        /* \"#utility.yul\":13878:13920   */\n      shl\n        /* \"#utility.yul\":13873:13875   */\n      0x20\n        /* \"#utility.yul\":13868:13871   */\n      dup3\n        /* \"#utility.yul\":13864:13876   */\n      add\n        /* \"#utility.yul\":13857:13921   */\n      mstore\n        /* \"#utility.yul\":13751:13754   */\n      0x00\n        /* \"#utility.yul\":13950:13956   */\n      dup3\n        /* \"#utility.yul\":13944:13957   */\n      mload\n        /* \"#utility.yul\":13966:14039   */\n      tag_491\n        /* \"#utility.yul\":14032:14038   */\n      dup2\n        /* \"#utility.yul\":14027:14029   */\n      0x2f\n        /* \"#utility.yul\":14022:14025   */\n      dup6\n        /* \"#utility.yul\":14018:14030   */\n      add\n        /* \"#utility.yul\":14013:14015   */\n      0x20\n        /* \"#utility.yul\":14005:14011   */\n      dup8\n        /* \"#utility.yul\":14001:14016   */\n      add\n        /* \"#utility.yul\":13966:14039   */\n      tag_369\n      jump\t// in\n    tag_491:\n        /* \"#utility.yul\":14059:14075   */\n      swap2\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":14077:14079   */\n      0x2f\n        /* \"#utility.yul\":14055:14080   */\n      add\n      swap3\n        /* \"#utility.yul\":13519:14086   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14091:14540   */\n    tag_274:\n        /* \"#utility.yul\":14343:14372   */\n      0x646174613a6170706c69636174696f6e2f6a736f6e3b757466382c0000000000\n        /* \"#utility.yul\":14338:14341   */\n      dup2\n        /* \"#utility.yul\":14331:14373   */\n      mstore\n        /* \"#utility.yul\":14313:14316   */\n      0x00\n        /* \"#utility.yul\":14402:14408   */\n      dup3\n        /* \"#utility.yul\":14396:14409   */\n      mload\n        /* \"#utility.yul\":14418:14493   */\n      tag_493\n        /* \"#utility.yul\":14486:14492   */\n      dup2\n        /* \"#utility.yul\":14481:14483   */\n      0x1b\n        /* \"#utility.yul\":14476:14479   */\n      dup6\n        /* \"#utility.yul\":14472:14484   */\n      add\n        /* \"#utility.yul\":14465:14469   */\n      0x20\n        /* \"#utility.yul\":14457:14463   */\n      dup8\n        /* \"#utility.yul\":14453:14470   */\n      add\n        /* \"#utility.yul\":14418:14493   */\n      tag_369\n      jump\t// in\n    tag_493:\n        /* \"#utility.yul\":14513:14529   */\n      swap2\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":14531:14533   */\n      0x1b\n        /* \"#utility.yul\":14509:14534   */\n      add\n      swap3\n        /* \"#utility.yul\":14091:14540   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14545:14961   */\n    tag_376:\n        /* \"#utility.yul\":14634:14635   */\n      0x01\n        /* \"#utility.yul\":14671:14676   */\n      dup2\n        /* \"#utility.yul\":14634:14635   */\n      dup2\n        /* \"#utility.yul\":14685:14955   */\n    tag_495:\n        /* \"#utility.yul\":14706:14713   */\n      dup1\n        /* \"#utility.yul\":14696:14704   */\n      dup6\n        /* \"#utility.yul\":14693:14714   */\n      gt\n        /* \"#utility.yul\":14685:14955   */\n      iszero\n      tag_497\n      jumpi\n        /* \"#utility.yul\":14765:14769   */\n      dup2\n        /* \"#utility.yul\":14761:14762   */\n      0x00\n        /* \"#utility.yul\":14757:14763   */\n      not\n        /* \"#utility.yul\":14753:14770   */\n      div\n        /* \"#utility.yul\":14747:14751   */\n      dup3\n        /* \"#utility.yul\":14744:14771   */\n      gt\n        /* \"#utility.yul\":14741:14794   */\n      iszero\n      tag_499\n      jumpi\n        /* \"#utility.yul\":14774:14792   */\n      tag_499\n      tag_375\n      jump\t// in\n    tag_499:\n        /* \"#utility.yul\":14824:14831   */\n      dup1\n        /* \"#utility.yul\":14814:14822   */\n      dup6\n        /* \"#utility.yul\":14810:14832   */\n      and\n        /* \"#utility.yul\":14807:14862   */\n      iszero\n      tag_500\n      jumpi\n        /* \"#utility.yul\":14844:14860   */\n      swap2\n      dup2\n      mul\n      swap2\n        /* \"#utility.yul\":14807:14862   */\n    tag_500:\n        /* \"#utility.yul\":14923:14945   */\n      swap4\n      dup5\n      shr\n      swap4\n        /* \"#utility.yul\":14883:14898   */\n      swap1\n      dup1\n      mul\n      swap1\n        /* \"#utility.yul\":14685:14955   */\n      jump(tag_495)\n    tag_497:\n        /* \"#utility.yul\":14689:14692   */\n      pop\n        /* \"#utility.yul\":14545:14961   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14966:15772   */\n    tag_377:\n        /* \"#utility.yul\":15015:15020   */\n      0x00\n        /* \"#utility.yul\":15045:15053   */\n      dup3\n        /* \"#utility.yul\":15035:15115   */\n      tag_502\n      jumpi\n      pop\n        /* \"#utility.yul\":15086:15087   */\n      0x01\n        /* \"#utility.yul\":15100:15105   */\n      jump(tag_145)\n        /* \"#utility.yul\":15035:15115   */\n    tag_502:\n        /* \"#utility.yul\":15134:15138   */\n      dup2\n        /* \"#utility.yul\":15124:15200   */\n      tag_503\n      jumpi\n      pop\n        /* \"#utility.yul\":15171:15172   */\n      0x00\n        /* \"#utility.yul\":15185:15190   */\n      jump(tag_145)\n        /* \"#utility.yul\":15124:15200   */\n    tag_503:\n        /* \"#utility.yul\":15216:15220   */\n      dup2\n        /* \"#utility.yul\":15234:15235   */\n      0x01\n        /* \"#utility.yul\":15229:15288   */\n      dup2\n      eq\n      tag_505\n      jumpi\n        /* \"#utility.yul\":15302:15303   */\n      0x02\n        /* \"#utility.yul\":15297:15427   */\n      dup2\n      eq\n      tag_506\n      jumpi\n        /* \"#utility.yul\":15209:15427   */\n      jump(tag_504)\n        /* \"#utility.yul\":15229:15288   */\n    tag_505:\n        /* \"#utility.yul\":15259:15260   */\n      0x01\n        /* \"#utility.yul\":15250:15260   */\n      swap2\n      pop\n        /* \"#utility.yul\":15273:15278   */\n      pop\n      jump(tag_145)\n        /* \"#utility.yul\":15297:15427   */\n    tag_506:\n        /* \"#utility.yul\":15334:15337   */\n      0xff\n        /* \"#utility.yul\":15324:15332   */\n      dup5\n        /* \"#utility.yul\":15321:15338   */\n      gt\n        /* \"#utility.yul\":15318:15361   */\n      iszero\n      tag_508\n      jumpi\n        /* \"#utility.yul\":15341:15359   */\n      tag_508\n      tag_375\n      jump\t// in\n    tag_508:\n      pop\n      pop\n        /* \"#utility.yul\":15397:15398   */\n      0x01\n        /* \"#utility.yul\":15383:15399   */\n      dup3\n      shl\n        /* \"#utility.yul\":15412:15417   */\n      jump(tag_145)\n        /* \"#utility.yul\":15209:15427   */\n    tag_504:\n      pop\n        /* \"#utility.yul\":15511:15513   */\n      0x20\n        /* \"#utility.yul\":15501:15509   */\n      dup4\n        /* \"#utility.yul\":15498:15514   */\n      lt\n        /* \"#utility.yul\":15492:15495   */\n      0x0133\n        /* \"#utility.yul\":15486:15490   */\n      dup4\n        /* \"#utility.yul\":15483:15496   */\n      lt\n        /* \"#utility.yul\":15479:15515   */\n      and\n        /* \"#utility.yul\":15473:15475   */\n      0x4e\n        /* \"#utility.yul\":15463:15471   */\n      dup5\n        /* \"#utility.yul\":15460:15476   */\n      lt\n        /* \"#utility.yul\":15455:15457   */\n      0x0b\n        /* \"#utility.yul\":15449:15453   */\n      dup5\n        /* \"#utility.yul\":15446:15458   */\n      lt\n        /* \"#utility.yul\":15442:15477   */\n      and\n        /* \"#utility.yul\":15439:15516   */\n      or\n        /* \"#utility.yul\":15436:15595   */\n      iszero\n      tag_509\n      jumpi\n      pop\n        /* \"#utility.yul\":15548:15567   */\n      dup2\n      dup2\n      exp\n        /* \"#utility.yul\":15580:15585   */\n      jump(tag_145)\n        /* \"#utility.yul\":15436:15595   */\n    tag_509:\n        /* \"#utility.yul\":15627:15661   */\n      tag_510\n        /* \"#utility.yul\":15652:15660   */\n      dup4\n        /* \"#utility.yul\":15646:15650   */\n      dup4\n        /* \"#utility.yul\":15627:15661   */\n      tag_376\n      jump\t// in\n    tag_510:\n        /* \"#utility.yul\":15697:15703   */\n      dup1\n        /* \"#utility.yul\":15693:15694   */\n      0x00\n        /* \"#utility.yul\":15689:15695   */\n      not\n        /* \"#utility.yul\":15685:15704   */\n      div\n        /* \"#utility.yul\":15676:15683   */\n      dup3\n        /* \"#utility.yul\":15673:15705   */\n      gt\n        /* \"#utility.yul\":15670:15728   */\n      iszero\n      tag_512\n      jumpi\n        /* \"#utility.yul\":15708:15726   */\n      tag_512\n      tag_375\n      jump\t// in\n    tag_512:\n        /* \"#utility.yul\":15746:15766   */\n      mul\n      swap4\n        /* \"#utility.yul\":14966:15772   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15777:15917   */\n    tag_295:\n        /* \"#utility.yul\":15835:15840   */\n      0x00\n        /* \"#utility.yul\":15864:15911   */\n      tag_222\n        /* \"#utility.yul\":15905:15909   */\n      0xff\n        /* \"#utility.yul\":15895:15903   */\n      dup5\n        /* \"#utility.yul\":15891:15910   */\n      and\n        /* \"#utility.yul\":15885:15889   */\n      dup4\n        /* \"#utility.yul\":15864:15911   */\n      tag_377\n      jump\t// in\n        /* \"#utility.yul\":16054:16271   */\n    tag_301:\n        /* \"#utility.yul\":16094:16095   */\n      0x00\n        /* \"#utility.yul\":16120:16121   */\n      dup3\n        /* \"#utility.yul\":16110:16242   */\n      tag_517\n      jumpi\n        /* \"#utility.yul\":16164:16174   */\n      0x4e487b71\n        /* \"#utility.yul\":16159:16162   */\n      0xe0\n        /* \"#utility.yul\":16155:16175   */\n      shl\n        /* \"#utility.yul\":16152:16153   */\n      0x00\n        /* \"#utility.yul\":16145:16176   */\n      mstore\n        /* \"#utility.yul\":16199:16203   */\n      0x12\n        /* \"#utility.yul\":16196:16197   */\n      0x04\n        /* \"#utility.yul\":16189:16204   */\n      mstore\n        /* \"#utility.yul\":16227:16231   */\n      0x24\n        /* \"#utility.yul\":16224:16225   */\n      0x00\n        /* \"#utility.yul\":16217:16232   */\n      revert\n        /* \"#utility.yul\":16110:16242   */\n    tag_517:\n      pop\n        /* \"#utility.yul\":16256:16265   */\n      div\n      swap1\n        /* \"#utility.yul\":16054:16271   */\n      jump\t// out\n\n    auxdata: 0xa26469706673582212207f01dbcaf3bd65a9463b6c991d65c78cf5ebad17478d717dd482a4dbfc9f1dff64736f6c63430008180033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1446": {
									"entryPoint": null,
									"id": 1446,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_1777": {
									"entryPoint": null,
									"id": 1777,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_1998": {
									"entryPoint": null,
									"id": 1998,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 373,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_exp_helper": {
									"entryPoint": 816,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"checked_exp_t_uint256_t_uint8": {
									"entryPoint": 1071,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_unsigned": {
									"entryPoint": 889,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 1088,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_string_storage": {
									"entryPoint": 505,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 590,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 445,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 794,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 423,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:4700:5",
										"nodeType": "YulBlock",
										"src": "0:4700:5",
										"statements": [
											{
												"nativeSrc": "6:3:5",
												"nodeType": "YulBlock",
												"src": "6:3:5",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "95:209:5",
													"nodeType": "YulBlock",
													"src": "95:209:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "141:16:5",
																"nodeType": "YulBlock",
																"src": "141:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "150:1:5",
																					"nodeType": "YulLiteral",
																					"src": "150:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "153:1:5",
																					"nodeType": "YulLiteral",
																					"src": "153:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "143:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "143:6:5"
																			},
																			"nativeSrc": "143:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "143:12:5"
																		},
																		"nativeSrc": "143:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "143:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "116:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "116:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "125:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "125:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "112:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "112:3:5"
																		},
																		"nativeSrc": "112:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "112:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "137:2:5",
																		"nodeType": "YulLiteral",
																		"src": "137:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "108:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "108:3:5"
																},
																"nativeSrc": "108:32:5",
																"nodeType": "YulFunctionCall",
																"src": "108:32:5"
															},
															"nativeSrc": "105:52:5",
															"nodeType": "YulIf",
															"src": "105:52:5"
														},
														{
															"nativeSrc": "166:29:5",
															"nodeType": "YulVariableDeclaration",
															"src": "166:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "185:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "185:9:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "179:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "179:5:5"
																},
																"nativeSrc": "179:16:5",
																"nodeType": "YulFunctionCall",
																"src": "179:16:5"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "170:5:5",
																	"nodeType": "YulTypedName",
																	"src": "170:5:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "258:16:5",
																"nodeType": "YulBlock",
																"src": "258:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "267:1:5",
																					"nodeType": "YulLiteral",
																					"src": "267:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "270:1:5",
																					"nodeType": "YulLiteral",
																					"src": "270:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "260:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "260:6:5"
																			},
																			"nativeSrc": "260:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "260:12:5"
																		},
																		"nativeSrc": "260:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "260:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "217:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "217:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "228:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "228:5:5"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "243:3:5",
																										"nodeType": "YulLiteral",
																										"src": "243:3:5",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "248:1:5",
																										"nodeType": "YulLiteral",
																										"src": "248:1:5",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "239:3:5",
																									"nodeType": "YulIdentifier",
																									"src": "239:3:5"
																								},
																								"nativeSrc": "239:11:5",
																								"nodeType": "YulFunctionCall",
																								"src": "239:11:5"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "252:1:5",
																								"nodeType": "YulLiteral",
																								"src": "252:1:5",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "235:3:5",
																							"nodeType": "YulIdentifier",
																							"src": "235:3:5"
																						},
																						"nativeSrc": "235:19:5",
																						"nodeType": "YulFunctionCall",
																						"src": "235:19:5"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "224:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "224:3:5"
																				},
																				"nativeSrc": "224:31:5",
																				"nodeType": "YulFunctionCall",
																				"src": "224:31:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "214:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "214:2:5"
																		},
																		"nativeSrc": "214:42:5",
																		"nodeType": "YulFunctionCall",
																		"src": "214:42:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "207:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "207:6:5"
																},
																"nativeSrc": "207:50:5",
																"nodeType": "YulFunctionCall",
																"src": "207:50:5"
															},
															"nativeSrc": "204:70:5",
															"nodeType": "YulIf",
															"src": "204:70:5"
														},
														{
															"nativeSrc": "283:15:5",
															"nodeType": "YulAssignment",
															"src": "283:15:5",
															"value": {
																"name": "value",
																"nativeSrc": "293:5:5",
																"nodeType": "YulIdentifier",
																"src": "293:5:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "283:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "283:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nativeSrc": "14:290:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "61:9:5",
														"nodeType": "YulTypedName",
														"src": "61:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "72:7:5",
														"nodeType": "YulTypedName",
														"src": "72:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "84:6:5",
														"nodeType": "YulTypedName",
														"src": "84:6:5",
														"type": ""
													}
												],
												"src": "14:290:5"
											},
											{
												"body": {
													"nativeSrc": "341:95:5",
													"nodeType": "YulBlock",
													"src": "341:95:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "358:1:5",
																		"nodeType": "YulLiteral",
																		"src": "358:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "365:3:5",
																				"nodeType": "YulLiteral",
																				"src": "365:3:5",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "370:10:5",
																				"nodeType": "YulLiteral",
																				"src": "370:10:5",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "361:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "361:3:5"
																		},
																		"nativeSrc": "361:20:5",
																		"nodeType": "YulFunctionCall",
																		"src": "361:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "351:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "351:6:5"
																},
																"nativeSrc": "351:31:5",
																"nodeType": "YulFunctionCall",
																"src": "351:31:5"
															},
															"nativeSrc": "351:31:5",
															"nodeType": "YulExpressionStatement",
															"src": "351:31:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "398:1:5",
																		"nodeType": "YulLiteral",
																		"src": "398:1:5",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "401:4:5",
																		"nodeType": "YulLiteral",
																		"src": "401:4:5",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "391:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "391:6:5"
																},
																"nativeSrc": "391:15:5",
																"nodeType": "YulFunctionCall",
																"src": "391:15:5"
															},
															"nativeSrc": "391:15:5",
															"nodeType": "YulExpressionStatement",
															"src": "391:15:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "422:1:5",
																		"nodeType": "YulLiteral",
																		"src": "422:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "425:4:5",
																		"nodeType": "YulLiteral",
																		"src": "425:4:5",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "415:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "415:6:5"
																},
																"nativeSrc": "415:15:5",
																"nodeType": "YulFunctionCall",
																"src": "415:15:5"
															},
															"nativeSrc": "415:15:5",
															"nodeType": "YulExpressionStatement",
															"src": "415:15:5"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "309:127:5",
												"nodeType": "YulFunctionDefinition",
												"src": "309:127:5"
											},
											{
												"body": {
													"nativeSrc": "496:325:5",
													"nodeType": "YulBlock",
													"src": "496:325:5",
													"statements": [
														{
															"nativeSrc": "506:22:5",
															"nodeType": "YulAssignment",
															"src": "506:22:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "520:1:5",
																		"nodeType": "YulLiteral",
																		"src": "520:1:5",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "523:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "523:4:5"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "516:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "516:3:5"
																},
																"nativeSrc": "516:12:5",
																"nodeType": "YulFunctionCall",
																"src": "516:12:5"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "506:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "506:6:5"
																}
															]
														},
														{
															"nativeSrc": "537:38:5",
															"nodeType": "YulVariableDeclaration",
															"src": "537:38:5",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "567:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "567:4:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "573:1:5",
																		"nodeType": "YulLiteral",
																		"src": "573:1:5",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "563:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "563:3:5"
																},
																"nativeSrc": "563:12:5",
																"nodeType": "YulFunctionCall",
																"src": "563:12:5"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "541:18:5",
																	"nodeType": "YulTypedName",
																	"src": "541:18:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "614:31:5",
																"nodeType": "YulBlock",
																"src": "614:31:5",
																"statements": [
																	{
																		"nativeSrc": "616:27:5",
																		"nodeType": "YulAssignment",
																		"src": "616:27:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "630:6:5",
																					"nodeType": "YulIdentifier",
																					"src": "630:6:5"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "638:4:5",
																					"nodeType": "YulLiteral",
																					"src": "638:4:5",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "626:3:5",
																				"nodeType": "YulIdentifier",
																				"src": "626:3:5"
																			},
																			"nativeSrc": "626:17:5",
																			"nodeType": "YulFunctionCall",
																			"src": "626:17:5"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "616:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "616:6:5"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "594:18:5",
																		"nodeType": "YulIdentifier",
																		"src": "594:18:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "587:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "587:6:5"
																},
																"nativeSrc": "587:26:5",
																"nodeType": "YulFunctionCall",
																"src": "587:26:5"
															},
															"nativeSrc": "584:61:5",
															"nodeType": "YulIf",
															"src": "584:61:5"
														},
														{
															"body": {
																"nativeSrc": "704:111:5",
																"nodeType": "YulBlock",
																"src": "704:111:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "725:1:5",
																					"nodeType": "YulLiteral",
																					"src": "725:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "732:3:5",
																							"nodeType": "YulLiteral",
																							"src": "732:3:5",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "737:10:5",
																							"nodeType": "YulLiteral",
																							"src": "737:10:5",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "728:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "728:3:5"
																					},
																					"nativeSrc": "728:20:5",
																					"nodeType": "YulFunctionCall",
																					"src": "728:20:5"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "718:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "718:6:5"
																			},
																			"nativeSrc": "718:31:5",
																			"nodeType": "YulFunctionCall",
																			"src": "718:31:5"
																		},
																		"nativeSrc": "718:31:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "718:31:5"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "769:1:5",
																					"nodeType": "YulLiteral",
																					"src": "769:1:5",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "772:4:5",
																					"nodeType": "YulLiteral",
																					"src": "772:4:5",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "762:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "762:6:5"
																			},
																			"nativeSrc": "762:15:5",
																			"nodeType": "YulFunctionCall",
																			"src": "762:15:5"
																		},
																		"nativeSrc": "762:15:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "762:15:5"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "797:1:5",
																					"nodeType": "YulLiteral",
																					"src": "797:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "800:4:5",
																					"nodeType": "YulLiteral",
																					"src": "800:4:5",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "790:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "790:6:5"
																			},
																			"nativeSrc": "790:15:5",
																			"nodeType": "YulFunctionCall",
																			"src": "790:15:5"
																		},
																		"nativeSrc": "790:15:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "790:15:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "660:18:5",
																		"nodeType": "YulIdentifier",
																		"src": "660:18:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "683:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "683:6:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "691:2:5",
																				"nodeType": "YulLiteral",
																				"src": "691:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "680:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "680:2:5"
																		},
																		"nativeSrc": "680:14:5",
																		"nodeType": "YulFunctionCall",
																		"src": "680:14:5"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "657:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "657:2:5"
																},
																"nativeSrc": "657:38:5",
																"nodeType": "YulFunctionCall",
																"src": "657:38:5"
															},
															"nativeSrc": "654:161:5",
															"nodeType": "YulIf",
															"src": "654:161:5"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "441:380:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "476:4:5",
														"nodeType": "YulTypedName",
														"src": "476:4:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "485:6:5",
														"nodeType": "YulTypedName",
														"src": "485:6:5",
														"type": ""
													}
												],
												"src": "441:380:5"
											},
											{
												"body": {
													"nativeSrc": "882:65:5",
													"nodeType": "YulBlock",
													"src": "882:65:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "899:1:5",
																		"nodeType": "YulLiteral",
																		"src": "899:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "902:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "902:3:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "892:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "892:6:5"
																},
																"nativeSrc": "892:14:5",
																"nodeType": "YulFunctionCall",
																"src": "892:14:5"
															},
															"nativeSrc": "892:14:5",
															"nodeType": "YulExpressionStatement",
															"src": "892:14:5"
														},
														{
															"nativeSrc": "915:26:5",
															"nodeType": "YulAssignment",
															"src": "915:26:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "933:1:5",
																		"nodeType": "YulLiteral",
																		"src": "933:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "936:4:5",
																		"nodeType": "YulLiteral",
																		"src": "936:4:5",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "923:9:5",
																	"nodeType": "YulIdentifier",
																	"src": "923:9:5"
																},
																"nativeSrc": "923:18:5",
																"nodeType": "YulFunctionCall",
																"src": "923:18:5"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "915:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "915:4:5"
																}
															]
														}
													]
												},
												"name": "array_dataslot_string_storage",
												"nativeSrc": "826:121:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "865:3:5",
														"nodeType": "YulTypedName",
														"src": "865:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "873:4:5",
														"nodeType": "YulTypedName",
														"src": "873:4:5",
														"type": ""
													}
												],
												"src": "826:121:5"
											},
											{
												"body": {
													"nativeSrc": "1033:462:5",
													"nodeType": "YulBlock",
													"src": "1033:462:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "1066:423:5",
																"nodeType": "YulBlock",
																"src": "1066:423:5",
																"statements": [
																	{
																		"nativeSrc": "1080:11:5",
																		"nodeType": "YulVariableDeclaration",
																		"src": "1080:11:5",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "1090:1:5",
																			"nodeType": "YulLiteral",
																			"src": "1090:1:5",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nativeSrc": "1084:2:5",
																				"nodeType": "YulTypedName",
																				"src": "1084:2:5",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1111:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1111:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"name": "array",
																					"nativeSrc": "1114:5:5",
																					"nodeType": "YulIdentifier",
																					"src": "1114:5:5"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "1104:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "1104:6:5"
																			},
																			"nativeSrc": "1104:16:5",
																			"nodeType": "YulFunctionCall",
																			"src": "1104:16:5"
																		},
																		"nativeSrc": "1104:16:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "1104:16:5"
																	},
																	{
																		"nativeSrc": "1133:30:5",
																		"nodeType": "YulVariableDeclaration",
																		"src": "1133:30:5",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1155:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1155:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1158:4:5",
																					"nodeType": "YulLiteral",
																					"src": "1158:4:5",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nativeSrc": "1145:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "1145:9:5"
																			},
																			"nativeSrc": "1145:18:5",
																			"nodeType": "YulFunctionCall",
																			"src": "1145:18:5"
																		},
																		"variables": [
																			{
																				"name": "data",
																				"nativeSrc": "1137:4:5",
																				"nodeType": "YulTypedName",
																				"src": "1137:4:5",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "1176:57:5",
																		"nodeType": "YulVariableDeclaration",
																		"src": "1176:57:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "1199:4:5",
																					"nodeType": "YulIdentifier",
																					"src": "1199:4:5"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "1209:1:5",
																							"nodeType": "YulLiteral",
																							"src": "1209:1:5",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "startIndex",
																									"nativeSrc": "1216:10:5",
																									"nodeType": "YulIdentifier",
																									"src": "1216:10:5"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "1228:2:5",
																									"nodeType": "YulLiteral",
																									"src": "1228:2:5",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "1212:3:5",
																								"nodeType": "YulIdentifier",
																								"src": "1212:3:5"
																							},
																							"nativeSrc": "1212:19:5",
																							"nodeType": "YulFunctionCall",
																							"src": "1212:19:5"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "1205:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "1205:3:5"
																					},
																					"nativeSrc": "1205:27:5",
																					"nodeType": "YulFunctionCall",
																					"src": "1205:27:5"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "1195:3:5",
																				"nodeType": "YulIdentifier",
																				"src": "1195:3:5"
																			},
																			"nativeSrc": "1195:38:5",
																			"nodeType": "YulFunctionCall",
																			"src": "1195:38:5"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "1180:11:5",
																				"nodeType": "YulTypedName",
																				"src": "1180:11:5",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "1270:23:5",
																			"nodeType": "YulBlock",
																			"src": "1270:23:5",
																			"statements": [
																				{
																					"nativeSrc": "1272:19:5",
																					"nodeType": "YulAssignment",
																					"src": "1272:19:5",
																					"value": {
																						"name": "data",
																						"nativeSrc": "1287:4:5",
																						"nodeType": "YulIdentifier",
																						"src": "1287:4:5"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "1272:11:5",
																							"nodeType": "YulIdentifier",
																							"src": "1272:11:5"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "1252:10:5",
																					"nodeType": "YulIdentifier",
																					"src": "1252:10:5"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1264:4:5",
																					"nodeType": "YulLiteral",
																					"src": "1264:4:5",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "1249:2:5",
																				"nodeType": "YulIdentifier",
																				"src": "1249:2:5"
																			},
																			"nativeSrc": "1249:20:5",
																			"nodeType": "YulFunctionCall",
																			"src": "1249:20:5"
																		},
																		"nativeSrc": "1246:47:5",
																		"nodeType": "YulIf",
																		"src": "1246:47:5"
																	},
																	{
																		"nativeSrc": "1306:41:5",
																		"nodeType": "YulVariableDeclaration",
																		"src": "1306:41:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "1320:4:5",
																					"nodeType": "YulIdentifier",
																					"src": "1320:4:5"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "1330:1:5",
																							"nodeType": "YulLiteral",
																							"src": "1330:1:5",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "1337:3:5",
																									"nodeType": "YulIdentifier",
																									"src": "1337:3:5"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "1342:2:5",
																									"nodeType": "YulLiteral",
																									"src": "1342:2:5",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "1333:3:5",
																								"nodeType": "YulIdentifier",
																								"src": "1333:3:5"
																							},
																							"nativeSrc": "1333:12:5",
																							"nodeType": "YulFunctionCall",
																							"src": "1333:12:5"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "1326:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "1326:3:5"
																					},
																					"nativeSrc": "1326:20:5",
																					"nodeType": "YulFunctionCall",
																					"src": "1326:20:5"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "1316:3:5",
																				"nodeType": "YulIdentifier",
																				"src": "1316:3:5"
																			},
																			"nativeSrc": "1316:31:5",
																			"nodeType": "YulFunctionCall",
																			"src": "1316:31:5"
																		},
																		"variables": [
																			{
																				"name": "_2",
																				"nativeSrc": "1310:2:5",
																				"nodeType": "YulTypedName",
																				"src": "1310:2:5",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "1360:24:5",
																		"nodeType": "YulVariableDeclaration",
																		"src": "1360:24:5",
																		"value": {
																			"name": "deleteStart",
																			"nativeSrc": "1373:11:5",
																			"nodeType": "YulIdentifier",
																			"src": "1373:11:5"
																		},
																		"variables": [
																			{
																				"name": "start",
																				"nativeSrc": "1364:5:5",
																				"nodeType": "YulTypedName",
																				"src": "1364:5:5",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "1458:21:5",
																			"nodeType": "YulBlock",
																			"src": "1458:21:5",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "1467:5:5",
																								"nodeType": "YulIdentifier",
																								"src": "1467:5:5"
																							},
																							{
																								"name": "_1",
																								"nativeSrc": "1474:2:5",
																								"nodeType": "YulIdentifier",
																								"src": "1474:2:5"
																							}
																						],
																						"functionName": {
																							"name": "sstore",
																							"nativeSrc": "1460:6:5",
																							"nodeType": "YulIdentifier",
																							"src": "1460:6:5"
																						},
																						"nativeSrc": "1460:17:5",
																						"nodeType": "YulFunctionCall",
																						"src": "1460:17:5"
																					},
																					"nativeSrc": "1460:17:5",
																					"nodeType": "YulExpressionStatement",
																					"src": "1460:17:5"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "1408:5:5",
																					"nodeType": "YulIdentifier",
																					"src": "1408:5:5"
																				},
																				{
																					"name": "_2",
																					"nativeSrc": "1415:2:5",
																					"nodeType": "YulIdentifier",
																					"src": "1415:2:5"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "1405:2:5",
																				"nodeType": "YulIdentifier",
																				"src": "1405:2:5"
																			},
																			"nativeSrc": "1405:13:5",
																			"nodeType": "YulFunctionCall",
																			"src": "1405:13:5"
																		},
																		"nativeSrc": "1397:82:5",
																		"nodeType": "YulForLoop",
																		"post": {
																			"nativeSrc": "1419:26:5",
																			"nodeType": "YulBlock",
																			"src": "1419:26:5",
																			"statements": [
																				{
																					"nativeSrc": "1421:22:5",
																					"nodeType": "YulAssignment",
																					"src": "1421:22:5",
																					"value": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "1434:5:5",
																								"nodeType": "YulIdentifier",
																								"src": "1434:5:5"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1441:1:5",
																								"nodeType": "YulLiteral",
																								"src": "1441:1:5",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "1430:3:5",
																							"nodeType": "YulIdentifier",
																							"src": "1430:3:5"
																						},
																						"nativeSrc": "1430:13:5",
																						"nodeType": "YulFunctionCall",
																						"src": "1430:13:5"
																					},
																					"variableNames": [
																						{
																							"name": "start",
																							"nativeSrc": "1421:5:5",
																							"nodeType": "YulIdentifier",
																							"src": "1421:5:5"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nativeSrc": "1401:3:5",
																			"nodeType": "YulBlock",
																			"src": "1401:3:5",
																			"statements": []
																		},
																		"src": "1397:82:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "1049:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "1049:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1054:2:5",
																		"nodeType": "YulLiteral",
																		"src": "1054:2:5",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1046:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "1046:2:5"
																},
																"nativeSrc": "1046:11:5",
																"nodeType": "YulFunctionCall",
																"src": "1046:11:5"
															},
															"nativeSrc": "1043:446:5",
															"nodeType": "YulIf",
															"src": "1043:446:5"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_string_storage",
												"nativeSrc": "952:543:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "1005:5:5",
														"nodeType": "YulTypedName",
														"src": "1005:5:5",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "1012:3:5",
														"nodeType": "YulTypedName",
														"src": "1012:3:5",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "1017:10:5",
														"nodeType": "YulTypedName",
														"src": "1017:10:5",
														"type": ""
													}
												],
												"src": "952:543:5"
											},
											{
												"body": {
													"nativeSrc": "1585:81:5",
													"nodeType": "YulBlock",
													"src": "1585:81:5",
													"statements": [
														{
															"nativeSrc": "1595:65:5",
															"nodeType": "YulAssignment",
															"src": "1595:65:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "1610:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "1610:4:5"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "1628:1:5",
																										"nodeType": "YulLiteral",
																										"src": "1628:1:5",
																										"type": "",
																										"value": "3"
																									},
																									{
																										"name": "len",
																										"nativeSrc": "1631:3:5",
																										"nodeType": "YulIdentifier",
																										"src": "1631:3:5"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "1624:3:5",
																									"nodeType": "YulIdentifier",
																									"src": "1624:3:5"
																								},
																								"nativeSrc": "1624:11:5",
																								"nodeType": "YulFunctionCall",
																								"src": "1624:11:5"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "1641:1:5",
																										"nodeType": "YulLiteral",
																										"src": "1641:1:5",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nativeSrc": "1637:3:5",
																									"nodeType": "YulIdentifier",
																									"src": "1637:3:5"
																								},
																								"nativeSrc": "1637:6:5",
																								"nodeType": "YulFunctionCall",
																								"src": "1637:6:5"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nativeSrc": "1620:3:5",
																							"nodeType": "YulIdentifier",
																							"src": "1620:3:5"
																						},
																						"nativeSrc": "1620:24:5",
																						"nodeType": "YulFunctionCall",
																						"src": "1620:24:5"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "1616:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "1616:3:5"
																				},
																				"nativeSrc": "1616:29:5",
																				"nodeType": "YulFunctionCall",
																				"src": "1616:29:5"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1606:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1606:3:5"
																		},
																		"nativeSrc": "1606:40:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1606:40:5"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "1652:1:5",
																				"nodeType": "YulLiteral",
																				"src": "1652:1:5",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "1655:3:5",
																				"nodeType": "YulIdentifier",
																				"src": "1655:3:5"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "1648:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1648:3:5"
																		},
																		"nativeSrc": "1648:11:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1648:11:5"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1603:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "1603:2:5"
																},
																"nativeSrc": "1603:57:5",
																"nodeType": "YulFunctionCall",
																"src": "1603:57:5"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "1595:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "1595:4:5"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "1500:166:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "1562:4:5",
														"nodeType": "YulTypedName",
														"src": "1562:4:5",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "1568:3:5",
														"nodeType": "YulTypedName",
														"src": "1568:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "1576:4:5",
														"nodeType": "YulTypedName",
														"src": "1576:4:5",
														"type": ""
													}
												],
												"src": "1500:166:5"
											},
											{
												"body": {
													"nativeSrc": "1767:1249:5",
													"nodeType": "YulBlock",
													"src": "1767:1249:5",
													"statements": [
														{
															"nativeSrc": "1777:24:5",
															"nodeType": "YulVariableDeclaration",
															"src": "1777:24:5",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "1797:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "1797:3:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1791:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "1791:5:5"
																},
																"nativeSrc": "1791:10:5",
																"nodeType": "YulFunctionCall",
																"src": "1791:10:5"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "1781:6:5",
																	"nodeType": "YulTypedName",
																	"src": "1781:6:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1844:22:5",
																"nodeType": "YulBlock",
																"src": "1844:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1846:16:5",
																				"nodeType": "YulIdentifier",
																				"src": "1846:16:5"
																			},
																			"nativeSrc": "1846:18:5",
																			"nodeType": "YulFunctionCall",
																			"src": "1846:18:5"
																		},
																		"nativeSrc": "1846:18:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "1846:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "1816:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "1816:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "1832:2:5",
																						"nodeType": "YulLiteral",
																						"src": "1832:2:5",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1836:1:5",
																						"nodeType": "YulLiteral",
																						"src": "1836:1:5",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "1828:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "1828:3:5"
																				},
																				"nativeSrc": "1828:10:5",
																				"nodeType": "YulFunctionCall",
																				"src": "1828:10:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1840:1:5",
																				"nodeType": "YulLiteral",
																				"src": "1840:1:5",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1824:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1824:3:5"
																		},
																		"nativeSrc": "1824:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1824:18:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1813:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "1813:2:5"
																},
																"nativeSrc": "1813:30:5",
																"nodeType": "YulFunctionCall",
																"src": "1813:30:5"
															},
															"nativeSrc": "1810:56:5",
															"nodeType": "YulIf",
															"src": "1810:56:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "1919:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "1919:4:5"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "1957:4:5",
																						"nodeType": "YulIdentifier",
																						"src": "1957:4:5"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "1951:5:5",
																					"nodeType": "YulIdentifier",
																					"src": "1951:5:5"
																				},
																				"nativeSrc": "1951:11:5",
																				"nodeType": "YulFunctionCall",
																				"src": "1951:11:5"
																			}
																		],
																		"functionName": {
																			"name": "extract_byte_array_length",
																			"nativeSrc": "1925:25:5",
																			"nodeType": "YulIdentifier",
																			"src": "1925:25:5"
																		},
																		"nativeSrc": "1925:38:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1925:38:5"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "1965:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "1965:6:5"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_string_storage",
																	"nativeSrc": "1875:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "1875:43:5"
																},
																"nativeSrc": "1875:97:5",
																"nodeType": "YulFunctionCall",
																"src": "1875:97:5"
															},
															"nativeSrc": "1875:97:5",
															"nodeType": "YulExpressionStatement",
															"src": "1875:97:5"
														},
														{
															"nativeSrc": "1981:18:5",
															"nodeType": "YulVariableDeclaration",
															"src": "1981:18:5",
															"value": {
																"kind": "number",
																"nativeSrc": "1998:1:5",
																"nodeType": "YulLiteral",
																"src": "1998:1:5",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "1985:9:5",
																	"nodeType": "YulTypedName",
																	"src": "1985:9:5",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2008:23:5",
															"nodeType": "YulVariableDeclaration",
															"src": "2008:23:5",
															"value": {
																"kind": "number",
																"nativeSrc": "2027:4:5",
																"nodeType": "YulLiteral",
																"src": "2027:4:5",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "srcOffset_1",
																	"nativeSrc": "2012:11:5",
																	"nodeType": "YulTypedName",
																	"src": "2012:11:5",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2040:17:5",
															"nodeType": "YulAssignment",
															"src": "2040:17:5",
															"value": {
																"kind": "number",
																"nativeSrc": "2053:4:5",
																"nodeType": "YulLiteral",
																"src": "2053:4:5",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "2040:9:5",
																	"nodeType": "YulIdentifier",
																	"src": "2040:9:5"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "2103:656:5",
																		"nodeType": "YulBlock",
																		"src": "2103:656:5",
																		"statements": [
																			{
																				"nativeSrc": "2117:35:5",
																				"nodeType": "YulVariableDeclaration",
																				"src": "2117:35:5",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "2136:6:5",
																							"nodeType": "YulIdentifier",
																							"src": "2136:6:5"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "2148:2:5",
																									"nodeType": "YulLiteral",
																									"src": "2148:2:5",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "2144:3:5",
																								"nodeType": "YulIdentifier",
																								"src": "2144:3:5"
																							},
																							"nativeSrc": "2144:7:5",
																							"nodeType": "YulFunctionCall",
																							"src": "2144:7:5"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "2132:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "2132:3:5"
																					},
																					"nativeSrc": "2132:20:5",
																					"nodeType": "YulFunctionCall",
																					"src": "2132:20:5"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "2121:7:5",
																						"nodeType": "YulTypedName",
																						"src": "2121:7:5",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "2165:49:5",
																				"nodeType": "YulVariableDeclaration",
																				"src": "2165:49:5",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "2209:4:5",
																							"nodeType": "YulIdentifier",
																							"src": "2209:4:5"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nativeSrc": "2179:29:5",
																						"nodeType": "YulIdentifier",
																						"src": "2179:29:5"
																					},
																					"nativeSrc": "2179:35:5",
																					"nodeType": "YulFunctionCall",
																					"src": "2179:35:5"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "2169:6:5",
																						"nodeType": "YulTypedName",
																						"src": "2169:6:5",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "2227:10:5",
																				"nodeType": "YulVariableDeclaration",
																				"src": "2227:10:5",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "2236:1:5",
																					"nodeType": "YulLiteral",
																					"src": "2236:1:5",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "2231:1:5",
																						"nodeType": "YulTypedName",
																						"src": "2231:1:5",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "2314:172:5",
																					"nodeType": "YulBlock",
																					"src": "2314:172:5",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "2339:6:5",
																										"nodeType": "YulIdentifier",
																										"src": "2339:6:5"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "2357:3:5",
																														"nodeType": "YulIdentifier",
																														"src": "2357:3:5"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "2362:9:5",
																														"nodeType": "YulIdentifier",
																														"src": "2362:9:5"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "2353:3:5",
																													"nodeType": "YulIdentifier",
																													"src": "2353:3:5"
																												},
																												"nativeSrc": "2353:19:5",
																												"nodeType": "YulFunctionCall",
																												"src": "2353:19:5"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "2347:5:5",
																											"nodeType": "YulIdentifier",
																											"src": "2347:5:5"
																										},
																										"nativeSrc": "2347:26:5",
																										"nodeType": "YulFunctionCall",
																										"src": "2347:26:5"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "2332:6:5",
																									"nodeType": "YulIdentifier",
																									"src": "2332:6:5"
																								},
																								"nativeSrc": "2332:42:5",
																								"nodeType": "YulFunctionCall",
																								"src": "2332:42:5"
																							},
																							"nativeSrc": "2332:42:5",
																							"nodeType": "YulExpressionStatement",
																							"src": "2332:42:5"
																						},
																						{
																							"nativeSrc": "2391:24:5",
																							"nodeType": "YulAssignment",
																							"src": "2391:24:5",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "2405:6:5",
																										"nodeType": "YulIdentifier",
																										"src": "2405:6:5"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "2413:1:5",
																										"nodeType": "YulLiteral",
																										"src": "2413:1:5",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "2401:3:5",
																									"nodeType": "YulIdentifier",
																									"src": "2401:3:5"
																								},
																								"nativeSrc": "2401:14:5",
																								"nodeType": "YulFunctionCall",
																								"src": "2401:14:5"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "2391:6:5",
																									"nodeType": "YulIdentifier",
																									"src": "2391:6:5"
																								}
																							]
																						},
																						{
																							"nativeSrc": "2432:40:5",
																							"nodeType": "YulAssignment",
																							"src": "2432:40:5",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "2449:9:5",
																										"nodeType": "YulIdentifier",
																										"src": "2449:9:5"
																									},
																									{
																										"name": "srcOffset_1",
																										"nativeSrc": "2460:11:5",
																										"nodeType": "YulIdentifier",
																										"src": "2460:11:5"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "2445:3:5",
																									"nodeType": "YulIdentifier",
																									"src": "2445:3:5"
																								},
																								"nativeSrc": "2445:27:5",
																								"nodeType": "YulFunctionCall",
																								"src": "2445:27:5"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "2432:9:5",
																									"nodeType": "YulIdentifier",
																									"src": "2432:9:5"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "2261:1:5",
																							"nodeType": "YulIdentifier",
																							"src": "2261:1:5"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "2264:7:5",
																							"nodeType": "YulIdentifier",
																							"src": "2264:7:5"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "2258:2:5",
																						"nodeType": "YulIdentifier",
																						"src": "2258:2:5"
																					},
																					"nativeSrc": "2258:14:5",
																					"nodeType": "YulFunctionCall",
																					"src": "2258:14:5"
																				},
																				"nativeSrc": "2250:236:5",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "2273:28:5",
																					"nodeType": "YulBlock",
																					"src": "2273:28:5",
																					"statements": [
																						{
																							"nativeSrc": "2275:24:5",
																							"nodeType": "YulAssignment",
																							"src": "2275:24:5",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "2284:1:5",
																										"nodeType": "YulIdentifier",
																										"src": "2284:1:5"
																									},
																									{
																										"name": "srcOffset_1",
																										"nativeSrc": "2287:11:5",
																										"nodeType": "YulIdentifier",
																										"src": "2287:11:5"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "2280:3:5",
																									"nodeType": "YulIdentifier",
																									"src": "2280:3:5"
																								},
																								"nativeSrc": "2280:19:5",
																								"nodeType": "YulFunctionCall",
																								"src": "2280:19:5"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "2275:1:5",
																									"nodeType": "YulIdentifier",
																									"src": "2275:1:5"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "2254:3:5",
																					"nodeType": "YulBlock",
																					"src": "2254:3:5",
																					"statements": []
																				},
																				"src": "2250:236:5"
																			},
																			{
																				"body": {
																					"nativeSrc": "2534:166:5",
																					"nodeType": "YulBlock",
																					"src": "2534:166:5",
																					"statements": [
																						{
																							"nativeSrc": "2552:43:5",
																							"nodeType": "YulVariableDeclaration",
																							"src": "2552:43:5",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "2579:3:5",
																												"nodeType": "YulIdentifier",
																												"src": "2579:3:5"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "2584:9:5",
																												"nodeType": "YulIdentifier",
																												"src": "2584:9:5"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "2575:3:5",
																											"nodeType": "YulIdentifier",
																											"src": "2575:3:5"
																										},
																										"nativeSrc": "2575:19:5",
																										"nodeType": "YulFunctionCall",
																										"src": "2575:19:5"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "2569:5:5",
																									"nodeType": "YulIdentifier",
																									"src": "2569:5:5"
																								},
																								"nativeSrc": "2569:26:5",
																								"nodeType": "YulFunctionCall",
																								"src": "2569:26:5"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "2556:9:5",
																									"nodeType": "YulTypedName",
																									"src": "2556:9:5",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "2619:6:5",
																										"nodeType": "YulIdentifier",
																										"src": "2619:6:5"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "2631:9:5",
																												"nodeType": "YulIdentifier",
																												"src": "2631:9:5"
																											},
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"kind": "number",
																																				"nativeSrc": "2658:1:5",
																																				"nodeType": "YulLiteral",
																																				"src": "2658:1:5",
																																				"type": "",
																																				"value": "3"
																																			},
																																			{
																																				"name": "newLen",
																																				"nativeSrc": "2661:6:5",
																																				"nodeType": "YulIdentifier",
																																				"src": "2661:6:5"
																																			}
																																		],
																																		"functionName": {
																																			"name": "shl",
																																			"nativeSrc": "2654:3:5",
																																			"nodeType": "YulIdentifier",
																																			"src": "2654:3:5"
																																		},
																																		"nativeSrc": "2654:14:5",
																																		"nodeType": "YulFunctionCall",
																																		"src": "2654:14:5"
																																	},
																																	{
																																		"kind": "number",
																																		"nativeSrc": "2670:3:5",
																																		"nodeType": "YulLiteral",
																																		"src": "2670:3:5",
																																		"type": "",
																																		"value": "248"
																																	}
																																],
																																"functionName": {
																																	"name": "and",
																																	"nativeSrc": "2650:3:5",
																																	"nodeType": "YulIdentifier",
																																	"src": "2650:3:5"
																																},
																																"nativeSrc": "2650:24:5",
																																"nodeType": "YulFunctionCall",
																																"src": "2650:24:5"
																															},
																															{
																																"arguments": [
																																	{
																																		"kind": "number",
																																		"nativeSrc": "2680:1:5",
																																		"nodeType": "YulLiteral",
																																		"src": "2680:1:5",
																																		"type": "",
																																		"value": "0"
																																	}
																																],
																																"functionName": {
																																	"name": "not",
																																	"nativeSrc": "2676:3:5",
																																	"nodeType": "YulIdentifier",
																																	"src": "2676:3:5"
																																},
																																"nativeSrc": "2676:6:5",
																																"nodeType": "YulFunctionCall",
																																"src": "2676:6:5"
																															}
																														],
																														"functionName": {
																															"name": "shr",
																															"nativeSrc": "2646:3:5",
																															"nodeType": "YulIdentifier",
																															"src": "2646:3:5"
																														},
																														"nativeSrc": "2646:37:5",
																														"nodeType": "YulFunctionCall",
																														"src": "2646:37:5"
																													}
																												],
																												"functionName": {
																													"name": "not",
																													"nativeSrc": "2642:3:5",
																													"nodeType": "YulIdentifier",
																													"src": "2642:3:5"
																												},
																												"nativeSrc": "2642:42:5",
																												"nodeType": "YulFunctionCall",
																												"src": "2642:42:5"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nativeSrc": "2627:3:5",
																											"nodeType": "YulIdentifier",
																											"src": "2627:3:5"
																										},
																										"nativeSrc": "2627:58:5",
																										"nodeType": "YulFunctionCall",
																										"src": "2627:58:5"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "2612:6:5",
																									"nodeType": "YulIdentifier",
																									"src": "2612:6:5"
																								},
																								"nativeSrc": "2612:74:5",
																								"nodeType": "YulFunctionCall",
																								"src": "2612:74:5"
																							},
																							"nativeSrc": "2612:74:5",
																							"nodeType": "YulExpressionStatement",
																							"src": "2612:74:5"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "2505:7:5",
																							"nodeType": "YulIdentifier",
																							"src": "2505:7:5"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "2514:6:5",
																							"nodeType": "YulIdentifier",
																							"src": "2514:6:5"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "2502:2:5",
																						"nodeType": "YulIdentifier",
																						"src": "2502:2:5"
																					},
																					"nativeSrc": "2502:19:5",
																					"nodeType": "YulFunctionCall",
																					"src": "2502:19:5"
																				},
																				"nativeSrc": "2499:201:5",
																				"nodeType": "YulIf",
																				"src": "2499:201:5"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "2720:4:5",
																							"nodeType": "YulIdentifier",
																							"src": "2720:4:5"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nativeSrc": "2734:1:5",
																											"nodeType": "YulLiteral",
																											"src": "2734:1:5",
																											"type": "",
																											"value": "1"
																										},
																										{
																											"name": "newLen",
																											"nativeSrc": "2737:6:5",
																											"nodeType": "YulIdentifier",
																											"src": "2737:6:5"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nativeSrc": "2730:3:5",
																										"nodeType": "YulIdentifier",
																										"src": "2730:3:5"
																									},
																									"nativeSrc": "2730:14:5",
																									"nodeType": "YulFunctionCall",
																									"src": "2730:14:5"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "2746:1:5",
																									"nodeType": "YulLiteral",
																									"src": "2746:1:5",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "2726:3:5",
																								"nodeType": "YulIdentifier",
																								"src": "2726:3:5"
																							},
																							"nativeSrc": "2726:22:5",
																							"nodeType": "YulFunctionCall",
																							"src": "2726:22:5"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "2713:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "2713:6:5"
																					},
																					"nativeSrc": "2713:36:5",
																					"nodeType": "YulFunctionCall",
																					"src": "2713:36:5"
																				},
																				"nativeSrc": "2713:36:5",
																				"nodeType": "YulExpressionStatement",
																				"src": "2713:36:5"
																			}
																		]
																	},
																	"nativeSrc": "2096:663:5",
																	"nodeType": "YulCase",
																	"src": "2096:663:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2101:1:5",
																		"nodeType": "YulLiteral",
																		"src": "2101:1:5",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "2776:234:5",
																		"nodeType": "YulBlock",
																		"src": "2776:234:5",
																		"statements": [
																			{
																				"nativeSrc": "2790:14:5",
																				"nodeType": "YulVariableDeclaration",
																				"src": "2790:14:5",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "2803:1:5",
																					"nodeType": "YulLiteral",
																					"src": "2803:1:5",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "2794:5:5",
																						"nodeType": "YulTypedName",
																						"src": "2794:5:5",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "2839:67:5",
																					"nodeType": "YulBlock",
																					"src": "2839:67:5",
																					"statements": [
																						{
																							"nativeSrc": "2857:35:5",
																							"nodeType": "YulAssignment",
																							"src": "2857:35:5",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "2876:3:5",
																												"nodeType": "YulIdentifier",
																												"src": "2876:3:5"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "2881:9:5",
																												"nodeType": "YulIdentifier",
																												"src": "2881:9:5"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "2872:3:5",
																											"nodeType": "YulIdentifier",
																											"src": "2872:3:5"
																										},
																										"nativeSrc": "2872:19:5",
																										"nodeType": "YulFunctionCall",
																										"src": "2872:19:5"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "2866:5:5",
																									"nodeType": "YulIdentifier",
																									"src": "2866:5:5"
																								},
																								"nativeSrc": "2866:26:5",
																								"nodeType": "YulFunctionCall",
																								"src": "2866:26:5"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "2857:5:5",
																									"nodeType": "YulIdentifier",
																									"src": "2857:5:5"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "2820:6:5",
																					"nodeType": "YulIdentifier",
																					"src": "2820:6:5"
																				},
																				"nativeSrc": "2817:89:5",
																				"nodeType": "YulIf",
																				"src": "2817:89:5"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "2926:4:5",
																							"nodeType": "YulIdentifier",
																							"src": "2926:4:5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "2985:5:5",
																									"nodeType": "YulIdentifier",
																									"src": "2985:5:5"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "2992:6:5",
																									"nodeType": "YulIdentifier",
																									"src": "2992:6:5"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "2932:52:5",
																								"nodeType": "YulIdentifier",
																								"src": "2932:52:5"
																							},
																							"nativeSrc": "2932:67:5",
																							"nodeType": "YulFunctionCall",
																							"src": "2932:67:5"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "2919:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "2919:6:5"
																					},
																					"nativeSrc": "2919:81:5",
																					"nodeType": "YulFunctionCall",
																					"src": "2919:81:5"
																				},
																				"nativeSrc": "2919:81:5",
																				"nodeType": "YulExpressionStatement",
																				"src": "2919:81:5"
																			}
																		]
																	},
																	"nativeSrc": "2768:242:5",
																	"nodeType": "YulCase",
																	"src": "2768:242:5",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "2076:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "2076:6:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2084:2:5",
																		"nodeType": "YulLiteral",
																		"src": "2084:2:5",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2073:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "2073:2:5"
																},
																"nativeSrc": "2073:14:5",
																"nodeType": "YulFunctionCall",
																"src": "2073:14:5"
															},
															"nativeSrc": "2066:944:5",
															"nodeType": "YulSwitch",
															"src": "2066:944:5"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "1671:1345:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "1752:4:5",
														"nodeType": "YulTypedName",
														"src": "1752:4:5",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "1758:3:5",
														"nodeType": "YulTypedName",
														"src": "1758:3:5",
														"type": ""
													}
												],
												"src": "1671:1345:5"
											},
											{
												"body": {
													"nativeSrc": "3053:95:5",
													"nodeType": "YulBlock",
													"src": "3053:95:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3070:1:5",
																		"nodeType": "YulLiteral",
																		"src": "3070:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "3077:3:5",
																				"nodeType": "YulLiteral",
																				"src": "3077:3:5",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3082:10:5",
																				"nodeType": "YulLiteral",
																				"src": "3082:10:5",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "3073:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "3073:3:5"
																		},
																		"nativeSrc": "3073:20:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3073:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3063:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3063:6:5"
																},
																"nativeSrc": "3063:31:5",
																"nodeType": "YulFunctionCall",
																"src": "3063:31:5"
															},
															"nativeSrc": "3063:31:5",
															"nodeType": "YulExpressionStatement",
															"src": "3063:31:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3110:1:5",
																		"nodeType": "YulLiteral",
																		"src": "3110:1:5",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3113:4:5",
																		"nodeType": "YulLiteral",
																		"src": "3113:4:5",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3103:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3103:6:5"
																},
																"nativeSrc": "3103:15:5",
																"nodeType": "YulFunctionCall",
																"src": "3103:15:5"
															},
															"nativeSrc": "3103:15:5",
															"nodeType": "YulExpressionStatement",
															"src": "3103:15:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3134:1:5",
																		"nodeType": "YulLiteral",
																		"src": "3134:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3137:4:5",
																		"nodeType": "YulLiteral",
																		"src": "3137:4:5",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "3127:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3127:6:5"
																},
																"nativeSrc": "3127:15:5",
																"nodeType": "YulFunctionCall",
																"src": "3127:15:5"
															},
															"nativeSrc": "3127:15:5",
															"nodeType": "YulExpressionStatement",
															"src": "3127:15:5"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "3021:127:5",
												"nodeType": "YulFunctionDefinition",
												"src": "3021:127:5"
											},
											{
												"body": {
													"nativeSrc": "3217:352:5",
													"nodeType": "YulBlock",
													"src": "3217:352:5",
													"statements": [
														{
															"nativeSrc": "3227:16:5",
															"nodeType": "YulVariableDeclaration",
															"src": "3227:16:5",
															"value": {
																"kind": "number",
																"nativeSrc": "3242:1:5",
																"nodeType": "YulLiteral",
																"src": "3242:1:5",
																"type": "",
																"value": "1"
															},
															"variables": [
																{
																	"name": "power_1",
																	"nativeSrc": "3231:7:5",
																	"nodeType": "YulTypedName",
																	"src": "3231:7:5",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3252:10:5",
															"nodeType": "YulAssignment",
															"src": "3252:10:5",
															"value": {
																"kind": "number",
																"nativeSrc": "3261:1:5",
																"nodeType": "YulLiteral",
																"src": "3261:1:5",
																"type": "",
																"value": "1"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "3252:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "3252:5:5"
																}
															]
														},
														{
															"nativeSrc": "3271:13:5",
															"nodeType": "YulAssignment",
															"src": "3271:13:5",
															"value": {
																"name": "_base",
																"nativeSrc": "3279:5:5",
																"nodeType": "YulIdentifier",
																"src": "3279:5:5"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nativeSrc": "3271:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "3271:4:5"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3335:228:5",
																"nodeType": "YulBlock",
																"src": "3335:228:5",
																"statements": [
																	{
																		"body": {
																			"nativeSrc": "3380:22:5",
																			"nodeType": "YulBlock",
																			"src": "3380:22:5",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nativeSrc": "3382:16:5",
																							"nodeType": "YulIdentifier",
																							"src": "3382:16:5"
																						},
																						"nativeSrc": "3382:18:5",
																						"nodeType": "YulFunctionCall",
																						"src": "3382:18:5"
																					},
																					"nativeSrc": "3382:18:5",
																					"nodeType": "YulExpressionStatement",
																					"src": "3382:18:5"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "3355:4:5",
																					"nodeType": "YulIdentifier",
																					"src": "3355:4:5"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "3369:1:5",
																									"nodeType": "YulLiteral",
																									"src": "3369:1:5",
																									"type": "",
																									"value": "0"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "3365:3:5",
																								"nodeType": "YulIdentifier",
																								"src": "3365:3:5"
																							},
																							"nativeSrc": "3365:6:5",
																							"nodeType": "YulFunctionCall",
																							"src": "3365:6:5"
																						},
																						{
																							"name": "base",
																							"nativeSrc": "3373:4:5",
																							"nodeType": "YulIdentifier",
																							"src": "3373:4:5"
																						}
																					],
																					"functionName": {
																						"name": "div",
																						"nativeSrc": "3361:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "3361:3:5"
																					},
																					"nativeSrc": "3361:17:5",
																					"nodeType": "YulFunctionCall",
																					"src": "3361:17:5"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nativeSrc": "3352:2:5",
																				"nodeType": "YulIdentifier",
																				"src": "3352:2:5"
																			},
																			"nativeSrc": "3352:27:5",
																			"nodeType": "YulFunctionCall",
																			"src": "3352:27:5"
																		},
																		"nativeSrc": "3349:53:5",
																		"nodeType": "YulIf",
																		"src": "3349:53:5"
																	},
																	{
																		"body": {
																			"nativeSrc": "3441:29:5",
																			"nodeType": "YulBlock",
																			"src": "3441:29:5",
																			"statements": [
																				{
																					"nativeSrc": "3443:25:5",
																					"nodeType": "YulAssignment",
																					"src": "3443:25:5",
																					"value": {
																						"arguments": [
																							{
																								"name": "power",
																								"nativeSrc": "3456:5:5",
																								"nodeType": "YulIdentifier",
																								"src": "3456:5:5"
																							},
																							{
																								"name": "base",
																								"nativeSrc": "3463:4:5",
																								"nodeType": "YulIdentifier",
																								"src": "3463:4:5"
																							}
																						],
																						"functionName": {
																							"name": "mul",
																							"nativeSrc": "3452:3:5",
																							"nodeType": "YulIdentifier",
																							"src": "3452:3:5"
																						},
																						"nativeSrc": "3452:16:5",
																						"nodeType": "YulFunctionCall",
																						"src": "3452:16:5"
																					},
																					"variableNames": [
																						{
																							"name": "power",
																							"nativeSrc": "3443:5:5",
																							"nodeType": "YulIdentifier",
																							"src": "3443:5:5"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nativeSrc": "3422:8:5",
																					"nodeType": "YulIdentifier",
																					"src": "3422:8:5"
																				},
																				{
																					"name": "power_1",
																					"nativeSrc": "3432:7:5",
																					"nodeType": "YulIdentifier",
																					"src": "3432:7:5"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "3418:3:5",
																				"nodeType": "YulIdentifier",
																				"src": "3418:3:5"
																			},
																			"nativeSrc": "3418:22:5",
																			"nodeType": "YulFunctionCall",
																			"src": "3418:22:5"
																		},
																		"nativeSrc": "3415:55:5",
																		"nodeType": "YulIf",
																		"src": "3415:55:5"
																	},
																	{
																		"nativeSrc": "3483:23:5",
																		"nodeType": "YulAssignment",
																		"src": "3483:23:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "3495:4:5",
																					"nodeType": "YulIdentifier",
																					"src": "3495:4:5"
																				},
																				{
																					"name": "base",
																					"nativeSrc": "3501:4:5",
																					"nodeType": "YulIdentifier",
																					"src": "3501:4:5"
																				}
																			],
																			"functionName": {
																				"name": "mul",
																				"nativeSrc": "3491:3:5",
																				"nodeType": "YulIdentifier",
																				"src": "3491:3:5"
																			},
																			"nativeSrc": "3491:15:5",
																			"nodeType": "YulFunctionCall",
																			"src": "3491:15:5"
																		},
																		"variableNames": [
																			{
																				"name": "base",
																				"nativeSrc": "3483:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "3483:4:5"
																			}
																		]
																	},
																	{
																		"nativeSrc": "3519:34:5",
																		"nodeType": "YulAssignment",
																		"src": "3519:34:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "power_1",
																					"nativeSrc": "3535:7:5",
																					"nodeType": "YulIdentifier",
																					"src": "3535:7:5"
																				},
																				{
																					"name": "exponent",
																					"nativeSrc": "3544:8:5",
																					"nodeType": "YulIdentifier",
																					"src": "3544:8:5"
																				}
																			],
																			"functionName": {
																				"name": "shr",
																				"nativeSrc": "3531:3:5",
																				"nodeType": "YulIdentifier",
																				"src": "3531:3:5"
																			},
																			"nativeSrc": "3531:22:5",
																			"nodeType": "YulFunctionCall",
																			"src": "3531:22:5"
																		},
																		"variableNames": [
																			{
																				"name": "exponent",
																				"nativeSrc": "3519:8:5",
																				"nodeType": "YulIdentifier",
																				"src": "3519:8:5"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "3304:8:5",
																		"nodeType": "YulIdentifier",
																		"src": "3304:8:5"
																	},
																	{
																		"name": "power_1",
																		"nativeSrc": "3314:7:5",
																		"nodeType": "YulIdentifier",
																		"src": "3314:7:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3301:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "3301:2:5"
																},
																"nativeSrc": "3301:21:5",
																"nodeType": "YulFunctionCall",
																"src": "3301:21:5"
															},
															"nativeSrc": "3293:270:5",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "3323:3:5",
																"nodeType": "YulBlock",
																"src": "3323:3:5",
																"statements": []
															},
															"pre": {
																"nativeSrc": "3297:3:5",
																"nodeType": "YulBlock",
																"src": "3297:3:5",
																"statements": []
															},
															"src": "3293:270:5"
														}
													]
												},
												"name": "checked_exp_helper",
												"nativeSrc": "3153:416:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "_base",
														"nativeSrc": "3181:5:5",
														"nodeType": "YulTypedName",
														"src": "3181:5:5",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "3188:8:5",
														"nodeType": "YulTypedName",
														"src": "3188:8:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "3201:5:5",
														"nodeType": "YulTypedName",
														"src": "3201:5:5",
														"type": ""
													},
													{
														"name": "base",
														"nativeSrc": "3208:4:5",
														"nodeType": "YulTypedName",
														"src": "3208:4:5",
														"type": ""
													}
												],
												"src": "3153:416:5"
											},
											{
												"body": {
													"nativeSrc": "3633:747:5",
													"nodeType": "YulBlock",
													"src": "3633:747:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "3671:52:5",
																"nodeType": "YulBlock",
																"src": "3671:52:5",
																"statements": [
																	{
																		"nativeSrc": "3685:10:5",
																		"nodeType": "YulAssignment",
																		"src": "3685:10:5",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "3694:1:5",
																			"nodeType": "YulLiteral",
																			"src": "3694:1:5",
																			"type": "",
																			"value": "1"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "3685:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "3685:5:5"
																			}
																		]
																	},
																	{
																		"nativeSrc": "3708:5:5",
																		"nodeType": "YulLeave",
																		"src": "3708:5:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "3653:8:5",
																		"nodeType": "YulIdentifier",
																		"src": "3653:8:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3646:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3646:6:5"
																},
																"nativeSrc": "3646:16:5",
																"nodeType": "YulFunctionCall",
																"src": "3646:16:5"
															},
															"nativeSrc": "3643:80:5",
															"nodeType": "YulIf",
															"src": "3643:80:5"
														},
														{
															"body": {
																"nativeSrc": "3756:52:5",
																"nodeType": "YulBlock",
																"src": "3756:52:5",
																"statements": [
																	{
																		"nativeSrc": "3770:10:5",
																		"nodeType": "YulAssignment",
																		"src": "3770:10:5",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "3779:1:5",
																			"nodeType": "YulLiteral",
																			"src": "3779:1:5",
																			"type": "",
																			"value": "0"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "3770:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "3770:5:5"
																			}
																		]
																	},
																	{
																		"nativeSrc": "3793:5:5",
																		"nodeType": "YulLeave",
																		"src": "3793:5:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "3742:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "3742:4:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3735:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3735:6:5"
																},
																"nativeSrc": "3735:12:5",
																"nodeType": "YulFunctionCall",
																"src": "3735:12:5"
															},
															"nativeSrc": "3732:76:5",
															"nodeType": "YulIf",
															"src": "3732:76:5"
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "3844:52:5",
																		"nodeType": "YulBlock",
																		"src": "3844:52:5",
																		"statements": [
																			{
																				"nativeSrc": "3858:10:5",
																				"nodeType": "YulAssignment",
																				"src": "3858:10:5",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "3867:1:5",
																					"nodeType": "YulLiteral",
																					"src": "3867:1:5",
																					"type": "",
																					"value": "1"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "3858:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "3858:5:5"
																					}
																				]
																			},
																			{
																				"nativeSrc": "3881:5:5",
																				"nodeType": "YulLeave",
																				"src": "3881:5:5"
																			}
																		]
																	},
																	"nativeSrc": "3837:59:5",
																	"nodeType": "YulCase",
																	"src": "3837:59:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3842:1:5",
																		"nodeType": "YulLiteral",
																		"src": "3842:1:5",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "3912:123:5",
																		"nodeType": "YulBlock",
																		"src": "3912:123:5",
																		"statements": [
																			{
																				"body": {
																					"nativeSrc": "3947:22:5",
																					"nodeType": "YulBlock",
																					"src": "3947:22:5",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nativeSrc": "3949:16:5",
																									"nodeType": "YulIdentifier",
																									"src": "3949:16:5"
																								},
																								"nativeSrc": "3949:18:5",
																								"nodeType": "YulFunctionCall",
																								"src": "3949:18:5"
																							},
																							"nativeSrc": "3949:18:5",
																							"nodeType": "YulExpressionStatement",
																							"src": "3949:18:5"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nativeSrc": "3932:8:5",
																							"nodeType": "YulIdentifier",
																							"src": "3932:8:5"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "3942:3:5",
																							"nodeType": "YulLiteral",
																							"src": "3942:3:5",
																							"type": "",
																							"value": "255"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nativeSrc": "3929:2:5",
																						"nodeType": "YulIdentifier",
																						"src": "3929:2:5"
																					},
																					"nativeSrc": "3929:17:5",
																					"nodeType": "YulFunctionCall",
																					"src": "3929:17:5"
																				},
																				"nativeSrc": "3926:43:5",
																				"nodeType": "YulIf",
																				"src": "3926:43:5"
																			},
																			{
																				"nativeSrc": "3982:25:5",
																				"nodeType": "YulAssignment",
																				"src": "3982:25:5",
																				"value": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nativeSrc": "3995:8:5",
																							"nodeType": "YulIdentifier",
																							"src": "3995:8:5"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "4005:1:5",
																							"nodeType": "YulLiteral",
																							"src": "4005:1:5",
																							"type": "",
																							"value": "1"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "3991:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "3991:3:5"
																					},
																					"nativeSrc": "3991:16:5",
																					"nodeType": "YulFunctionCall",
																					"src": "3991:16:5"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "3982:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "3982:5:5"
																					}
																				]
																			},
																			{
																				"nativeSrc": "4020:5:5",
																				"nodeType": "YulLeave",
																				"src": "4020:5:5"
																			}
																		]
																	},
																	"nativeSrc": "3905:130:5",
																	"nodeType": "YulCase",
																	"src": "3905:130:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3910:1:5",
																		"nodeType": "YulLiteral",
																		"src": "3910:1:5",
																		"type": "",
																		"value": "2"
																	}
																}
															],
															"expression": {
																"name": "base",
																"nativeSrc": "3824:4:5",
																"nodeType": "YulIdentifier",
																"src": "3824:4:5"
															},
															"nativeSrc": "3817:218:5",
															"nodeType": "YulSwitch",
															"src": "3817:218:5"
														},
														{
															"body": {
																"nativeSrc": "4133:70:5",
																"nodeType": "YulBlock",
																"src": "4133:70:5",
																"statements": [
																	{
																		"nativeSrc": "4147:28:5",
																		"nodeType": "YulAssignment",
																		"src": "4147:28:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "4160:4:5",
																					"nodeType": "YulIdentifier",
																					"src": "4160:4:5"
																				},
																				{
																					"name": "exponent",
																					"nativeSrc": "4166:8:5",
																					"nodeType": "YulIdentifier",
																					"src": "4166:8:5"
																				}
																			],
																			"functionName": {
																				"name": "exp",
																				"nativeSrc": "4156:3:5",
																				"nodeType": "YulIdentifier",
																				"src": "4156:3:5"
																			},
																			"nativeSrc": "4156:19:5",
																			"nodeType": "YulFunctionCall",
																			"src": "4156:19:5"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "4147:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "4147:5:5"
																			}
																		]
																	},
																	{
																		"nativeSrc": "4188:5:5",
																		"nodeType": "YulLeave",
																		"src": "4188:5:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "4057:4:5",
																						"nodeType": "YulIdentifier",
																						"src": "4057:4:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4063:2:5",
																						"nodeType": "YulLiteral",
																						"src": "4063:2:5",
																						"type": "",
																						"value": "11"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "4054:2:5",
																					"nodeType": "YulIdentifier",
																					"src": "4054:2:5"
																				},
																				"nativeSrc": "4054:12:5",
																				"nodeType": "YulFunctionCall",
																				"src": "4054:12:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "4071:8:5",
																						"nodeType": "YulIdentifier",
																						"src": "4071:8:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4081:2:5",
																						"nodeType": "YulLiteral",
																						"src": "4081:2:5",
																						"type": "",
																						"value": "78"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "4068:2:5",
																					"nodeType": "YulIdentifier",
																					"src": "4068:2:5"
																				},
																				"nativeSrc": "4068:16:5",
																				"nodeType": "YulFunctionCall",
																				"src": "4068:16:5"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "4050:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "4050:3:5"
																		},
																		"nativeSrc": "4050:35:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4050:35:5"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "4094:4:5",
																						"nodeType": "YulIdentifier",
																						"src": "4094:4:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4100:3:5",
																						"nodeType": "YulLiteral",
																						"src": "4100:3:5",
																						"type": "",
																						"value": "307"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "4091:2:5",
																					"nodeType": "YulIdentifier",
																					"src": "4091:2:5"
																				},
																				"nativeSrc": "4091:13:5",
																				"nodeType": "YulFunctionCall",
																				"src": "4091:13:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "4109:8:5",
																						"nodeType": "YulIdentifier",
																						"src": "4109:8:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4119:2:5",
																						"nodeType": "YulLiteral",
																						"src": "4119:2:5",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "4106:2:5",
																					"nodeType": "YulIdentifier",
																					"src": "4106:2:5"
																				},
																				"nativeSrc": "4106:16:5",
																				"nodeType": "YulFunctionCall",
																				"src": "4106:16:5"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "4087:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "4087:3:5"
																		},
																		"nativeSrc": "4087:36:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4087:36:5"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "4047:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "4047:2:5"
																},
																"nativeSrc": "4047:77:5",
																"nodeType": "YulFunctionCall",
																"src": "4047:77:5"
															},
															"nativeSrc": "4044:159:5",
															"nodeType": "YulIf",
															"src": "4044:159:5"
														},
														{
															"nativeSrc": "4212:57:5",
															"nodeType": "YulVariableDeclaration",
															"src": "4212:57:5",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "4254:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "4254:4:5"
																	},
																	{
																		"name": "exponent",
																		"nativeSrc": "4260:8:5",
																		"nodeType": "YulIdentifier",
																		"src": "4260:8:5"
																	}
																],
																"functionName": {
																	"name": "checked_exp_helper",
																	"nativeSrc": "4235:18:5",
																	"nodeType": "YulIdentifier",
																	"src": "4235:18:5"
																},
																"nativeSrc": "4235:34:5",
																"nodeType": "YulFunctionCall",
																"src": "4235:34:5"
															},
															"variables": [
																{
																	"name": "power_1",
																	"nativeSrc": "4216:7:5",
																	"nodeType": "YulTypedName",
																	"src": "4216:7:5",
																	"type": ""
																},
																{
																	"name": "base_1",
																	"nativeSrc": "4225:6:5",
																	"nodeType": "YulTypedName",
																	"src": "4225:6:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4314:22:5",
																"nodeType": "YulBlock",
																"src": "4314:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "4316:16:5",
																				"nodeType": "YulIdentifier",
																				"src": "4316:16:5"
																			},
																			"nativeSrc": "4316:18:5",
																			"nodeType": "YulFunctionCall",
																			"src": "4316:18:5"
																		},
																		"nativeSrc": "4316:18:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "4316:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "power_1",
																		"nativeSrc": "4284:7:5",
																		"nodeType": "YulIdentifier",
																		"src": "4284:7:5"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4301:1:5",
																						"nodeType": "YulLiteral",
																						"src": "4301:1:5",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "4297:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "4297:3:5"
																				},
																				"nativeSrc": "4297:6:5",
																				"nodeType": "YulFunctionCall",
																				"src": "4297:6:5"
																			},
																			{
																				"name": "base_1",
																				"nativeSrc": "4305:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "4305:6:5"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "4293:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "4293:3:5"
																		},
																		"nativeSrc": "4293:19:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4293:19:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4281:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "4281:2:5"
																},
																"nativeSrc": "4281:32:5",
																"nodeType": "YulFunctionCall",
																"src": "4281:32:5"
															},
															"nativeSrc": "4278:58:5",
															"nodeType": "YulIf",
															"src": "4278:58:5"
														},
														{
															"nativeSrc": "4345:29:5",
															"nodeType": "YulAssignment",
															"src": "4345:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "power_1",
																		"nativeSrc": "4358:7:5",
																		"nodeType": "YulIdentifier",
																		"src": "4358:7:5"
																	},
																	{
																		"name": "base_1",
																		"nativeSrc": "4367:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "4367:6:5"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "4354:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "4354:3:5"
																},
																"nativeSrc": "4354:20:5",
																"nodeType": "YulFunctionCall",
																"src": "4354:20:5"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "4345:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "4345:5:5"
																}
															]
														}
													]
												},
												"name": "checked_exp_unsigned",
												"nativeSrc": "3574:806:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "3604:4:5",
														"nodeType": "YulTypedName",
														"src": "3604:4:5",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "3610:8:5",
														"nodeType": "YulTypedName",
														"src": "3610:8:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "3623:5:5",
														"nodeType": "YulTypedName",
														"src": "3623:5:5",
														"type": ""
													}
												],
												"src": "3574:806:5"
											},
											{
												"body": {
													"nativeSrc": "4453:72:5",
													"nodeType": "YulBlock",
													"src": "4453:72:5",
													"statements": [
														{
															"nativeSrc": "4463:56:5",
															"nodeType": "YulAssignment",
															"src": "4463:56:5",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "4493:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "4493:4:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "exponent",
																				"nativeSrc": "4503:8:5",
																				"nodeType": "YulIdentifier",
																				"src": "4503:8:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4513:4:5",
																				"nodeType": "YulLiteral",
																				"src": "4513:4:5",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "4499:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "4499:3:5"
																		},
																		"nativeSrc": "4499:19:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4499:19:5"
																	}
																],
																"functionName": {
																	"name": "checked_exp_unsigned",
																	"nativeSrc": "4472:20:5",
																	"nodeType": "YulIdentifier",
																	"src": "4472:20:5"
																},
																"nativeSrc": "4472:47:5",
																"nodeType": "YulFunctionCall",
																"src": "4472:47:5"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "4463:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "4463:5:5"
																}
															]
														}
													]
												},
												"name": "checked_exp_t_uint256_t_uint8",
												"nativeSrc": "4385:140:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "4424:4:5",
														"nodeType": "YulTypedName",
														"src": "4424:4:5",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "4430:8:5",
														"nodeType": "YulTypedName",
														"src": "4430:8:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "4443:5:5",
														"nodeType": "YulTypedName",
														"src": "4443:5:5",
														"type": ""
													}
												],
												"src": "4385:140:5"
											},
											{
												"body": {
													"nativeSrc": "4582:116:5",
													"nodeType": "YulBlock",
													"src": "4582:116:5",
													"statements": [
														{
															"nativeSrc": "4592:20:5",
															"nodeType": "YulAssignment",
															"src": "4592:20:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4607:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "4607:1:5"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "4610:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "4610:1:5"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "4603:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "4603:3:5"
																},
																"nativeSrc": "4603:9:5",
																"nodeType": "YulFunctionCall",
																"src": "4603:9:5"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "4592:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "4592:7:5"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4670:22:5",
																"nodeType": "YulBlock",
																"src": "4670:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "4672:16:5",
																				"nodeType": "YulIdentifier",
																				"src": "4672:16:5"
																			},
																			"nativeSrc": "4672:18:5",
																			"nodeType": "YulFunctionCall",
																			"src": "4672:18:5"
																		},
																		"nativeSrc": "4672:18:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "4672:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "4641:1:5",
																						"nodeType": "YulIdentifier",
																						"src": "4641:1:5"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "4634:6:5",
																					"nodeType": "YulIdentifier",
																					"src": "4634:6:5"
																				},
																				"nativeSrc": "4634:9:5",
																				"nodeType": "YulFunctionCall",
																				"src": "4634:9:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "4648:1:5",
																						"nodeType": "YulIdentifier",
																						"src": "4648:1:5"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "4655:7:5",
																								"nodeType": "YulIdentifier",
																								"src": "4655:7:5"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "4664:1:5",
																								"nodeType": "YulIdentifier",
																								"src": "4664:1:5"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "4651:3:5",
																							"nodeType": "YulIdentifier",
																							"src": "4651:3:5"
																						},
																						"nativeSrc": "4651:15:5",
																						"nodeType": "YulFunctionCall",
																						"src": "4651:15:5"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "4645:2:5",
																					"nodeType": "YulIdentifier",
																					"src": "4645:2:5"
																				},
																				"nativeSrc": "4645:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "4645:22:5"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "4631:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "4631:2:5"
																		},
																		"nativeSrc": "4631:37:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4631:37:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4624:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "4624:6:5"
																},
																"nativeSrc": "4624:45:5",
																"nodeType": "YulFunctionCall",
																"src": "4624:45:5"
															},
															"nativeSrc": "4621:71:5",
															"nodeType": "YulIf",
															"src": "4621:71:5"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "4530:168:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "4561:1:5",
														"nodeType": "YulTypedName",
														"src": "4561:1:5",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "4564:1:5",
														"nodeType": "YulTypedName",
														"src": "4564:1:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "4570:7:5",
														"nodeType": "YulTypedName",
														"src": "4570:7:5",
														"type": ""
													}
												],
												"src": "4530:168:5"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(0, array)\n            let data := keccak256(0, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := 0x20\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_exp_helper(_base, exponent) -> power, base\n    {\n        let power_1 := 1\n        power := 1\n        base := _base\n        for { } gt(exponent, power_1) { }\n        {\n            if gt(base, div(not(0), base)) { panic_error_0x11() }\n            if and(exponent, power_1) { power := mul(power, base) }\n            base := mul(base, base)\n            exponent := shr(power_1, exponent)\n        }\n    }\n    function checked_exp_unsigned(base, exponent) -> power\n    {\n        if iszero(exponent)\n        {\n            power := 1\n            leave\n        }\n        if iszero(base)\n        {\n            power := 0\n            leave\n        }\n        switch base\n        case 1 {\n            power := 1\n            leave\n        }\n        case 2 {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := shl(exponent, 1)\n            leave\n        }\n        if or(and(lt(base, 11), lt(exponent, 78)), and(lt(base, 307), lt(exponent, 32)))\n        {\n            power := exp(base, exponent)\n            leave\n        }\n        let power_1, base_1 := checked_exp_helper(base, exponent)\n        if gt(power_1, div(not(0), base_1)) { panic_error_0x11() }\n        power := mul(power_1, base_1)\n    }\n    function checked_exp_t_uint256_t_uint8(base, exponent) -> power\n    {\n        power := checked_exp_unsigned(base, and(exponent, 0xff))\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n}",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60c06040523480156200001157600080fd5b506040516200266a3803806200266a833981016040819052620000349162000175565b6040518060400160405280600b81526020016a20b0bb32a3b437b9ba32b960a91b8152506040518060400160405280600b81526020016a20a0ab22a3a427a9aa22a960a91b8152506012613a98848060006001600160a01b0316816001600160a01b031603620000b7576040516349e27cff60e01b815260040160405180910390fd5b600080546001600160a01b0319166001600160a01b03831690811782556040519091907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a35060016200010e86826200024e565b5060026200011d85826200024e565b5060ff831660808190526200013490600a6200042f565b62000140908362000440565b60a0525050506001600160a01b03909216600090815260046020526040902069032d26d12e980b6000009055506200045a9050565b6000602082840312156200018857600080fd5b81516001600160a01b0381168114620001a057600080fd5b9392505050565b634e487b7160e01b600052604160045260246000fd5b600181811c90821680620001d257607f821691505b602082108103620001f357634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111562000249576000816000526020600020601f850160051c81016020861015620002245750805b601f850160051c820191505b81811015620002455782815560010162000230565b5050505b505050565b81516001600160401b038111156200026a576200026a620001a7565b62000282816200027b8454620001bd565b84620001f9565b602080601f831160018114620002ba5760008415620002a15750858301515b600019600386901b1c1916600185901b17855562000245565b600085815260208120601f198616915b82811015620002eb57888601518255948401946001909101908401620002ca565b50858210156200030a5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b600052601160045260246000fd5b600181815b80851115620003715781600019048211156200035557620003556200031a565b808516156200036357918102915b93841c939080029062000335565b509250929050565b6000826200038a5750600162000429565b81620003995750600062000429565b8160018114620003b25760028114620003bd57620003dd565b600191505062000429565b60ff841115620003d157620003d16200031a565b50506001821b62000429565b5060208310610133831016604e8410600b841016171562000402575081810a62000429565b6200040e838362000330565b80600019048211156200042557620004256200031a565b0290505b92915050565b6000620001a060ff84168362000379565b80820281158282048414176200042957620004296200031a565b60805160a0516121e362000487600039600061023501526000818161029a015261130f01526121e36000f3fe608060405234801561001057600080fd5b50600436106101a95760003560e01c806370a08231116100f9578063c87b56dd11610097578063e0df5b6f11610071578063e0df5b6f14610400578063e985e9c514610413578063f28ca1dd14610441578063f2fde38b1461044957600080fd5b8063c87b56dd146103ba578063d547cfb7146103cd578063dd62ed3e146103d557600080fd5b80639b19251a116100d35780639b19251a1461035e578063a22cb46514610381578063a9059cbb14610394578063b88d4fde146103a757600080fd5b806370a08231146103235780638da5cb5b1461034357806395d89b411461035657600080fd5b80632b968958116101665780634f02c420116101405780634f02c420146102e1578063504334c2146102ea57806353d6fd59146102fd5780636352211e1461031057600080fd5b80632b9689581461028d578063313ce5671461029557806342842e0e146102ce57600080fd5b806306fdde03146101ae578063081812fc146101cc578063095ea7b31461020d57806318160ddd1461023057806318d217c31461026557806323b872dd1461027a575b600080fd5b6101b661045c565b6040516101c391906118c3565b60405180910390f35b6101f56101da3660046118f6565b6006602052600090815260409020546001600160a01b031681565b6040516001600160a01b0390911681526020016101c3565b61022061021b366004611926565b6104ea565b60405190151581526020016101c3565b6102577f000000000000000000000000000000000000000000000000000000000000000081565b6040519081526020016101c3565b6102786102733660046119f3565b61063b565b005b610278610288366004611a30565b610675565b6102786109fe565b6102bc7f000000000000000000000000000000000000000000000000000000000000000081565b60405160ff90911681526020016101c3565b6102786102dc366004611a30565b610a64565b61025760035481565b6102786102f8366004611a6c565b610b39565b61027861030b366004611ad0565b610b6d565b6101f561031e3660046118f6565b610bc2565b610257610331366004611b0c565b60046020526000908152604090205481565b6000546101f5906001600160a01b031681565b6101b6610bfd565b61022061036c366004611b0c565b600b6020526000908152604090205460ff1681565b61027861038f366004611ad0565b610c0a565b6102206103a2366004611926565b610c76565b6102786103b5366004611b27565b610c8a565b6101b66103c83660046118f6565b610d4d565b6101b661121c565b6102576103e3366004611bc2565b600560209081526000928352604080842090915290825290205481565b61027861040e3660046119f3565b611229565b610220610421366004611bc2565b600760209081526000928352604080842090915290825290205460ff1681565b6101b661125f565b610278610457366004611b0c565b61126c565b6001805461046990611bf5565b80601f016020809104026020016040519081016040528092919081815260200182805461049590611bf5565b80156104e25780601f106104b7576101008083540402835291602001916104e2565b820191906000526020600020905b8154815290600101906020018083116104c557829003601f168201915b505050505081565b600060035482111580156104fe5750600082115b156105d5576000828152600860205260409020546001600160a01b031633811480159061054f57506001600160a01b038116600090815260076020908152604080832033845290915290205460ff16155b1561056c576040516282b42960e81b815260040160405180910390fd5b60008381526006602090815260409182902080546001600160a01b0319166001600160a01b038881169182179092559251868152908416917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a350610631565b3360008181526005602090815260408083206001600160a01b03881680855290835292819020869055518581529192917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a35b5060015b92915050565b6000546001600160a01b03163314610665576040516282b42960e81b815260040160405180910390fd5b600c6106718282611c7f565b5050565b600354811161098f576000818152600860205260409020546001600160a01b038481169116146106b857604051636edaef2f60e11b815260040160405180910390fd5b6001600160a01b0382166106df57604051634e46966960e11b815260040160405180910390fd5b336001600160a01b0384161480159061071c57506001600160a01b038316600090815260076020908152604080832033845290915290205460ff16155b801561073f57506000818152600660205260409020546001600160a01b03163314155b1561075c576040516282b42960e81b815260040160405180910390fd5b610764611308565b6001600160a01b0384166000908152600460205260408120805490919061078c908490611d55565b9091555061079a9050611308565b6001600160a01b03808416600081815260046020908152604080832080549096019095558582526008815284822080546001600160a01b03199081169094179055600681528482208054909316909255918616825260099052908120805461080490600190611d55565b8154811061081457610814611d68565b60009182526020808320909101546001600160a01b0387168352600982526040808420868552600a9093529092205481549293508392811061085857610858611d68565b60009182526020808320909101929092556001600160a01b038616815260099091526040902080548061088d5761088d611d7e565b600082815260208082208301600019908101839055909201909255838252600a8152604080832054848452818420556001600160a01b0386168084526009835290832080546001818101835582865293852001869055925290546108f19190611d55565b6000838152600a602052604080822092909255905183916001600160a01b0380871692908816917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4826001600160a01b0316846001600160a01b03167fe59fdd36d0d223c0c7d996db7ad796880f45e1936cb0bb7ac102e7082e031487610978611308565b60405190815260200160405180910390a350505050565b6001600160a01b038316600090815260056020908152604080832033845290915290205460001981146109eb576109c68282611d55565b6001600160a01b03851660009081526005602090815260408083203384529091529020555b6109f684848461133a565b50505b505050565b6000546001600160a01b03163314610a28576040516282b42960e81b815260040160405180910390fd5b600080546001600160a01b031916815560405133907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3565b610a6f838383610675565b6001600160a01b0382163b15801590610b1b5750604051630a85bd0160e11b8082523360048301526001600160a01b03858116602484015260448301849052608060648401526000608484015290919084169063150b7a029060a4016020604051808303816000875af1158015610aea573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b0e9190611d94565b6001600160e01b03191614155b156109f957604051633da6393160e01b815260040160405180910390fd5b6000546001600160a01b03163314610b63576040516282b42960e81b815260040160405180910390fd5b61067182826114e8565b6000546001600160a01b03163314610b97576040516282b42960e81b815260040160405180910390fd5b6001600160a01b03919091166000908152600b60205260409020805460ff1916911515919091179055565b6000818152600860205260409020546001600160a01b031680610bf85760405163c5723b5160e01b815260040160405180910390fd5b919050565b6002805461046990611bf5565b3360008181526007602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b6000610c8333848461133a565b9392505050565b610c95858585610675565b6001600160a01b0384163b15801590610d2f5750604051630a85bd0160e11b808252906001600160a01b0386169063150b7a0290610cdf9033908a90899089908990600401611dbe565b6020604051808303816000875af1158015610cfe573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d229190611d94565b6001600160e01b03191614155b156109f657604051633da6393160e01b815260040160405180910390fd5b60606000600d8054610d5e90611bf5565b90501115610d9857600d610d7183611501565b604051602001610d82929190611e12565b6040516020818303038152906040529050919050565b600082604051602001610dad91815260200190565b6040516020818303038152906040528051906020012060f81c905060608060648360ff1611610e1b5760405180604001604052806005815260200164312e706e6760d81b81525091506040518060400160405280600581526020016423b932b2b760d91b81525090506110ed565b60a08360ff1611610e6a5760405180604001604052806005815260200164322e706e6760d81b815250915060405180604001604052806004815260200163426c756560e01b81525090506110ed565b60d28360ff1611610ebb5760405180604001604052806005815260200164332e706e6760d81b815250915060405180604001604052806006815260200165507572706c6560d01b81525090506110ed565b60f08360ff1611610f0c5760405180604001604052806005815260200164342e706e6760d81b8152509150604051806040016040528060068152602001654f72616e676560d01b81525090506110ed565b60ff8360ff1611610f5a5760405180604001604052806005815260200164352e706e6760d81b81525091506040518060400160405280600381526020016214995960ea1b81525090506110ed565b61012c8360ff1611610fab5760405180604001604052806005815260200164362e706e6760d81b815250915060405180604001604052806005815260200164576869746560d81b81525090506110ed565b6101688360ff1611610ffc5760405180604001604052806005815260200164372e706e6760d81b815250915060405180604001604052806005815260200164426c61636b60d81b81525090506110ed565b61019a8360ff161161104c5760405180604001604052806005815260200164382e706e6760d81b81525091506040518060400160405280600481526020016350696e6b60e01b81525090506110ed565b6101c28360ff161161109e5760405180604001604052806005815260200164392e706e6760d81b81525091506040518060400160405280600681526020016559656c6c6f7760d01b81525090506110ed565b6101fe8360ff16116110ed576040518060400160405280600681526020016531302e706e6760d01b815250915060405180604001604052806006815260200165159a5bdb195d60d21b81525090505b60006110f886611501565b6040516020016111089190611e99565b60408051601f198184030181529082905261112591602001611ede565b604051602081830303815290604052600c84604051602001611148929190611e12565b60408051601f19818403018152908290526111669291602001611fd0565b604051602081830303815290604052905060008260405160200161118a9190611ff6565b60408051601f1981840301815282820182526004835263227d5d7d60e01b60208481019190915291519093506111c4918591859101611fd0565b60408051601f19818403018152908290526111e3918390602001611fd0565b60408051601f198184030181529082905261120091602001612053565b6040516020818303038152906040529650505050505050919050565b600d805461046990611bf5565b6000546001600160a01b03163314611253576040516282b42960e81b815260040160405180910390fd5b600d6106718282611c7f565b600c805461046990611bf5565b6000546001600160a01b03163314611296576040516282b42960e81b815260040160405180910390fd5b6001600160a01b0381166112bd576040516349e27cff60e01b815260040160405180910390fd5b600080546001600160a01b0319166001600160a01b0383169081178255604051909133917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a350565b60006113357f0000000000000000000000000000000000000000000000000000000000000000600a61217c565b905090565b600080611345611308565b6001600160a01b038087166000818152600460205260408082208054948a16835290822054928252939450919290918691906113818386611d55565b90915550506001600160a01b03808716600090815260046020908152604080832080548a019055928a168252600b9052205460ff16611413576001600160a01b0387166000908152600460205260408120546113de90859061218b565b6113e8858561218b565b6113f29190611d55565b905060005b818110156114105761140889611594565b6001016113f7565b50505b6001600160a01b0386166000908152600b602052604090205460ff1661148e57600061143f848361218b565b6001600160a01b03881660009081526004602052604090205461146390869061218b565b61146d9190611d55565b905060005b8181101561148b57611483886116bc565b600101611472565b50505b856001600160a01b0316876001600160a01b03167fe59fdd36d0d223c0c7d996db7ad796880f45e1936cb0bb7ac102e7082e031487876040516114d391815260200190565b60405180910390a35060019695505050505050565b60016114f48382611c7f565b5060026109f98282611c7f565b6060600061150e836117c7565b600101905060008167ffffffffffffffff81111561152e5761152e611950565b6040519080825280601f01601f191660200182016040528015611558576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a850494508461156257509392505050565b6001600160a01b0381166115bb57604051636edaef2f60e11b815260040160405180910390fd5b6001600160a01b038116600090815260096020526040812080546115e190600190611d55565b815481106115f1576115f1611d68565b9060005260206000200154905060096000836001600160a01b03166001600160a01b0316815260200190815260200160002080548061163257611632611d7e565b600082815260208082208301600019908101839055909201909255828252600a815260408083208390556008825280832080546001600160a01b031990811690915560069092528083208054909216909155518291906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b6001600160a01b0381166116e357604051634e46966960e11b815260040160405180910390fd5b60038054600101908190556000818152600860205260409020546001600160a01b0316156117245760405163119b4fd360e11b815260040160405180910390fd5b600081815260086020908152604080832080546001600160a01b0319166001600160a01b03871690811790915580845260098352908320805460018181018355828652938520018590559252905461177c9190611d55565b6000828152600a602052604080822092909255905182916001600160a01b038516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b83106118065772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef81000000008310611832576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc10000831061185057662386f26fc10000830492506010015b6305f5e1008310611868576305f5e100830492506008015b612710831061187c57612710830492506004015b6064831061188e576064830492506002015b600a83106106355760010192915050565b60005b838110156118ba5781810151838201526020016118a2565b50506000910152565b60208152600082518060208401526118e281604085016020870161189f565b601f01601f19169190910160400192915050565b60006020828403121561190857600080fd5b5035919050565b80356001600160a01b0381168114610bf857600080fd5b6000806040838503121561193957600080fd5b6119428361190f565b946020939093013593505050565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261197757600080fd5b813567ffffffffffffffff8082111561199257611992611950565b604051601f8301601f19908116603f011681019082821181831017156119ba576119ba611950565b816040528381528660208588010111156119d357600080fd5b836020870160208301376000602085830101528094505050505092915050565b600060208284031215611a0557600080fd5b813567ffffffffffffffff811115611a1c57600080fd5b611a2884828501611966565b949350505050565b600080600060608486031215611a4557600080fd5b611a4e8461190f565b9250611a5c6020850161190f565b9150604084013590509250925092565b60008060408385031215611a7f57600080fd5b823567ffffffffffffffff80821115611a9757600080fd5b611aa386838701611966565b93506020850135915080821115611ab957600080fd5b50611ac685828601611966565b9150509250929050565b60008060408385031215611ae357600080fd5b611aec8361190f565b915060208301358015158114611b0157600080fd5b809150509250929050565b600060208284031215611b1e57600080fd5b610c838261190f565b600080600080600060808688031215611b3f57600080fd5b611b488661190f565b9450611b566020870161190f565b935060408601359250606086013567ffffffffffffffff80821115611b7a57600080fd5b818801915088601f830112611b8e57600080fd5b813581811115611b9d57600080fd5b896020828501011115611baf57600080fd5b9699959850939650602001949392505050565b60008060408385031215611bd557600080fd5b611bde8361190f565b9150611bec6020840161190f565b90509250929050565b600181811c90821680611c0957607f821691505b602082108103611c2957634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156109f9576000816000526020600020601f850160051c81016020861015611c585750805b601f850160051c820191505b81811015611c7757828155600101611c64565b505050505050565b815167ffffffffffffffff811115611c9957611c99611950565b611cad81611ca78454611bf5565b84611c2f565b602080601f831160018114611ce25760008415611cca5750858301515b600019600386901b1c1916600185901b178555611c77565b600085815260208120601f198616915b82811015611d1157888601518255948401946001909101908401611cf2565b5085821015611d2f5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b600052601160045260246000fd5b8181038181111561063557610635611d3f565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052603160045260246000fd5b600060208284031215611da657600080fd5b81516001600160e01b031981168114610c8357600080fd5b6001600160a01b038681168252851660208201526040810184905260806060820181905281018290526000828460a0840137600060a0848401015260a0601f19601f85011683010190509695505050505050565b6000808454611e2081611bf5565b60018281168015611e385760018114611e4d57611e7c565b60ff1984168752821515830287019450611e7c565b8860005260208060002060005b85811015611e735781548a820152908401908201611e5a565b50505082870194505b505050508351611e9081836020880161189f565b01949350505050565b7f7b226e616d65223a20224161766547686f737465722023000000000000000000815260008251611ed181601785016020870161189f565b9190910160170192915050565b60008251611ef081846020870161189f565b7f222c226465736372697074696f6e223a224120636f6c6c656374696f6e206f669201918252507f2031352c303030204161766547686f7374657220656e61626c6564206279204560208201527f52433430342c20616e206578706572696d656e74616c20746f6b656e2073746160408201527f6e6461726420696e7370697265642062792050616e646f7261222c226578746560608201527f726e616c5f75726c223a2268747470733a2f2f6161766567686f737465722e6f60808201526f373634b73291161134b6b0b3b2911d1160811b60a082015260b001919050565b60008351611fe281846020880161189f565b835190830190611e9081836020880161189f565b7f222c2261747472696275746573223a5b7b2274726169745f74797065223a224381526e37b637b91116113b30b63ab2911d1160891b60208201526000825161204681602f85016020870161189f565b91909101602f0192915050565b7f646174613a6170706c69636174696f6e2f6a736f6e3b757466382c000000000081526000825161208b81601b85016020870161189f565b91909101601b0192915050565b600181815b808511156120d35781600019048211156120b9576120b9611d3f565b808516156120c657918102915b93841c939080029061209d565b509250929050565b6000826120ea57506001610635565b816120f757506000610635565b816001811461210d576002811461211757612133565b6001915050610635565b60ff84111561212857612128611d3f565b50506001821b610635565b5060208310610133831016604e8410600b8410161715612156575081810a610635565b6121608383612098565b806000190482111561217457612174611d3f565b029392505050565b6000610c8360ff8416836120db565b6000826121a857634e487b7160e01b600052601260045260246000fd5b50049056fea26469706673582212207f01dbcaf3bd65a9463b6c991d65c78cf5ebad17478d717dd482a4dbfc9f1dff64736f6c63430008180033",
							"opcodes": "PUSH1 0xC0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x266A CODESIZE SUB DUP1 PUSH3 0x266A DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x34 SWAP2 PUSH3 0x175 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xB DUP2 MSTORE PUSH1 0x20 ADD PUSH11 0x20B0BB32A3B437B9BA32B9 PUSH1 0xA9 SHL DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xB DUP2 MSTORE PUSH1 0x20 ADD PUSH11 0x20A0AB22A3A427A9AA22A9 PUSH1 0xA9 SHL DUP2 MSTORE POP PUSH1 0x12 PUSH2 0x3A98 DUP5 DUP1 PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH3 0xB7 JUMPI PUSH1 0x40 MLOAD PUSH4 0x49E27CFF PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR DUP3 SSTORE PUSH1 0x40 MLOAD SWAP1 SWAP2 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP3 SWAP1 LOG3 POP PUSH1 0x1 PUSH3 0x10E DUP7 DUP3 PUSH3 0x24E JUMP JUMPDEST POP PUSH1 0x2 PUSH3 0x11D DUP6 DUP3 PUSH3 0x24E JUMP JUMPDEST POP PUSH1 0xFF DUP4 AND PUSH1 0x80 DUP2 SWAP1 MSTORE PUSH3 0x134 SWAP1 PUSH1 0xA PUSH3 0x42F JUMP JUMPDEST PUSH3 0x140 SWAP1 DUP4 PUSH3 0x440 JUMP JUMPDEST PUSH1 0xA0 MSTORE POP POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH10 0x32D26D12E980B600000 SWAP1 SSTORE POP PUSH3 0x45A SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x188 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH3 0x1A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x1D2 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x1F3 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x249 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH3 0x224 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x245 JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x230 JUMP JUMPDEST POP POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH3 0x26A JUMPI PUSH3 0x26A PUSH3 0x1A7 JUMP JUMPDEST PUSH3 0x282 DUP2 PUSH3 0x27B DUP5 SLOAD PUSH3 0x1BD JUMP JUMPDEST DUP5 PUSH3 0x1F9 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x2BA JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x2A1 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH3 0x245 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x2EB JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH3 0x2CA JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH3 0x30A JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 JUMPDEST DUP1 DUP6 GT ISZERO PUSH3 0x371 JUMPI DUP2 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH3 0x355 JUMPI PUSH3 0x355 PUSH3 0x31A JUMP JUMPDEST DUP1 DUP6 AND ISZERO PUSH3 0x363 JUMPI SWAP2 DUP2 MUL SWAP2 JUMPDEST SWAP4 DUP5 SHR SWAP4 SWAP1 DUP1 MUL SWAP1 PUSH3 0x335 JUMP JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH3 0x38A JUMPI POP PUSH1 0x1 PUSH3 0x429 JUMP JUMPDEST DUP2 PUSH3 0x399 JUMPI POP PUSH1 0x0 PUSH3 0x429 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH3 0x3B2 JUMPI PUSH1 0x2 DUP2 EQ PUSH3 0x3BD JUMPI PUSH3 0x3DD JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH3 0x429 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH3 0x3D1 JUMPI PUSH3 0x3D1 PUSH3 0x31A JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH3 0x429 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH3 0x402 JUMPI POP DUP2 DUP2 EXP PUSH3 0x429 JUMP JUMPDEST PUSH3 0x40E DUP4 DUP4 PUSH3 0x330 JUMP JUMPDEST DUP1 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH3 0x425 JUMPI PUSH3 0x425 PUSH3 0x31A JUMP JUMPDEST MUL SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1A0 PUSH1 0xFF DUP5 AND DUP4 PUSH3 0x379 JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH3 0x429 JUMPI PUSH3 0x429 PUSH3 0x31A JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH2 0x21E3 PUSH3 0x487 PUSH1 0x0 CODECOPY PUSH1 0x0 PUSH2 0x235 ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0x29A ADD MSTORE PUSH2 0x130F ADD MSTORE PUSH2 0x21E3 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1A9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0xF9 JUMPI DUP1 PUSH4 0xC87B56DD GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xE0DF5B6F GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xE0DF5B6F EQ PUSH2 0x400 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x413 JUMPI DUP1 PUSH4 0xF28CA1DD EQ PUSH2 0x441 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x449 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x3BA JUMPI DUP1 PUSH4 0xD547CFB7 EQ PUSH2 0x3CD JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x3D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x9B19251A GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x9B19251A EQ PUSH2 0x35E JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x381 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x394 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x3A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x323 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x343 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x356 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2B968958 GT PUSH2 0x166 JUMPI DUP1 PUSH4 0x4F02C420 GT PUSH2 0x140 JUMPI DUP1 PUSH4 0x4F02C420 EQ PUSH2 0x2E1 JUMPI DUP1 PUSH4 0x504334C2 EQ PUSH2 0x2EA JUMPI DUP1 PUSH4 0x53D6FD59 EQ PUSH2 0x2FD JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x310 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2B968958 EQ PUSH2 0x28D JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x295 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x2CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1AE JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x1CC JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x20D JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x230 JUMPI DUP1 PUSH4 0x18D217C3 EQ PUSH2 0x265 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x27A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1B6 PUSH2 0x45C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C3 SWAP2 SWAP1 PUSH2 0x18C3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F5 PUSH2 0x1DA CALLDATASIZE PUSH1 0x4 PUSH2 0x18F6 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1C3 JUMP JUMPDEST PUSH2 0x220 PUSH2 0x21B CALLDATASIZE PUSH1 0x4 PUSH2 0x1926 JUMP JUMPDEST PUSH2 0x4EA JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1C3 JUMP JUMPDEST PUSH2 0x257 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1C3 JUMP JUMPDEST PUSH2 0x278 PUSH2 0x273 CALLDATASIZE PUSH1 0x4 PUSH2 0x19F3 JUMP JUMPDEST PUSH2 0x63B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x278 PUSH2 0x288 CALLDATASIZE PUSH1 0x4 PUSH2 0x1A30 JUMP JUMPDEST PUSH2 0x675 JUMP JUMPDEST PUSH2 0x278 PUSH2 0x9FE JUMP JUMPDEST PUSH2 0x2BC PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1C3 JUMP JUMPDEST PUSH2 0x278 PUSH2 0x2DC CALLDATASIZE PUSH1 0x4 PUSH2 0x1A30 JUMP JUMPDEST PUSH2 0xA64 JUMP JUMPDEST PUSH2 0x257 PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x278 PUSH2 0x2F8 CALLDATASIZE PUSH1 0x4 PUSH2 0x1A6C JUMP JUMPDEST PUSH2 0xB39 JUMP JUMPDEST PUSH2 0x278 PUSH2 0x30B CALLDATASIZE PUSH1 0x4 PUSH2 0x1AD0 JUMP JUMPDEST PUSH2 0xB6D JUMP JUMPDEST PUSH2 0x1F5 PUSH2 0x31E CALLDATASIZE PUSH1 0x4 PUSH2 0x18F6 JUMP JUMPDEST PUSH2 0xBC2 JUMP JUMPDEST PUSH2 0x257 PUSH2 0x331 CALLDATASIZE PUSH1 0x4 PUSH2 0x1B0C JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x1F5 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x1B6 PUSH2 0xBFD JUMP JUMPDEST PUSH2 0x220 PUSH2 0x36C CALLDATASIZE PUSH1 0x4 PUSH2 0x1B0C JUMP JUMPDEST PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x278 PUSH2 0x38F CALLDATASIZE PUSH1 0x4 PUSH2 0x1AD0 JUMP JUMPDEST PUSH2 0xC0A JUMP JUMPDEST PUSH2 0x220 PUSH2 0x3A2 CALLDATASIZE PUSH1 0x4 PUSH2 0x1926 JUMP JUMPDEST PUSH2 0xC76 JUMP JUMPDEST PUSH2 0x278 PUSH2 0x3B5 CALLDATASIZE PUSH1 0x4 PUSH2 0x1B27 JUMP JUMPDEST PUSH2 0xC8A JUMP JUMPDEST PUSH2 0x1B6 PUSH2 0x3C8 CALLDATASIZE PUSH1 0x4 PUSH2 0x18F6 JUMP JUMPDEST PUSH2 0xD4D JUMP JUMPDEST PUSH2 0x1B6 PUSH2 0x121C JUMP JUMPDEST PUSH2 0x257 PUSH2 0x3E3 CALLDATASIZE PUSH1 0x4 PUSH2 0x1BC2 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x278 PUSH2 0x40E CALLDATASIZE PUSH1 0x4 PUSH2 0x19F3 JUMP JUMPDEST PUSH2 0x1229 JUMP JUMPDEST PUSH2 0x220 PUSH2 0x421 CALLDATASIZE PUSH1 0x4 PUSH2 0x1BC2 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x1B6 PUSH2 0x125F JUMP JUMPDEST PUSH2 0x278 PUSH2 0x457 CALLDATASIZE PUSH1 0x4 PUSH2 0x1B0C JUMP JUMPDEST PUSH2 0x126C JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH2 0x469 SWAP1 PUSH2 0x1BF5 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x495 SWAP1 PUSH2 0x1BF5 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4E2 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x4B7 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4E2 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4C5 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 SLOAD DUP3 GT ISZERO DUP1 ISZERO PUSH2 0x4FE JUMPI POP PUSH1 0x0 DUP3 GT JUMPDEST ISZERO PUSH2 0x5D5 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER DUP2 EQ DUP1 ISZERO SWAP1 PUSH2 0x54F JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST ISZERO PUSH2 0x56C JUMPI PUSH1 0x40 MLOAD PUSH3 0x82B429 PUSH1 0xE8 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE SWAP3 MLOAD DUP7 DUP2 MSTORE SWAP1 DUP5 AND SWAP2 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH2 0x631 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND DUP1 DUP6 MSTORE SWAP1 DUP4 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 DUP7 SWAP1 SSTORE MLOAD DUP6 DUP2 MSTORE SWAP2 SWAP3 SWAP2 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP PUSH1 0x1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x665 JUMPI PUSH1 0x40 MLOAD PUSH3 0x82B429 PUSH1 0xE8 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xC PUSH2 0x671 DUP3 DUP3 PUSH2 0x1C7F JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 GT PUSH2 0x98F JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 AND EQ PUSH2 0x6B8 JUMPI PUSH1 0x40 MLOAD PUSH4 0x6EDAEF2F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x6DF JUMPI PUSH1 0x40 MLOAD PUSH4 0x4E469669 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EQ DUP1 ISZERO SWAP1 PUSH2 0x71C JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x73F JUMPI POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ ISZERO JUMPDEST ISZERO PUSH2 0x75C JUMPI PUSH1 0x40 MLOAD PUSH3 0x82B429 PUSH1 0xE8 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x764 PUSH2 0x1308 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD SWAP1 SWAP2 SWAP1 PUSH2 0x78C SWAP1 DUP5 SWAP1 PUSH2 0x1D55 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x79A SWAP1 POP PUSH2 0x1308 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD SWAP1 SWAP7 ADD SWAP1 SWAP6 SSTORE DUP6 DUP3 MSTORE PUSH1 0x8 DUP2 MSTORE DUP5 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND SWAP1 SWAP5 OR SWAP1 SSTORE PUSH1 0x6 DUP2 MSTORE DUP5 DUP3 KECCAK256 DUP1 SLOAD SWAP1 SWAP4 AND SWAP1 SWAP3 SSTORE SWAP2 DUP7 AND DUP3 MSTORE PUSH1 0x9 SWAP1 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD PUSH2 0x804 SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x1D55 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x814 JUMPI PUSH2 0x814 PUSH2 0x1D68 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP4 MSTORE PUSH1 0x9 DUP3 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP7 DUP6 MSTORE PUSH1 0xA SWAP1 SWAP4 MSTORE SWAP1 SWAP3 KECCAK256 SLOAD DUP2 SLOAD SWAP3 SWAP4 POP DUP4 SWAP3 DUP2 LT PUSH2 0x858 JUMPI PUSH2 0x858 PUSH2 0x1D68 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SWAP3 SWAP1 SWAP3 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP2 MSTORE PUSH1 0x9 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP1 PUSH2 0x88D JUMPI PUSH2 0x88D PUSH2 0x1D7E JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 KECCAK256 DUP4 ADD PUSH1 0x0 NOT SWAP1 DUP2 ADD DUP4 SWAP1 SSTORE SWAP1 SWAP3 ADD SWAP1 SWAP3 SSTORE DUP4 DUP3 MSTORE PUSH1 0xA DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD DUP5 DUP5 MSTORE DUP2 DUP5 KECCAK256 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP1 DUP5 MSTORE PUSH1 0x9 DUP4 MSTORE SWAP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP2 DUP2 ADD DUP4 SSTORE DUP3 DUP7 MSTORE SWAP4 DUP6 KECCAK256 ADD DUP7 SWAP1 SSTORE SWAP3 MSTORE SWAP1 SLOAD PUSH2 0x8F1 SWAP2 SWAP1 PUSH2 0x1D55 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP3 SWAP1 SWAP3 SSTORE SWAP1 MLOAD DUP4 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP8 AND SWAP3 SWAP1 DUP9 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 LOG4 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xE59FDD36D0D223C0C7D996DB7AD796880F45E1936CB0BB7AC102E7082E031487 PUSH2 0x978 PUSH2 0x1308 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0x0 NOT DUP2 EQ PUSH2 0x9EB JUMPI PUSH2 0x9C6 DUP3 DUP3 PUSH2 0x1D55 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SSTORE JUMPDEST PUSH2 0x9F6 DUP5 DUP5 DUP5 PUSH2 0x133A JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xA28 JUMPI PUSH1 0x40 MLOAD PUSH3 0x82B429 PUSH1 0xE8 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND DUP2 SSTORE PUSH1 0x40 MLOAD CALLER SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 JUMP JUMPDEST PUSH2 0xA6F DUP4 DUP4 DUP4 PUSH2 0x675 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EXTCODESIZE ISZERO DUP1 ISZERO SWAP1 PUSH2 0xB1B JUMPI POP PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP1 DUP3 MSTORE CALLER PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x24 DUP5 ADD MSTORE PUSH1 0x44 DUP4 ADD DUP5 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x64 DUP5 ADD MSTORE PUSH1 0x0 PUSH1 0x84 DUP5 ADD MSTORE SWAP1 SWAP2 SWAP1 DUP5 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH1 0xA4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xAEA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB0E SWAP2 SWAP1 PUSH2 0x1D94 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x9F9 JUMPI PUSH1 0x40 MLOAD PUSH4 0x3DA63931 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xB63 JUMPI PUSH1 0x40 MLOAD PUSH3 0x82B429 PUSH1 0xE8 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x671 DUP3 DUP3 PUSH2 0x14E8 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xB97 JUMPI PUSH1 0x40 MLOAD PUSH3 0x82B429 PUSH1 0xE8 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0xBF8 JUMPI PUSH1 0x40 MLOAD PUSH4 0xC5723B51 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH2 0x469 SWAP1 PUSH2 0x1BF5 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP1 DUP6 MSTORE SWAP1 DUP4 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD SWAP1 DUP2 MSTORE SWAP2 SWAP3 SWAP2 PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC83 CALLER DUP5 DUP5 PUSH2 0x133A JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xC95 DUP6 DUP6 DUP6 PUSH2 0x675 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO DUP1 ISZERO SWAP1 PUSH2 0xD2F JUMPI POP PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP1 DUP3 MSTORE SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH2 0xCDF SWAP1 CALLER SWAP1 DUP11 SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP10 SWAP1 PUSH1 0x4 ADD PUSH2 0x1DBE JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xCFE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD22 SWAP2 SWAP1 PUSH2 0x1D94 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x9F6 JUMPI PUSH1 0x40 MLOAD PUSH4 0x3DA63931 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0xD DUP1 SLOAD PUSH2 0xD5E SWAP1 PUSH2 0x1BF5 JUMP JUMPDEST SWAP1 POP GT ISZERO PUSH2 0xD98 JUMPI PUSH1 0xD PUSH2 0xD71 DUP4 PUSH2 0x1501 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xD82 SWAP3 SWAP2 SWAP1 PUSH2 0x1E12 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xDAD SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0xF8 SHR SWAP1 POP PUSH1 0x60 DUP1 PUSH1 0x64 DUP4 PUSH1 0xFF AND GT PUSH2 0xE1B JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH5 0x312E706E67 PUSH1 0xD8 SHL DUP2 MSTORE POP SWAP2 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH5 0x23B932B2B7 PUSH1 0xD9 SHL DUP2 MSTORE POP SWAP1 POP PUSH2 0x10ED JUMP JUMPDEST PUSH1 0xA0 DUP4 PUSH1 0xFF AND GT PUSH2 0xE6A JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH5 0x322E706E67 PUSH1 0xD8 SHL DUP2 MSTORE POP SWAP2 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH4 0x426C7565 PUSH1 0xE0 SHL DUP2 MSTORE POP SWAP1 POP PUSH2 0x10ED JUMP JUMPDEST PUSH1 0xD2 DUP4 PUSH1 0xFF AND GT PUSH2 0xEBB JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH5 0x332E706E67 PUSH1 0xD8 SHL DUP2 MSTORE POP SWAP2 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x6 DUP2 MSTORE PUSH1 0x20 ADD PUSH6 0x507572706C65 PUSH1 0xD0 SHL DUP2 MSTORE POP SWAP1 POP PUSH2 0x10ED JUMP JUMPDEST PUSH1 0xF0 DUP4 PUSH1 0xFF AND GT PUSH2 0xF0C JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH5 0x342E706E67 PUSH1 0xD8 SHL DUP2 MSTORE POP SWAP2 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x6 DUP2 MSTORE PUSH1 0x20 ADD PUSH6 0x4F72616E6765 PUSH1 0xD0 SHL DUP2 MSTORE POP SWAP1 POP PUSH2 0x10ED JUMP JUMPDEST PUSH1 0xFF DUP4 PUSH1 0xFF AND GT PUSH2 0xF5A JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH5 0x352E706E67 PUSH1 0xD8 SHL DUP2 MSTORE POP SWAP2 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x149959 PUSH1 0xEA SHL DUP2 MSTORE POP SWAP1 POP PUSH2 0x10ED JUMP JUMPDEST PUSH2 0x12C DUP4 PUSH1 0xFF AND GT PUSH2 0xFAB JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH5 0x362E706E67 PUSH1 0xD8 SHL DUP2 MSTORE POP SWAP2 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH5 0x5768697465 PUSH1 0xD8 SHL DUP2 MSTORE POP SWAP1 POP PUSH2 0x10ED JUMP JUMPDEST PUSH2 0x168 DUP4 PUSH1 0xFF AND GT PUSH2 0xFFC JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH5 0x372E706E67 PUSH1 0xD8 SHL DUP2 MSTORE POP SWAP2 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH5 0x426C61636B PUSH1 0xD8 SHL DUP2 MSTORE POP SWAP1 POP PUSH2 0x10ED JUMP JUMPDEST PUSH2 0x19A DUP4 PUSH1 0xFF AND GT PUSH2 0x104C JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH5 0x382E706E67 PUSH1 0xD8 SHL DUP2 MSTORE POP SWAP2 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH4 0x50696E6B PUSH1 0xE0 SHL DUP2 MSTORE POP SWAP1 POP PUSH2 0x10ED JUMP JUMPDEST PUSH2 0x1C2 DUP4 PUSH1 0xFF AND GT PUSH2 0x109E JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH5 0x392E706E67 PUSH1 0xD8 SHL DUP2 MSTORE POP SWAP2 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x6 DUP2 MSTORE PUSH1 0x20 ADD PUSH6 0x59656C6C6F77 PUSH1 0xD0 SHL DUP2 MSTORE POP SWAP1 POP PUSH2 0x10ED JUMP JUMPDEST PUSH2 0x1FE DUP4 PUSH1 0xFF AND GT PUSH2 0x10ED JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x6 DUP2 MSTORE PUSH1 0x20 ADD PUSH6 0x31302E706E67 PUSH1 0xD0 SHL DUP2 MSTORE POP SWAP2 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x6 DUP2 MSTORE PUSH1 0x20 ADD PUSH6 0x159A5BDB195D PUSH1 0xD2 SHL DUP2 MSTORE POP SWAP1 POP JUMPDEST PUSH1 0x0 PUSH2 0x10F8 DUP7 PUSH2 0x1501 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1108 SWAP2 SWAP1 PUSH2 0x1E99 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP1 DUP3 SWAP1 MSTORE PUSH2 0x1125 SWAP2 PUSH1 0x20 ADD PUSH2 0x1EDE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0xC DUP5 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1148 SWAP3 SWAP2 SWAP1 PUSH2 0x1E12 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP1 DUP3 SWAP1 MSTORE PUSH2 0x1166 SWAP3 SWAP2 PUSH1 0x20 ADD PUSH2 0x1FD0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x118A SWAP2 SWAP1 PUSH2 0x1FF6 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE DUP3 DUP3 ADD DUP3 MSTORE PUSH1 0x4 DUP4 MSTORE PUSH4 0x227D5D7D PUSH1 0xE0 SHL PUSH1 0x20 DUP5 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP2 MLOAD SWAP1 SWAP4 POP PUSH2 0x11C4 SWAP2 DUP6 SWAP2 DUP6 SWAP2 ADD PUSH2 0x1FD0 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP1 DUP3 SWAP1 MSTORE PUSH2 0x11E3 SWAP2 DUP4 SWAP1 PUSH1 0x20 ADD PUSH2 0x1FD0 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP1 DUP3 SWAP1 MSTORE PUSH2 0x1200 SWAP2 PUSH1 0x20 ADD PUSH2 0x2053 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP7 POP POP POP POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xD DUP1 SLOAD PUSH2 0x469 SWAP1 PUSH2 0x1BF5 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1253 JUMPI PUSH1 0x40 MLOAD PUSH3 0x82B429 PUSH1 0xE8 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xD PUSH2 0x671 DUP3 DUP3 PUSH2 0x1C7F JUMP JUMPDEST PUSH1 0xC DUP1 SLOAD PUSH2 0x469 SWAP1 PUSH2 0x1BF5 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1296 JUMPI PUSH1 0x40 MLOAD PUSH3 0x82B429 PUSH1 0xE8 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x12BD JUMPI PUSH1 0x40 MLOAD PUSH4 0x49E27CFF PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR DUP3 SSTORE PUSH1 0x40 MLOAD SWAP1 SWAP2 CALLER SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1335 PUSH32 0x0 PUSH1 0xA PUSH2 0x217C JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1345 PUSH2 0x1308 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP8 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD SWAP5 DUP11 AND DUP4 MSTORE SWAP1 DUP3 KECCAK256 SLOAD SWAP3 DUP3 MSTORE SWAP4 SWAP5 POP SWAP2 SWAP3 SWAP1 SWAP2 DUP7 SWAP2 SWAP1 PUSH2 0x1381 DUP4 DUP7 PUSH2 0x1D55 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD DUP11 ADD SWAP1 SSTORE SWAP3 DUP11 AND DUP3 MSTORE PUSH1 0xB SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x1413 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x13DE SWAP1 DUP6 SWAP1 PUSH2 0x218B JUMP JUMPDEST PUSH2 0x13E8 DUP6 DUP6 PUSH2 0x218B JUMP JUMPDEST PUSH2 0x13F2 SWAP2 SWAP1 PUSH2 0x1D55 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1410 JUMPI PUSH2 0x1408 DUP10 PUSH2 0x1594 JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x13F7 JUMP JUMPDEST POP POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x148E JUMPI PUSH1 0x0 PUSH2 0x143F DUP5 DUP4 PUSH2 0x218B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x1463 SWAP1 DUP7 SWAP1 PUSH2 0x218B JUMP JUMPDEST PUSH2 0x146D SWAP2 SWAP1 PUSH2 0x1D55 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x148B JUMPI PUSH2 0x1483 DUP9 PUSH2 0x16BC JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x1472 JUMP JUMPDEST POP POP JUMPDEST DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xE59FDD36D0D223C0C7D996DB7AD796880F45E1936CB0BB7AC102E7082E031487 DUP8 PUSH1 0x40 MLOAD PUSH2 0x14D3 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH1 0x1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH2 0x14F4 DUP4 DUP3 PUSH2 0x1C7F JUMP JUMPDEST POP PUSH1 0x2 PUSH2 0x9F9 DUP3 DUP3 PUSH2 0x1C7F JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x150E DUP4 PUSH2 0x17C7 JUMP JUMPDEST PUSH1 0x1 ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x152E JUMPI PUSH2 0x152E PUSH2 0x1950 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1558 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP DUP2 DUP2 ADD PUSH1 0x20 ADD JUMPDEST PUSH1 0x0 NOT ADD PUSH16 0x181899199A1A9B1B9C1CB0B131B232B3 PUSH1 0x81 SHL PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DIV SWAP5 POP DUP5 PUSH2 0x1562 JUMPI POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x15BB JUMPI PUSH1 0x40 MLOAD PUSH4 0x6EDAEF2F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH2 0x15E1 SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x1D55 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x15F1 JUMPI PUSH2 0x15F1 PUSH2 0x1D68 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP PUSH1 0x9 PUSH1 0x0 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD DUP1 PUSH2 0x1632 JUMPI PUSH2 0x1632 PUSH2 0x1D7E JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 KECCAK256 DUP4 ADD PUSH1 0x0 NOT SWAP1 DUP2 ADD DUP4 SWAP1 SSTORE SWAP1 SWAP3 ADD SWAP1 SWAP3 SSTORE DUP3 DUP3 MSTORE PUSH1 0xA DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP4 SWAP1 SSTORE PUSH1 0x8 DUP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND SWAP1 SWAP2 SSTORE PUSH1 0x6 SWAP1 SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD SWAP1 SWAP3 AND SWAP1 SWAP2 SSTORE MLOAD DUP3 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 DUP4 SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x16E3 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4E469669 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 DUP2 SWAP1 SSTORE PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0x1724 JUMPI PUSH1 0x40 MLOAD PUSH4 0x119B4FD3 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP1 DUP5 MSTORE PUSH1 0x9 DUP4 MSTORE SWAP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP2 DUP2 ADD DUP4 SSTORE DUP3 DUP7 MSTORE SWAP4 DUP6 KECCAK256 ADD DUP6 SWAP1 SSTORE SWAP3 MSTORE SWAP1 SLOAD PUSH2 0x177C SWAP2 SWAP1 PUSH2 0x1D55 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP3 SWAP1 SWAP3 SSTORE SWAP1 MLOAD DUP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 DUP3 SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH19 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F01 PUSH1 0x40 SHL DUP4 LT PUSH2 0x1806 JUMPI PUSH19 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F01 PUSH1 0x40 SHL DUP4 DIV SWAP3 POP PUSH1 0x40 ADD JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x1832 JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DIV SWAP3 POP PUSH1 0x20 ADD JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x1850 JUMPI PUSH7 0x2386F26FC10000 DUP4 DIV SWAP3 POP PUSH1 0x10 ADD JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x1868 JUMPI PUSH4 0x5F5E100 DUP4 DIV SWAP3 POP PUSH1 0x8 ADD JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x187C JUMPI PUSH2 0x2710 DUP4 DIV SWAP3 POP PUSH1 0x4 ADD JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x188E JUMPI PUSH1 0x64 DUP4 DIV SWAP3 POP PUSH1 0x2 ADD JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x635 JUMPI PUSH1 0x1 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x18BA JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x18A2 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x18E2 DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x189F JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1908 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xBF8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1939 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1942 DUP4 PUSH2 0x190F JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1977 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1992 JUMPI PUSH2 0x1992 PUSH2 0x1950 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x19BA JUMPI PUSH2 0x19BA PUSH2 0x1950 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE DUP7 PUSH1 0x20 DUP6 DUP9 ADD ADD GT ISZERO PUSH2 0x19D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 PUSH1 0x20 DUP8 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP6 DUP4 ADD ADD MSTORE DUP1 SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A05 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1A1C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1A28 DUP5 DUP3 DUP6 ADD PUSH2 0x1966 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1A45 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1A4E DUP5 PUSH2 0x190F JUMP JUMPDEST SWAP3 POP PUSH2 0x1A5C PUSH1 0x20 DUP6 ADD PUSH2 0x190F JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1A7F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1A97 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1AA3 DUP7 DUP4 DUP8 ADD PUSH2 0x1966 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1AB9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1AC6 DUP6 DUP3 DUP7 ADD PUSH2 0x1966 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1AE3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1AEC DUP4 PUSH2 0x190F JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1B01 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B1E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC83 DUP3 PUSH2 0x190F JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x80 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1B3F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1B48 DUP7 PUSH2 0x190F JUMP JUMPDEST SWAP5 POP PUSH2 0x1B56 PUSH1 0x20 DUP8 ADD PUSH2 0x190F JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1B7A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP9 ADD SWAP2 POP DUP9 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1B8E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x1B9D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP10 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x1BAF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP7 SWAP10 SWAP6 SWAP9 POP SWAP4 SWAP7 POP PUSH1 0x20 ADD SWAP5 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1BD5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1BDE DUP4 PUSH2 0x190F JUMP JUMPDEST SWAP2 POP PUSH2 0x1BEC PUSH1 0x20 DUP5 ADD PUSH2 0x190F JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1C09 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1C29 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x9F9 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH2 0x1C58 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1C77 JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1C64 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1C99 JUMPI PUSH2 0x1C99 PUSH2 0x1950 JUMP JUMPDEST PUSH2 0x1CAD DUP2 PUSH2 0x1CA7 DUP5 SLOAD PUSH2 0x1BF5 JUMP JUMPDEST DUP5 PUSH2 0x1C2F JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x1CE2 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x1CCA JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH2 0x1C77 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1D11 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0x1CF2 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0x1D2F JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x635 JUMPI PUSH2 0x635 PUSH2 0x1D3F JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1DA6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0xC83 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x0 DUP3 DUP5 PUSH1 0xA0 DUP5 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0xA0 DUP5 DUP5 ADD ADD MSTORE PUSH1 0xA0 PUSH1 0x1F NOT PUSH1 0x1F DUP6 ADD AND DUP4 ADD ADD SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 SLOAD PUSH2 0x1E20 DUP2 PUSH2 0x1BF5 JUMP JUMPDEST PUSH1 0x1 DUP3 DUP2 AND DUP1 ISZERO PUSH2 0x1E38 JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x1E4D JUMPI PUSH2 0x1E7C JUMP JUMPDEST PUSH1 0xFF NOT DUP5 AND DUP8 MSTORE DUP3 ISZERO ISZERO DUP4 MUL DUP8 ADD SWAP5 POP PUSH2 0x1E7C JUMP JUMPDEST DUP9 PUSH1 0x0 MSTORE PUSH1 0x20 DUP1 PUSH1 0x0 KECCAK256 PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x1E73 JUMPI DUP2 SLOAD DUP11 DUP3 ADD MSTORE SWAP1 DUP5 ADD SWAP1 DUP3 ADD PUSH2 0x1E5A JUMP JUMPDEST POP POP POP DUP3 DUP8 ADD SWAP5 POP JUMPDEST POP POP POP POP DUP4 MLOAD PUSH2 0x1E90 DUP2 DUP4 PUSH1 0x20 DUP9 ADD PUSH2 0x189F JUMP JUMPDEST ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x7B226E616D65223A20224161766547686F737465722023000000000000000000 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD PUSH2 0x1ED1 DUP2 PUSH1 0x17 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x189F JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD PUSH1 0x17 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x1EF0 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x189F JUMP JUMPDEST PUSH32 0x222C226465736372697074696F6E223A224120636F6C6C656374696F6E206F66 SWAP3 ADD SWAP2 DUP3 MSTORE POP PUSH32 0x2031352C303030204161766547686F7374657220656E61626C65642062792045 PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x52433430342C20616E206578706572696D656E74616C20746F6B656E20737461 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x6E6461726420696E7370697265642062792050616E646F7261222C2265787465 PUSH1 0x60 DUP3 ADD MSTORE PUSH32 0x726E616C5F75726C223A2268747470733A2F2F6161766567686F737465722E6F PUSH1 0x80 DUP3 ADD MSTORE PUSH16 0x373634B73291161134B6B0B3B2911D11 PUSH1 0x81 SHL PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xB0 ADD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH2 0x1FE2 DUP2 DUP5 PUSH1 0x20 DUP9 ADD PUSH2 0x189F JUMP JUMPDEST DUP4 MLOAD SWAP1 DUP4 ADD SWAP1 PUSH2 0x1E90 DUP2 DUP4 PUSH1 0x20 DUP9 ADD PUSH2 0x189F JUMP JUMPDEST PUSH32 0x222C2261747472696275746573223A5B7B2274726169745F74797065223A2243 DUP2 MSTORE PUSH15 0x37B637B91116113B30B63AB2911D11 PUSH1 0x89 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 DUP3 MLOAD PUSH2 0x2046 DUP2 PUSH1 0x2F DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x189F JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD PUSH1 0x2F ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x646174613A6170706C69636174696F6E2F6A736F6E3B757466382C0000000000 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD PUSH2 0x208B DUP2 PUSH1 0x1B DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x189F JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD PUSH1 0x1B ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 JUMPDEST DUP1 DUP6 GT ISZERO PUSH2 0x20D3 JUMPI DUP2 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0x20B9 JUMPI PUSH2 0x20B9 PUSH2 0x1D3F JUMP JUMPDEST DUP1 DUP6 AND ISZERO PUSH2 0x20C6 JUMPI SWAP2 DUP2 MUL SWAP2 JUMPDEST SWAP4 DUP5 SHR SWAP4 SWAP1 DUP1 MUL SWAP1 PUSH2 0x209D JUMP JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x20EA JUMPI POP PUSH1 0x1 PUSH2 0x635 JUMP JUMPDEST DUP2 PUSH2 0x20F7 JUMPI POP PUSH1 0x0 PUSH2 0x635 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x210D JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x2117 JUMPI PUSH2 0x2133 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x635 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x2128 JUMPI PUSH2 0x2128 PUSH2 0x1D3F JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH2 0x635 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x2156 JUMPI POP DUP2 DUP2 EXP PUSH2 0x635 JUMP JUMPDEST PUSH2 0x2160 DUP4 DUP4 PUSH2 0x2098 JUMP JUMPDEST DUP1 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0x2174 JUMPI PUSH2 0x2174 PUSH2 0x1D3F JUMP JUMPDEST MUL SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC83 PUSH1 0xFF DUP5 AND DUP4 PUSH2 0x20DB JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x21A8 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH32 0x1DBCAF3BD65A9463B6C991D65C78CF5EBAD17478D717DD482A4DBFC9F1DFF64 PUSH20 0x6F6C634300081800330000000000000000000000 ",
							"sourceMap": "145:3085:3:-:0;;;246:155;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4192:336:4;;;;;;;;;;;;;-1:-1:-1;;;4192:336:4;;;;;;;;;;;;;;;;-1:-1:-1;;;4192:336:4;;;327:2:3;331:5;338:6;4369::4;444:1;-1:-1:-1;;;;;426:20:4;:6;-1:-1:-1;;;;;426:20:4;;422:47;;455:14;;-1:-1:-1;;;455:14:4;;;;;;;;;;;422:47;482:5;:14;;-1:-1:-1;;;;;;482:14:4;-1:-1:-1;;;;;482:14:4;;;;;;;514:40;;482:14;;:5;514:40;;482:5;;514:40;-1:-1:-1;4388:4:4::1;:12;4395:5:::0;4388:4;:12:::1;:::i;:::-;-1:-1:-1::0;4411:6:4::1;:16;4420:7:::0;4411:6;:16:::1;:::i;:::-;-1:-1:-1::0;4438:20:4::1;::::0;::::1;;::::0;;;4505:14:::1;::::0;:2:::1;:14;:::i;:::-;4483:37;::::0;:18;:37:::1;:::i;:::-;4469:51;::::0;-1:-1:-1;;;;;;;;357:17:3;;::::1;;::::0;;;:9:::1;:17;::::0;;;;377:16:::1;357:36:::0;;-1:-1:-1;145:3085:3;;-1:-1:-1;145:3085:3;14:290:5;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:5;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:5:o;309:127::-;370:10;365:3;361:20;358:1;351:31;401:4;398:1;391:15;425:4;422:1;415:15;441:380;520:1;516:12;;;;563;;;584:61;;638:4;630:6;626:17;616:27;;584:61;691:2;683:6;680:14;660:18;657:38;654:161;;737:10;732:3;728:20;725:1;718:31;772:4;769:1;762:15;800:4;797:1;790:15;654:161;;441:380;;;:::o;952:543::-;1054:2;1049:3;1046:11;1043:446;;;1090:1;1114:5;1111:1;1104:16;1158:4;1155:1;1145:18;1228:2;1216:10;1212:19;1209:1;1205:27;1199:4;1195:38;1264:4;1252:10;1249:20;1246:47;;;-1:-1:-1;1287:4:5;1246:47;1342:2;1337:3;1333:12;1330:1;1326:20;1320:4;1316:31;1306:41;;1397:82;1415:2;1408:5;1405:13;1397:82;;;1460:17;;;1441:1;1430:13;1397:82;;;1401:3;;;1043:446;952:543;;;:::o;1671:1345::-;1791:10;;-1:-1:-1;;;;;1813:30:5;;1810:56;;;1846:18;;:::i;:::-;1875:97;1965:6;1925:38;1957:4;1951:11;1925:38;:::i;:::-;1919:4;1875:97;:::i;:::-;2027:4;;2084:2;2073:14;;2101:1;2096:663;;;;2803:1;2820:6;2817:89;;;-1:-1:-1;2872:19:5;;;2866:26;2817:89;-1:-1:-1;;1628:1:5;1624:11;;;1620:24;1616:29;1606:40;1652:1;1648:11;;;1603:57;2919:81;;2066:944;;2096:663;899:1;892:14;;;936:4;923:18;;-1:-1:-1;;2132:20:5;;;2250:236;2264:7;2261:1;2258:14;2250:236;;;2353:19;;;2347:26;2332:42;;2445:27;;;;2413:1;2401:14;;;;2280:19;;2250:236;;;2254:3;2514:6;2505:7;2502:19;2499:201;;;2575:19;;;2569:26;-1:-1:-1;;2658:1:5;2654:14;;;2670:3;2650:24;2646:37;2642:42;2627:58;2612:74;;2499:201;-1:-1:-1;;;;;2746:1:5;2730:14;;;2726:22;2713:36;;-1:-1:-1;1671:1345:5:o;3021:127::-;3082:10;3077:3;3073:20;3070:1;3063:31;3113:4;3110:1;3103:15;3137:4;3134:1;3127:15;3153:416;3242:1;3279:5;3242:1;3293:270;3314:7;3304:8;3301:21;3293:270;;;3373:4;3369:1;3365:6;3361:17;3355:4;3352:27;3349:53;;;3382:18;;:::i;:::-;3432:7;3422:8;3418:22;3415:55;;;3452:16;;;;3415:55;3531:22;;;;3491:15;;;;3293:270;;;3297:3;3153:416;;;;;:::o;3574:806::-;3623:5;3653:8;3643:80;;-1:-1:-1;3694:1:5;3708:5;;3643:80;3742:4;3732:76;;-1:-1:-1;3779:1:5;3793:5;;3732:76;3824:4;3842:1;3837:59;;;;3910:1;3905:130;;;;3817:218;;3837:59;3867:1;3858:10;;3881:5;;;3905:130;3942:3;3932:8;3929:17;3926:43;;;3949:18;;:::i;:::-;-1:-1:-1;;4005:1:5;3991:16;;4020:5;;3817:218;;4119:2;4109:8;4106:16;4100:3;4094:4;4091:13;4087:36;4081:2;4071:8;4068:16;4063:2;4057:4;4054:12;4050:35;4047:77;4044:159;;;-1:-1:-1;4156:19:5;;;4188:5;;4044:159;4235:34;4260:8;4254:4;4235:34;:::i;:::-;4305:6;4301:1;4297:6;4293:19;4284:7;4281:32;4278:58;;;4316:18;;:::i;:::-;4354:20;;-1:-1:-1;3574:806:5;;;;;:::o;4385:140::-;4443:5;4472:47;4513:4;4503:8;4499:19;4493:4;4472:47;:::i;4530:168::-;4603:9;;;4634;;4651:15;;;4645:22;;4631:37;4621:71;;4672:18;;:::i;4530:168::-;145:3085:3;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_burn_2706": {
									"entryPoint": 5524,
									"id": 2706,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_getUnit_2575": {
									"entryPoint": 4872,
									"id": 2575,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_mint_2646": {
									"entryPoint": 5820,
									"id": 2646,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_setNameSymbol_2722": {
									"entryPoint": 5352,
									"id": 2722,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_transfer_2565": {
									"entryPoint": 4922,
									"id": 2565,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@allowance_1927": {
									"entryPoint": null,
									"id": 1927,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@approve_2123": {
									"entryPoint": 1258,
									"id": 2123,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_1920": {
									"entryPoint": null,
									"id": 1920,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@baseTokenURI_1423": {
									"entryPoint": 4636,
									"id": 1423,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@dataURI_1421": {
									"entryPoint": 4703,
									"id": 1421,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@decimals_1909": {
									"entryPoint": null,
									"id": 1909,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@getApproved_1932": {
									"entryPoint": null,
									"id": 1932,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@isApprovedForAll_1939": {
									"entryPoint": null,
									"id": 1939,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@log10_1128": {
									"entryPoint": 6087,
									"id": 1128,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@minted_1915": {
									"entryPoint": null,
									"id": 1915,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@name_1903": {
									"entryPoint": 1116,
									"id": 1903,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@ownerOf_2041": {
									"entryPoint": 3010,
									"id": 2041,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@owner_1737": {
									"entryPoint": null,
									"id": 1737,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@revokeOwnership_1827": {
									"entryPoint": 2558,
									"id": 1827,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@safeTransferFrom_2398": {
									"entryPoint": 2660,
									"id": 2398,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@safeTransferFrom_2442": {
									"entryPoint": 3210,
									"id": 2442,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@setApprovalForAll_2148": {
									"entryPoint": 3082,
									"id": 2148,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@setDataURI_1458": {
									"entryPoint": 1595,
									"id": 1458,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setNameSymbol_1485": {
									"entryPoint": 2873,
									"id": 1485,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@setTokenURI_1470": {
									"entryPoint": 4649,
									"id": 1470,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setWhitelist_2015": {
									"entryPoint": 2925,
									"id": 2015,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@symbol_1906": {
									"entryPoint": 3069,
									"id": 1906,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@toString_67": {
									"entryPoint": 5377,
									"id": 67,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@tokenURI_1722": {
									"entryPoint": 3405,
									"id": 1722,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@totalSupply_1912": {
									"entryPoint": null,
									"id": 1912,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferFrom_2338": {
									"entryPoint": 1653,
									"id": 2338,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@transferOwnership_1805": {
									"entryPoint": 4716,
									"id": 1805,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transfer_2356": {
									"entryPoint": 3190,
									"id": 2356,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@whitelist_1960": {
									"entryPoint": null,
									"id": 1960,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_address": {
									"entryPoint": 6415,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_string": {
									"entryPoint": 6502,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 6924,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 7106,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 6704,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_calldata_ptr": {
									"entryPoint": 6951,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 6864,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 6438,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4_fromMemory": {
									"entryPoint": 7572,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptr": {
									"entryPoint": 6643,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr": {
									"entryPoint": 6764,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 6390,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 8144,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_string_memory_ptr_t_stringliteral_854f884486bac1c129d284ef0dc887ee8e77308cd46a54222bf4afc46d6dcf9a__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 7902,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_string_storage_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 7698,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_stringliteral_7196ac4a970ec79361a69477bc1a540e85d3935600f7f1445303dbc04fc044ce_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 8182,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_stringliteral_947ee3b345bbae8b47ca548e58fd3eb9fc264e3488d72aeca69c8f1f89149b7a_t_string_memory_ptr__to_t_bytes27_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 8275,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_stringliteral_fe9d4c51812073cc5e8ec967a205a059f799b9890a5eda0866690d8d8786f686_t_string_memory_ptr__to_t_bytes23_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 7833,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_uint256__to_t_uint256__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_calldata_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 7614,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6339,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 8587,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_helper": {
									"entryPoint": 8344,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"checked_exp_t_uint256_t_uint8": {
									"entryPoint": 8572,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_unsigned": {
									"entryPoint": 8411,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 7509,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_string_storage": {
									"entryPoint": 7215,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 7295,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 6303,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 7157,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 7487,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x31": {
									"entryPoint": 7550,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 7528,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 6480,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:16273:5",
										"nodeType": "YulBlock",
										"src": "0:16273:5",
										"statements": [
											{
												"nativeSrc": "6:3:5",
												"nodeType": "YulBlock",
												"src": "6:3:5",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "80:184:5",
													"nodeType": "YulBlock",
													"src": "80:184:5",
													"statements": [
														{
															"nativeSrc": "90:10:5",
															"nodeType": "YulVariableDeclaration",
															"src": "90:10:5",
															"value": {
																"kind": "number",
																"nativeSrc": "99:1:5",
																"nodeType": "YulLiteral",
																"src": "99:1:5",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "94:1:5",
																	"nodeType": "YulTypedName",
																	"src": "94:1:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "159:63:5",
																"nodeType": "YulBlock",
																"src": "159:63:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nativeSrc": "184:3:5",
																							"nodeType": "YulIdentifier",
																							"src": "184:3:5"
																						},
																						{
																							"name": "i",
																							"nativeSrc": "189:1:5",
																							"nodeType": "YulIdentifier",
																							"src": "189:1:5"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "180:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "180:3:5"
																					},
																					"nativeSrc": "180:11:5",
																					"nodeType": "YulFunctionCall",
																					"src": "180:11:5"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nativeSrc": "203:3:5",
																									"nodeType": "YulIdentifier",
																									"src": "203:3:5"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "208:1:5",
																									"nodeType": "YulIdentifier",
																									"src": "208:1:5"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "199:3:5",
																								"nodeType": "YulIdentifier",
																								"src": "199:3:5"
																							},
																							"nativeSrc": "199:11:5",
																							"nodeType": "YulFunctionCall",
																							"src": "199:11:5"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "193:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "193:5:5"
																					},
																					"nativeSrc": "193:18:5",
																					"nodeType": "YulFunctionCall",
																					"src": "193:18:5"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "173:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "173:6:5"
																			},
																			"nativeSrc": "173:39:5",
																			"nodeType": "YulFunctionCall",
																			"src": "173:39:5"
																		},
																		"nativeSrc": "173:39:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "173:39:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "120:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "120:1:5"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "123:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "123:6:5"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "117:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "117:2:5"
																},
																"nativeSrc": "117:13:5",
																"nodeType": "YulFunctionCall",
																"src": "117:13:5"
															},
															"nativeSrc": "109:113:5",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "131:19:5",
																"nodeType": "YulBlock",
																"src": "131:19:5",
																"statements": [
																	{
																		"nativeSrc": "133:15:5",
																		"nodeType": "YulAssignment",
																		"src": "133:15:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "142:1:5",
																					"nodeType": "YulIdentifier",
																					"src": "142:1:5"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "145:2:5",
																					"nodeType": "YulLiteral",
																					"src": "145:2:5",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "138:3:5",
																				"nodeType": "YulIdentifier",
																				"src": "138:3:5"
																			},
																			"nativeSrc": "138:10:5",
																			"nodeType": "YulFunctionCall",
																			"src": "138:10:5"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "133:1:5",
																				"nodeType": "YulIdentifier",
																				"src": "133:1:5"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "113:3:5",
																"nodeType": "YulBlock",
																"src": "113:3:5",
																"statements": []
															},
															"src": "109:113:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "242:3:5",
																				"nodeType": "YulIdentifier",
																				"src": "242:3:5"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "247:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "247:6:5"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "238:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "238:3:5"
																		},
																		"nativeSrc": "238:16:5",
																		"nodeType": "YulFunctionCall",
																		"src": "238:16:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "256:1:5",
																		"nodeType": "YulLiteral",
																		"src": "256:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "231:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "231:6:5"
																},
																"nativeSrc": "231:27:5",
																"nodeType": "YulFunctionCall",
																"src": "231:27:5"
															},
															"nativeSrc": "231:27:5",
															"nodeType": "YulExpressionStatement",
															"src": "231:27:5"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "14:250:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "58:3:5",
														"nodeType": "YulTypedName",
														"src": "58:3:5",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "63:3:5",
														"nodeType": "YulTypedName",
														"src": "63:3:5",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "68:6:5",
														"nodeType": "YulTypedName",
														"src": "68:6:5",
														"type": ""
													}
												],
												"src": "14:250:5"
											},
											{
												"body": {
													"nativeSrc": "390:275:5",
													"nodeType": "YulBlock",
													"src": "390:275:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "407:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "407:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "418:2:5",
																		"nodeType": "YulLiteral",
																		"src": "418:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "400:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "400:6:5"
																},
																"nativeSrc": "400:21:5",
																"nodeType": "YulFunctionCall",
																"src": "400:21:5"
															},
															"nativeSrc": "400:21:5",
															"nodeType": "YulExpressionStatement",
															"src": "400:21:5"
														},
														{
															"nativeSrc": "430:27:5",
															"nodeType": "YulVariableDeclaration",
															"src": "430:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "450:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "450:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "444:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "444:5:5"
																},
																"nativeSrc": "444:13:5",
																"nodeType": "YulFunctionCall",
																"src": "444:13:5"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "434:6:5",
																	"nodeType": "YulTypedName",
																	"src": "434:6:5",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "477:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "477:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "488:2:5",
																				"nodeType": "YulLiteral",
																				"src": "488:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "473:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "473:3:5"
																		},
																		"nativeSrc": "473:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "473:18:5"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "493:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "493:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "466:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "466:6:5"
																},
																"nativeSrc": "466:34:5",
																"nodeType": "YulFunctionCall",
																"src": "466:34:5"
															},
															"nativeSrc": "466:34:5",
															"nodeType": "YulExpressionStatement",
															"src": "466:34:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "548:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "548:6:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "556:2:5",
																				"nodeType": "YulLiteral",
																				"src": "556:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "544:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "544:3:5"
																		},
																		"nativeSrc": "544:15:5",
																		"nodeType": "YulFunctionCall",
																		"src": "544:15:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "565:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "565:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "576:2:5",
																				"nodeType": "YulLiteral",
																				"src": "576:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "561:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "561:3:5"
																		},
																		"nativeSrc": "561:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "561:18:5"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "581:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "581:6:5"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "509:34:5",
																	"nodeType": "YulIdentifier",
																	"src": "509:34:5"
																},
																"nativeSrc": "509:79:5",
																"nodeType": "YulFunctionCall",
																"src": "509:79:5"
															},
															"nativeSrc": "509:79:5",
															"nodeType": "YulExpressionStatement",
															"src": "509:79:5"
														},
														{
															"nativeSrc": "597:62:5",
															"nodeType": "YulAssignment",
															"src": "597:62:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "613:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "613:9:5"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nativeSrc": "632:6:5",
																								"nodeType": "YulIdentifier",
																								"src": "632:6:5"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "640:2:5",
																								"nodeType": "YulLiteral",
																								"src": "640:2:5",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "628:3:5",
																							"nodeType": "YulIdentifier",
																							"src": "628:3:5"
																						},
																						"nativeSrc": "628:15:5",
																						"nodeType": "YulFunctionCall",
																						"src": "628:15:5"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "649:2:5",
																								"nodeType": "YulLiteral",
																								"src": "649:2:5",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nativeSrc": "645:3:5",
																							"nodeType": "YulIdentifier",
																							"src": "645:3:5"
																						},
																						"nativeSrc": "645:7:5",
																						"nodeType": "YulFunctionCall",
																						"src": "645:7:5"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "624:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "624:3:5"
																				},
																				"nativeSrc": "624:29:5",
																				"nodeType": "YulFunctionCall",
																				"src": "624:29:5"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "609:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "609:3:5"
																		},
																		"nativeSrc": "609:45:5",
																		"nodeType": "YulFunctionCall",
																		"src": "609:45:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "656:2:5",
																		"nodeType": "YulLiteral",
																		"src": "656:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "605:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "605:3:5"
																},
																"nativeSrc": "605:54:5",
																"nodeType": "YulFunctionCall",
																"src": "605:54:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "597:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "597:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "269:396:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "359:9:5",
														"nodeType": "YulTypedName",
														"src": "359:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "370:6:5",
														"nodeType": "YulTypedName",
														"src": "370:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "381:4:5",
														"nodeType": "YulTypedName",
														"src": "381:4:5",
														"type": ""
													}
												],
												"src": "269:396:5"
											},
											{
												"body": {
													"nativeSrc": "740:110:5",
													"nodeType": "YulBlock",
													"src": "740:110:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "786:16:5",
																"nodeType": "YulBlock",
																"src": "786:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "795:1:5",
																					"nodeType": "YulLiteral",
																					"src": "795:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "798:1:5",
																					"nodeType": "YulLiteral",
																					"src": "798:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "788:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "788:6:5"
																			},
																			"nativeSrc": "788:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "788:12:5"
																		},
																		"nativeSrc": "788:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "788:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "761:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "761:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "770:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "770:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "757:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "757:3:5"
																		},
																		"nativeSrc": "757:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "757:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "782:2:5",
																		"nodeType": "YulLiteral",
																		"src": "782:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "753:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "753:3:5"
																},
																"nativeSrc": "753:32:5",
																"nodeType": "YulFunctionCall",
																"src": "753:32:5"
															},
															"nativeSrc": "750:52:5",
															"nodeType": "YulIf",
															"src": "750:52:5"
														},
														{
															"nativeSrc": "811:33:5",
															"nodeType": "YulAssignment",
															"src": "811:33:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "834:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "834:9:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "821:12:5",
																	"nodeType": "YulIdentifier",
																	"src": "821:12:5"
																},
																"nativeSrc": "821:23:5",
																"nodeType": "YulFunctionCall",
																"src": "821:23:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "811:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "811:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "670:180:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "706:9:5",
														"nodeType": "YulTypedName",
														"src": "706:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "717:7:5",
														"nodeType": "YulTypedName",
														"src": "717:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "729:6:5",
														"nodeType": "YulTypedName",
														"src": "729:6:5",
														"type": ""
													}
												],
												"src": "670:180:5"
											},
											{
												"body": {
													"nativeSrc": "956:102:5",
													"nodeType": "YulBlock",
													"src": "956:102:5",
													"statements": [
														{
															"nativeSrc": "966:26:5",
															"nodeType": "YulAssignment",
															"src": "966:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "978:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "978:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "989:2:5",
																		"nodeType": "YulLiteral",
																		"src": "989:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "974:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "974:3:5"
																},
																"nativeSrc": "974:18:5",
																"nodeType": "YulFunctionCall",
																"src": "974:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "966:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "966:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1008:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "1008:9:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "1023:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "1023:6:5"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "1039:3:5",
																								"nodeType": "YulLiteral",
																								"src": "1039:3:5",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1044:1:5",
																								"nodeType": "YulLiteral",
																								"src": "1044:1:5",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "1035:3:5",
																							"nodeType": "YulIdentifier",
																							"src": "1035:3:5"
																						},
																						"nativeSrc": "1035:11:5",
																						"nodeType": "YulFunctionCall",
																						"src": "1035:11:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1048:1:5",
																						"nodeType": "YulLiteral",
																						"src": "1048:1:5",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "1031:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "1031:3:5"
																				},
																				"nativeSrc": "1031:19:5",
																				"nodeType": "YulFunctionCall",
																				"src": "1031:19:5"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1019:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1019:3:5"
																		},
																		"nativeSrc": "1019:32:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1019:32:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1001:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1001:6:5"
																},
																"nativeSrc": "1001:51:5",
																"nodeType": "YulFunctionCall",
																"src": "1001:51:5"
															},
															"nativeSrc": "1001:51:5",
															"nodeType": "YulExpressionStatement",
															"src": "1001:51:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "855:203:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "925:9:5",
														"nodeType": "YulTypedName",
														"src": "925:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "936:6:5",
														"nodeType": "YulTypedName",
														"src": "936:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "947:4:5",
														"nodeType": "YulTypedName",
														"src": "947:4:5",
														"type": ""
													}
												],
												"src": "855:203:5"
											},
											{
												"body": {
													"nativeSrc": "1112:124:5",
													"nodeType": "YulBlock",
													"src": "1112:124:5",
													"statements": [
														{
															"nativeSrc": "1122:29:5",
															"nodeType": "YulAssignment",
															"src": "1122:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1144:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "1144:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1131:12:5",
																	"nodeType": "YulIdentifier",
																	"src": "1131:12:5"
																},
																"nativeSrc": "1131:20:5",
																"nodeType": "YulFunctionCall",
																"src": "1131:20:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1122:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "1122:5:5"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1214:16:5",
																"nodeType": "YulBlock",
																"src": "1214:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1223:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1223:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1226:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1226:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1216:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "1216:6:5"
																			},
																			"nativeSrc": "1216:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "1216:12:5"
																		},
																		"nativeSrc": "1216:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "1216:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1173:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "1173:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1184:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "1184:5:5"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "1199:3:5",
																										"nodeType": "YulLiteral",
																										"src": "1199:3:5",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "1204:1:5",
																										"nodeType": "YulLiteral",
																										"src": "1204:1:5",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "1195:3:5",
																									"nodeType": "YulIdentifier",
																									"src": "1195:3:5"
																								},
																								"nativeSrc": "1195:11:5",
																								"nodeType": "YulFunctionCall",
																								"src": "1195:11:5"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1208:1:5",
																								"nodeType": "YulLiteral",
																								"src": "1208:1:5",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "1191:3:5",
																							"nodeType": "YulIdentifier",
																							"src": "1191:3:5"
																						},
																						"nativeSrc": "1191:19:5",
																						"nodeType": "YulFunctionCall",
																						"src": "1191:19:5"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "1180:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "1180:3:5"
																				},
																				"nativeSrc": "1180:31:5",
																				"nodeType": "YulFunctionCall",
																				"src": "1180:31:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1170:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "1170:2:5"
																		},
																		"nativeSrc": "1170:42:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1170:42:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1163:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1163:6:5"
																},
																"nativeSrc": "1163:50:5",
																"nodeType": "YulFunctionCall",
																"src": "1163:50:5"
															},
															"nativeSrc": "1160:70:5",
															"nodeType": "YulIf",
															"src": "1160:70:5"
														}
													]
												},
												"name": "abi_decode_address",
												"nativeSrc": "1063:173:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1091:6:5",
														"nodeType": "YulTypedName",
														"src": "1091:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1102:5:5",
														"nodeType": "YulTypedName",
														"src": "1102:5:5",
														"type": ""
													}
												],
												"src": "1063:173:5"
											},
											{
												"body": {
													"nativeSrc": "1328:167:5",
													"nodeType": "YulBlock",
													"src": "1328:167:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "1374:16:5",
																"nodeType": "YulBlock",
																"src": "1374:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1383:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1383:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1386:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1386:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1376:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "1376:6:5"
																			},
																			"nativeSrc": "1376:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "1376:12:5"
																		},
																		"nativeSrc": "1376:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "1376:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1349:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "1349:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1358:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "1358:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1345:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1345:3:5"
																		},
																		"nativeSrc": "1345:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1345:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1370:2:5",
																		"nodeType": "YulLiteral",
																		"src": "1370:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1341:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "1341:3:5"
																},
																"nativeSrc": "1341:32:5",
																"nodeType": "YulFunctionCall",
																"src": "1341:32:5"
															},
															"nativeSrc": "1338:52:5",
															"nodeType": "YulIf",
															"src": "1338:52:5"
														},
														{
															"nativeSrc": "1399:39:5",
															"nodeType": "YulAssignment",
															"src": "1399:39:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1428:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "1428:9:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1409:18:5",
																	"nodeType": "YulIdentifier",
																	"src": "1409:18:5"
																},
																"nativeSrc": "1409:29:5",
																"nodeType": "YulFunctionCall",
																"src": "1409:29:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1399:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1399:6:5"
																}
															]
														},
														{
															"nativeSrc": "1447:42:5",
															"nodeType": "YulAssignment",
															"src": "1447:42:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1474:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "1474:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1485:2:5",
																				"nodeType": "YulLiteral",
																				"src": "1485:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1470:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1470:3:5"
																		},
																		"nativeSrc": "1470:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1470:18:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1457:12:5",
																	"nodeType": "YulIdentifier",
																	"src": "1457:12:5"
																},
																"nativeSrc": "1457:32:5",
																"nodeType": "YulFunctionCall",
																"src": "1457:32:5"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1447:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1447:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "1241:254:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1286:9:5",
														"nodeType": "YulTypedName",
														"src": "1286:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1297:7:5",
														"nodeType": "YulTypedName",
														"src": "1297:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1309:6:5",
														"nodeType": "YulTypedName",
														"src": "1309:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1317:6:5",
														"nodeType": "YulTypedName",
														"src": "1317:6:5",
														"type": ""
													}
												],
												"src": "1241:254:5"
											},
											{
												"body": {
													"nativeSrc": "1595:92:5",
													"nodeType": "YulBlock",
													"src": "1595:92:5",
													"statements": [
														{
															"nativeSrc": "1605:26:5",
															"nodeType": "YulAssignment",
															"src": "1605:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1617:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "1617:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1628:2:5",
																		"nodeType": "YulLiteral",
																		"src": "1628:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1613:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "1613:3:5"
																},
																"nativeSrc": "1613:18:5",
																"nodeType": "YulFunctionCall",
																"src": "1613:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1605:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "1605:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1647:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "1647:9:5"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nativeSrc": "1672:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "1672:6:5"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "1665:6:5",
																					"nodeType": "YulIdentifier",
																					"src": "1665:6:5"
																				},
																				"nativeSrc": "1665:14:5",
																				"nodeType": "YulFunctionCall",
																				"src": "1665:14:5"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1658:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "1658:6:5"
																		},
																		"nativeSrc": "1658:22:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1658:22:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1640:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1640:6:5"
																},
																"nativeSrc": "1640:41:5",
																"nodeType": "YulFunctionCall",
																"src": "1640:41:5"
															},
															"nativeSrc": "1640:41:5",
															"nodeType": "YulExpressionStatement",
															"src": "1640:41:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "1500:187:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1564:9:5",
														"nodeType": "YulTypedName",
														"src": "1564:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1575:6:5",
														"nodeType": "YulTypedName",
														"src": "1575:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1586:4:5",
														"nodeType": "YulTypedName",
														"src": "1586:4:5",
														"type": ""
													}
												],
												"src": "1500:187:5"
											},
											{
												"body": {
													"nativeSrc": "1793:76:5",
													"nodeType": "YulBlock",
													"src": "1793:76:5",
													"statements": [
														{
															"nativeSrc": "1803:26:5",
															"nodeType": "YulAssignment",
															"src": "1803:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1815:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "1815:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1826:2:5",
																		"nodeType": "YulLiteral",
																		"src": "1826:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1811:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "1811:3:5"
																},
																"nativeSrc": "1811:18:5",
																"nodeType": "YulFunctionCall",
																"src": "1811:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1803:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "1803:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1845:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "1845:9:5"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "1856:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "1856:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1838:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1838:6:5"
																},
																"nativeSrc": "1838:25:5",
																"nodeType": "YulFunctionCall",
																"src": "1838:25:5"
															},
															"nativeSrc": "1838:25:5",
															"nodeType": "YulExpressionStatement",
															"src": "1838:25:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "1692:177:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1762:9:5",
														"nodeType": "YulTypedName",
														"src": "1762:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1773:6:5",
														"nodeType": "YulTypedName",
														"src": "1773:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1784:4:5",
														"nodeType": "YulTypedName",
														"src": "1784:4:5",
														"type": ""
													}
												],
												"src": "1692:177:5"
											},
											{
												"body": {
													"nativeSrc": "1906:95:5",
													"nodeType": "YulBlock",
													"src": "1906:95:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1923:1:5",
																		"nodeType": "YulLiteral",
																		"src": "1923:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "1930:3:5",
																				"nodeType": "YulLiteral",
																				"src": "1930:3:5",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1935:10:5",
																				"nodeType": "YulLiteral",
																				"src": "1935:10:5",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "1926:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1926:3:5"
																		},
																		"nativeSrc": "1926:20:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1926:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1916:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1916:6:5"
																},
																"nativeSrc": "1916:31:5",
																"nodeType": "YulFunctionCall",
																"src": "1916:31:5"
															},
															"nativeSrc": "1916:31:5",
															"nodeType": "YulExpressionStatement",
															"src": "1916:31:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1963:1:5",
																		"nodeType": "YulLiteral",
																		"src": "1963:1:5",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1966:4:5",
																		"nodeType": "YulLiteral",
																		"src": "1966:4:5",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1956:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1956:6:5"
																},
																"nativeSrc": "1956:15:5",
																"nodeType": "YulFunctionCall",
																"src": "1956:15:5"
															},
															"nativeSrc": "1956:15:5",
															"nodeType": "YulExpressionStatement",
															"src": "1956:15:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1987:1:5",
																		"nodeType": "YulLiteral",
																		"src": "1987:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1990:4:5",
																		"nodeType": "YulLiteral",
																		"src": "1990:4:5",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1980:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1980:6:5"
																},
																"nativeSrc": "1980:15:5",
																"nodeType": "YulFunctionCall",
																"src": "1980:15:5"
															},
															"nativeSrc": "1980:15:5",
															"nodeType": "YulExpressionStatement",
															"src": "1980:15:5"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "1874:127:5",
												"nodeType": "YulFunctionDefinition",
												"src": "1874:127:5"
											},
											{
												"body": {
													"nativeSrc": "2059:666:5",
													"nodeType": "YulBlock",
													"src": "2059:666:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "2108:16:5",
																"nodeType": "YulBlock",
																"src": "2108:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2117:1:5",
																					"nodeType": "YulLiteral",
																					"src": "2117:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2120:1:5",
																					"nodeType": "YulLiteral",
																					"src": "2120:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2110:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "2110:6:5"
																			},
																			"nativeSrc": "2110:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "2110:12:5"
																		},
																		"nativeSrc": "2110:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "2110:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "2087:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "2087:6:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2095:4:5",
																						"nodeType": "YulLiteral",
																						"src": "2095:4:5",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2083:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "2083:3:5"
																				},
																				"nativeSrc": "2083:17:5",
																				"nodeType": "YulFunctionCall",
																				"src": "2083:17:5"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "2102:3:5",
																				"nodeType": "YulIdentifier",
																				"src": "2102:3:5"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "2079:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "2079:3:5"
																		},
																		"nativeSrc": "2079:27:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2079:27:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2072:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "2072:6:5"
																},
																"nativeSrc": "2072:35:5",
																"nodeType": "YulFunctionCall",
																"src": "2072:35:5"
															},
															"nativeSrc": "2069:55:5",
															"nodeType": "YulIf",
															"src": "2069:55:5"
														},
														{
															"nativeSrc": "2133:30:5",
															"nodeType": "YulVariableDeclaration",
															"src": "2133:30:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2156:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "2156:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2143:12:5",
																	"nodeType": "YulIdentifier",
																	"src": "2143:12:5"
																},
																"nativeSrc": "2143:20:5",
																"nodeType": "YulFunctionCall",
																"src": "2143:20:5"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "2137:2:5",
																	"nodeType": "YulTypedName",
																	"src": "2137:2:5",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2172:28:5",
															"nodeType": "YulVariableDeclaration",
															"src": "2172:28:5",
															"value": {
																"kind": "number",
																"nativeSrc": "2182:18:5",
																"nodeType": "YulLiteral",
																"src": "2182:18:5",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_2",
																	"nativeSrc": "2176:2:5",
																	"nodeType": "YulTypedName",
																	"src": "2176:2:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2223:22:5",
																"nodeType": "YulBlock",
																"src": "2223:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "2225:16:5",
																				"nodeType": "YulIdentifier",
																				"src": "2225:16:5"
																			},
																			"nativeSrc": "2225:18:5",
																			"nodeType": "YulFunctionCall",
																			"src": "2225:18:5"
																		},
																		"nativeSrc": "2225:18:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "2225:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_1",
																		"nativeSrc": "2215:2:5",
																		"nodeType": "YulIdentifier",
																		"src": "2215:2:5"
																	},
																	{
																		"name": "_2",
																		"nativeSrc": "2219:2:5",
																		"nodeType": "YulIdentifier",
																		"src": "2219:2:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2212:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "2212:2:5"
																},
																"nativeSrc": "2212:10:5",
																"nodeType": "YulFunctionCall",
																"src": "2212:10:5"
															},
															"nativeSrc": "2209:36:5",
															"nodeType": "YulIf",
															"src": "2209:36:5"
														},
														{
															"nativeSrc": "2254:17:5",
															"nodeType": "YulVariableDeclaration",
															"src": "2254:17:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2268:2:5",
																		"nodeType": "YulLiteral",
																		"src": "2268:2:5",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "2264:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "2264:3:5"
																},
																"nativeSrc": "2264:7:5",
																"nodeType": "YulFunctionCall",
																"src": "2264:7:5"
															},
															"variables": [
																{
																	"name": "_3",
																	"nativeSrc": "2258:2:5",
																	"nodeType": "YulTypedName",
																	"src": "2258:2:5",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2280:23:5",
															"nodeType": "YulVariableDeclaration",
															"src": "2280:23:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2300:2:5",
																		"nodeType": "YulLiteral",
																		"src": "2300:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2294:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "2294:5:5"
																},
																"nativeSrc": "2294:9:5",
																"nodeType": "YulFunctionCall",
																"src": "2294:9:5"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nativeSrc": "2284:6:5",
																	"nodeType": "YulTypedName",
																	"src": "2284:6:5",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2312:71:5",
															"nodeType": "YulVariableDeclaration",
															"src": "2312:71:5",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "2334:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "2334:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_1",
																										"nativeSrc": "2358:2:5",
																										"nodeType": "YulIdentifier",
																										"src": "2358:2:5"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "2362:4:5",
																										"nodeType": "YulLiteral",
																										"src": "2362:4:5",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "2354:3:5",
																									"nodeType": "YulIdentifier",
																									"src": "2354:3:5"
																								},
																								"nativeSrc": "2354:13:5",
																								"nodeType": "YulFunctionCall",
																								"src": "2354:13:5"
																							},
																							{
																								"name": "_3",
																								"nativeSrc": "2369:2:5",
																								"nodeType": "YulIdentifier",
																								"src": "2369:2:5"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nativeSrc": "2350:3:5",
																							"nodeType": "YulIdentifier",
																							"src": "2350:3:5"
																						},
																						"nativeSrc": "2350:22:5",
																						"nodeType": "YulFunctionCall",
																						"src": "2350:22:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2374:2:5",
																						"nodeType": "YulLiteral",
																						"src": "2374:2:5",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2346:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "2346:3:5"
																				},
																				"nativeSrc": "2346:31:5",
																				"nodeType": "YulFunctionCall",
																				"src": "2346:31:5"
																			},
																			{
																				"name": "_3",
																				"nativeSrc": "2379:2:5",
																				"nodeType": "YulIdentifier",
																				"src": "2379:2:5"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2342:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "2342:3:5"
																		},
																		"nativeSrc": "2342:40:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2342:40:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2330:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "2330:3:5"
																},
																"nativeSrc": "2330:53:5",
																"nodeType": "YulFunctionCall",
																"src": "2330:53:5"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "2316:10:5",
																	"nodeType": "YulTypedName",
																	"src": "2316:10:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2442:22:5",
																"nodeType": "YulBlock",
																"src": "2442:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "2444:16:5",
																				"nodeType": "YulIdentifier",
																				"src": "2444:16:5"
																			},
																			"nativeSrc": "2444:18:5",
																			"nodeType": "YulFunctionCall",
																			"src": "2444:18:5"
																		},
																		"nativeSrc": "2444:18:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "2444:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "2401:10:5",
																				"nodeType": "YulIdentifier",
																				"src": "2401:10:5"
																			},
																			{
																				"name": "_2",
																				"nativeSrc": "2413:2:5",
																				"nodeType": "YulIdentifier",
																				"src": "2413:2:5"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "2398:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "2398:2:5"
																		},
																		"nativeSrc": "2398:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2398:18:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "2421:10:5",
																				"nodeType": "YulIdentifier",
																				"src": "2421:10:5"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "2433:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "2433:6:5"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "2418:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "2418:2:5"
																		},
																		"nativeSrc": "2418:22:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2418:22:5"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "2395:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "2395:2:5"
																},
																"nativeSrc": "2395:46:5",
																"nodeType": "YulFunctionCall",
																"src": "2395:46:5"
															},
															"nativeSrc": "2392:72:5",
															"nodeType": "YulIf",
															"src": "2392:72:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2480:2:5",
																		"nodeType": "YulLiteral",
																		"src": "2480:2:5",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "2484:10:5",
																		"nodeType": "YulIdentifier",
																		"src": "2484:10:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2473:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "2473:6:5"
																},
																"nativeSrc": "2473:22:5",
																"nodeType": "YulFunctionCall",
																"src": "2473:22:5"
															},
															"nativeSrc": "2473:22:5",
															"nodeType": "YulExpressionStatement",
															"src": "2473:22:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "2511:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "2511:6:5"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "2519:2:5",
																		"nodeType": "YulIdentifier",
																		"src": "2519:2:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2504:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "2504:6:5"
																},
																"nativeSrc": "2504:18:5",
																"nodeType": "YulFunctionCall",
																"src": "2504:18:5"
															},
															"nativeSrc": "2504:18:5",
															"nodeType": "YulExpressionStatement",
															"src": "2504:18:5"
														},
														{
															"body": {
																"nativeSrc": "2570:16:5",
																"nodeType": "YulBlock",
																"src": "2570:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2579:1:5",
																					"nodeType": "YulLiteral",
																					"src": "2579:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2582:1:5",
																					"nodeType": "YulLiteral",
																					"src": "2582:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2572:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "2572:6:5"
																			},
																			"nativeSrc": "2572:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "2572:12:5"
																		},
																		"nativeSrc": "2572:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "2572:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "2545:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "2545:6:5"
																					},
																					{
																						"name": "_1",
																						"nativeSrc": "2553:2:5",
																						"nodeType": "YulIdentifier",
																						"src": "2553:2:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2541:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "2541:3:5"
																				},
																				"nativeSrc": "2541:15:5",
																				"nodeType": "YulFunctionCall",
																				"src": "2541:15:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2558:4:5",
																				"nodeType": "YulLiteral",
																				"src": "2558:4:5",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2537:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "2537:3:5"
																		},
																		"nativeSrc": "2537:26:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2537:26:5"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2565:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "2565:3:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2534:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "2534:2:5"
																},
																"nativeSrc": "2534:35:5",
																"nodeType": "YulFunctionCall",
																"src": "2534:35:5"
															},
															"nativeSrc": "2531:55:5",
															"nodeType": "YulIf",
															"src": "2531:55:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "2612:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "2612:6:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2620:4:5",
																				"nodeType": "YulLiteral",
																				"src": "2620:4:5",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2608:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "2608:3:5"
																		},
																		"nativeSrc": "2608:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2608:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "2631:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "2631:6:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2639:4:5",
																				"nodeType": "YulLiteral",
																				"src": "2639:4:5",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2627:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "2627:3:5"
																		},
																		"nativeSrc": "2627:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2627:17:5"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "2646:2:5",
																		"nodeType": "YulIdentifier",
																		"src": "2646:2:5"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nativeSrc": "2595:12:5",
																	"nodeType": "YulIdentifier",
																	"src": "2595:12:5"
																},
																"nativeSrc": "2595:54:5",
																"nodeType": "YulFunctionCall",
																"src": "2595:54:5"
															},
															"nativeSrc": "2595:54:5",
															"nodeType": "YulExpressionStatement",
															"src": "2595:54:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nativeSrc": "2673:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "2673:6:5"
																					},
																					{
																						"name": "_1",
																						"nativeSrc": "2681:2:5",
																						"nodeType": "YulIdentifier",
																						"src": "2681:2:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2669:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "2669:3:5"
																				},
																				"nativeSrc": "2669:15:5",
																				"nodeType": "YulFunctionCall",
																				"src": "2669:15:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2686:4:5",
																				"nodeType": "YulLiteral",
																				"src": "2686:4:5",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2665:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "2665:3:5"
																		},
																		"nativeSrc": "2665:26:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2665:26:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2693:1:5",
																		"nodeType": "YulLiteral",
																		"src": "2693:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2658:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "2658:6:5"
																},
																"nativeSrc": "2658:37:5",
																"nodeType": "YulFunctionCall",
																"src": "2658:37:5"
															},
															"nativeSrc": "2658:37:5",
															"nodeType": "YulExpressionStatement",
															"src": "2658:37:5"
														},
														{
															"nativeSrc": "2704:15:5",
															"nodeType": "YulAssignment",
															"src": "2704:15:5",
															"value": {
																"name": "memPtr",
																"nativeSrc": "2713:6:5",
																"nodeType": "YulIdentifier",
																"src": "2713:6:5"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "2704:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "2704:5:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_string",
												"nativeSrc": "2006:719:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2033:6:5",
														"nodeType": "YulTypedName",
														"src": "2033:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2041:3:5",
														"nodeType": "YulTypedName",
														"src": "2041:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "2049:5:5",
														"nodeType": "YulTypedName",
														"src": "2049:5:5",
														"type": ""
													}
												],
												"src": "2006:719:5"
											},
											{
												"body": {
													"nativeSrc": "2810:242:5",
													"nodeType": "YulBlock",
													"src": "2810:242:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "2856:16:5",
																"nodeType": "YulBlock",
																"src": "2856:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2865:1:5",
																					"nodeType": "YulLiteral",
																					"src": "2865:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2868:1:5",
																					"nodeType": "YulLiteral",
																					"src": "2868:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2858:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "2858:6:5"
																			},
																			"nativeSrc": "2858:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "2858:12:5"
																		},
																		"nativeSrc": "2858:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "2858:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2831:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "2831:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2840:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "2840:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2827:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "2827:3:5"
																		},
																		"nativeSrc": "2827:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2827:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2852:2:5",
																		"nodeType": "YulLiteral",
																		"src": "2852:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2823:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "2823:3:5"
																},
																"nativeSrc": "2823:32:5",
																"nodeType": "YulFunctionCall",
																"src": "2823:32:5"
															},
															"nativeSrc": "2820:52:5",
															"nodeType": "YulIf",
															"src": "2820:52:5"
														},
														{
															"nativeSrc": "2881:37:5",
															"nodeType": "YulVariableDeclaration",
															"src": "2881:37:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2908:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "2908:9:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2895:12:5",
																	"nodeType": "YulIdentifier",
																	"src": "2895:12:5"
																},
																"nativeSrc": "2895:23:5",
																"nodeType": "YulFunctionCall",
																"src": "2895:23:5"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "2885:6:5",
																	"nodeType": "YulTypedName",
																	"src": "2885:6:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2961:16:5",
																"nodeType": "YulBlock",
																"src": "2961:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2970:1:5",
																					"nodeType": "YulLiteral",
																					"src": "2970:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2973:1:5",
																					"nodeType": "YulLiteral",
																					"src": "2973:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2963:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "2963:6:5"
																			},
																			"nativeSrc": "2963:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "2963:12:5"
																		},
																		"nativeSrc": "2963:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "2963:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2933:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "2933:6:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2941:18:5",
																		"nodeType": "YulLiteral",
																		"src": "2941:18:5",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2930:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "2930:2:5"
																},
																"nativeSrc": "2930:30:5",
																"nodeType": "YulFunctionCall",
																"src": "2930:30:5"
															},
															"nativeSrc": "2927:50:5",
															"nodeType": "YulIf",
															"src": "2927:50:5"
														},
														{
															"nativeSrc": "2986:60:5",
															"nodeType": "YulAssignment",
															"src": "2986:60:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3018:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "3018:9:5"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "3029:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "3029:6:5"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3014:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "3014:3:5"
																		},
																		"nativeSrc": "3014:22:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3014:22:5"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "3038:7:5",
																		"nodeType": "YulIdentifier",
																		"src": "3038:7:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string",
																	"nativeSrc": "2996:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "2996:17:5"
																},
																"nativeSrc": "2996:50:5",
																"nodeType": "YulFunctionCall",
																"src": "2996:50:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2986:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "2986:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptr",
												"nativeSrc": "2730:322:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2776:9:5",
														"nodeType": "YulTypedName",
														"src": "2776:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2787:7:5",
														"nodeType": "YulTypedName",
														"src": "2787:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2799:6:5",
														"nodeType": "YulTypedName",
														"src": "2799:6:5",
														"type": ""
													}
												],
												"src": "2730:322:5"
											},
											{
												"body": {
													"nativeSrc": "3161:224:5",
													"nodeType": "YulBlock",
													"src": "3161:224:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "3207:16:5",
																"nodeType": "YulBlock",
																"src": "3207:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3216:1:5",
																					"nodeType": "YulLiteral",
																					"src": "3216:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3219:1:5",
																					"nodeType": "YulLiteral",
																					"src": "3219:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3209:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "3209:6:5"
																			},
																			"nativeSrc": "3209:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "3209:12:5"
																		},
																		"nativeSrc": "3209:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "3209:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3182:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "3182:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3191:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "3191:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3178:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "3178:3:5"
																		},
																		"nativeSrc": "3178:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3178:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3203:2:5",
																		"nodeType": "YulLiteral",
																		"src": "3203:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3174:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "3174:3:5"
																},
																"nativeSrc": "3174:32:5",
																"nodeType": "YulFunctionCall",
																"src": "3174:32:5"
															},
															"nativeSrc": "3171:52:5",
															"nodeType": "YulIf",
															"src": "3171:52:5"
														},
														{
															"nativeSrc": "3232:39:5",
															"nodeType": "YulAssignment",
															"src": "3232:39:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3261:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "3261:9:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "3242:18:5",
																	"nodeType": "YulIdentifier",
																	"src": "3242:18:5"
																},
																"nativeSrc": "3242:29:5",
																"nodeType": "YulFunctionCall",
																"src": "3242:29:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "3232:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3232:6:5"
																}
															]
														},
														{
															"nativeSrc": "3280:48:5",
															"nodeType": "YulAssignment",
															"src": "3280:48:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3313:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "3313:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3324:2:5",
																				"nodeType": "YulLiteral",
																				"src": "3324:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3309:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "3309:3:5"
																		},
																		"nativeSrc": "3309:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3309:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "3290:18:5",
																	"nodeType": "YulIdentifier",
																	"src": "3290:18:5"
																},
																"nativeSrc": "3290:38:5",
																"nodeType": "YulFunctionCall",
																"src": "3290:38:5"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "3280:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3280:6:5"
																}
															]
														},
														{
															"nativeSrc": "3337:42:5",
															"nodeType": "YulAssignment",
															"src": "3337:42:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3364:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "3364:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3375:2:5",
																				"nodeType": "YulLiteral",
																				"src": "3375:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3360:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "3360:3:5"
																		},
																		"nativeSrc": "3360:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3360:18:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3347:12:5",
																	"nodeType": "YulIdentifier",
																	"src": "3347:12:5"
																},
																"nativeSrc": "3347:32:5",
																"nodeType": "YulFunctionCall",
																"src": "3347:32:5"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "3337:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3337:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "3057:328:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3111:9:5",
														"nodeType": "YulTypedName",
														"src": "3111:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3122:7:5",
														"nodeType": "YulTypedName",
														"src": "3122:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3134:6:5",
														"nodeType": "YulTypedName",
														"src": "3134:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3142:6:5",
														"nodeType": "YulTypedName",
														"src": "3142:6:5",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3150:6:5",
														"nodeType": "YulTypedName",
														"src": "3150:6:5",
														"type": ""
													}
												],
												"src": "3057:328:5"
											},
											{
												"body": {
													"nativeSrc": "3487:87:5",
													"nodeType": "YulBlock",
													"src": "3487:87:5",
													"statements": [
														{
															"nativeSrc": "3497:26:5",
															"nodeType": "YulAssignment",
															"src": "3497:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3509:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "3509:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3520:2:5",
																		"nodeType": "YulLiteral",
																		"src": "3520:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3505:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "3505:3:5"
																},
																"nativeSrc": "3505:18:5",
																"nodeType": "YulFunctionCall",
																"src": "3505:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3497:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "3497:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3539:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "3539:9:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "3554:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "3554:6:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3562:4:5",
																				"nodeType": "YulLiteral",
																				"src": "3562:4:5",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3550:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "3550:3:5"
																		},
																		"nativeSrc": "3550:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3550:17:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3532:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3532:6:5"
																},
																"nativeSrc": "3532:36:5",
																"nodeType": "YulFunctionCall",
																"src": "3532:36:5"
															},
															"nativeSrc": "3532:36:5",
															"nodeType": "YulExpressionStatement",
															"src": "3532:36:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "3390:184:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3456:9:5",
														"nodeType": "YulTypedName",
														"src": "3456:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3467:6:5",
														"nodeType": "YulTypedName",
														"src": "3467:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3478:4:5",
														"nodeType": "YulTypedName",
														"src": "3478:4:5",
														"type": ""
													}
												],
												"src": "3390:184:5"
											},
											{
												"body": {
													"nativeSrc": "3686:436:5",
													"nodeType": "YulBlock",
													"src": "3686:436:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "3732:16:5",
																"nodeType": "YulBlock",
																"src": "3732:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3741:1:5",
																					"nodeType": "YulLiteral",
																					"src": "3741:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3744:1:5",
																					"nodeType": "YulLiteral",
																					"src": "3744:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3734:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "3734:6:5"
																			},
																			"nativeSrc": "3734:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "3734:12:5"
																		},
																		"nativeSrc": "3734:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "3734:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3707:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "3707:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3716:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "3716:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3703:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "3703:3:5"
																		},
																		"nativeSrc": "3703:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3703:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3728:2:5",
																		"nodeType": "YulLiteral",
																		"src": "3728:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3699:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "3699:3:5"
																},
																"nativeSrc": "3699:32:5",
																"nodeType": "YulFunctionCall",
																"src": "3699:32:5"
															},
															"nativeSrc": "3696:52:5",
															"nodeType": "YulIf",
															"src": "3696:52:5"
														},
														{
															"nativeSrc": "3757:37:5",
															"nodeType": "YulVariableDeclaration",
															"src": "3757:37:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3784:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "3784:9:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3771:12:5",
																	"nodeType": "YulIdentifier",
																	"src": "3771:12:5"
																},
																"nativeSrc": "3771:23:5",
																"nodeType": "YulFunctionCall",
																"src": "3771:23:5"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "3761:6:5",
																	"nodeType": "YulTypedName",
																	"src": "3761:6:5",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3803:28:5",
															"nodeType": "YulVariableDeclaration",
															"src": "3803:28:5",
															"value": {
																"kind": "number",
																"nativeSrc": "3813:18:5",
																"nodeType": "YulLiteral",
																"src": "3813:18:5",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "3807:2:5",
																	"nodeType": "YulTypedName",
																	"src": "3807:2:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3858:16:5",
																"nodeType": "YulBlock",
																"src": "3858:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3867:1:5",
																					"nodeType": "YulLiteral",
																					"src": "3867:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3870:1:5",
																					"nodeType": "YulLiteral",
																					"src": "3870:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3860:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "3860:6:5"
																			},
																			"nativeSrc": "3860:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "3860:12:5"
																		},
																		"nativeSrc": "3860:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "3860:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3846:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "3846:6:5"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "3854:2:5",
																		"nodeType": "YulIdentifier",
																		"src": "3854:2:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3843:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "3843:2:5"
																},
																"nativeSrc": "3843:14:5",
																"nodeType": "YulFunctionCall",
																"src": "3843:14:5"
															},
															"nativeSrc": "3840:34:5",
															"nodeType": "YulIf",
															"src": "3840:34:5"
														},
														{
															"nativeSrc": "3883:60:5",
															"nodeType": "YulAssignment",
															"src": "3883:60:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3915:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "3915:9:5"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "3926:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "3926:6:5"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3911:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "3911:3:5"
																		},
																		"nativeSrc": "3911:22:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3911:22:5"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "3935:7:5",
																		"nodeType": "YulIdentifier",
																		"src": "3935:7:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string",
																	"nativeSrc": "3893:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "3893:17:5"
																},
																"nativeSrc": "3893:50:5",
																"nodeType": "YulFunctionCall",
																"src": "3893:50:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "3883:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3883:6:5"
																}
															]
														},
														{
															"nativeSrc": "3952:48:5",
															"nodeType": "YulVariableDeclaration",
															"src": "3952:48:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3985:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "3985:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3996:2:5",
																				"nodeType": "YulLiteral",
																				"src": "3996:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3981:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "3981:3:5"
																		},
																		"nativeSrc": "3981:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3981:18:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3968:12:5",
																	"nodeType": "YulIdentifier",
																	"src": "3968:12:5"
																},
																"nativeSrc": "3968:32:5",
																"nodeType": "YulFunctionCall",
																"src": "3968:32:5"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nativeSrc": "3956:8:5",
																	"nodeType": "YulTypedName",
																	"src": "3956:8:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4029:16:5",
																"nodeType": "YulBlock",
																"src": "4029:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4038:1:5",
																					"nodeType": "YulLiteral",
																					"src": "4038:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4041:1:5",
																					"nodeType": "YulLiteral",
																					"src": "4041:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4031:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "4031:6:5"
																			},
																			"nativeSrc": "4031:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "4031:12:5"
																		},
																		"nativeSrc": "4031:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "4031:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nativeSrc": "4015:8:5",
																		"nodeType": "YulIdentifier",
																		"src": "4015:8:5"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "4025:2:5",
																		"nodeType": "YulIdentifier",
																		"src": "4025:2:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4012:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "4012:2:5"
																},
																"nativeSrc": "4012:16:5",
																"nodeType": "YulFunctionCall",
																"src": "4012:16:5"
															},
															"nativeSrc": "4009:36:5",
															"nodeType": "YulIf",
															"src": "4009:36:5"
														},
														{
															"nativeSrc": "4054:62:5",
															"nodeType": "YulAssignment",
															"src": "4054:62:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4086:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "4086:9:5"
																			},
																			{
																				"name": "offset_1",
																				"nativeSrc": "4097:8:5",
																				"nodeType": "YulIdentifier",
																				"src": "4097:8:5"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4082:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "4082:3:5"
																		},
																		"nativeSrc": "4082:24:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4082:24:5"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "4108:7:5",
																		"nodeType": "YulIdentifier",
																		"src": "4108:7:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string",
																	"nativeSrc": "4064:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "4064:17:5"
																},
																"nativeSrc": "4064:52:5",
																"nodeType": "YulFunctionCall",
																"src": "4064:52:5"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "4054:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "4054:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr",
												"nativeSrc": "3579:543:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3644:9:5",
														"nodeType": "YulTypedName",
														"src": "3644:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3655:7:5",
														"nodeType": "YulTypedName",
														"src": "3655:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3667:6:5",
														"nodeType": "YulTypedName",
														"src": "3667:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3675:6:5",
														"nodeType": "YulTypedName",
														"src": "3675:6:5",
														"type": ""
													}
												],
												"src": "3579:543:5"
											},
											{
												"body": {
													"nativeSrc": "4211:263:5",
													"nodeType": "YulBlock",
													"src": "4211:263:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "4257:16:5",
																"nodeType": "YulBlock",
																"src": "4257:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4266:1:5",
																					"nodeType": "YulLiteral",
																					"src": "4266:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4269:1:5",
																					"nodeType": "YulLiteral",
																					"src": "4269:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4259:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "4259:6:5"
																			},
																			"nativeSrc": "4259:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "4259:12:5"
																		},
																		"nativeSrc": "4259:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "4259:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4232:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "4232:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4241:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "4241:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4228:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "4228:3:5"
																		},
																		"nativeSrc": "4228:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4228:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4253:2:5",
																		"nodeType": "YulLiteral",
																		"src": "4253:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4224:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "4224:3:5"
																},
																"nativeSrc": "4224:32:5",
																"nodeType": "YulFunctionCall",
																"src": "4224:32:5"
															},
															"nativeSrc": "4221:52:5",
															"nodeType": "YulIf",
															"src": "4221:52:5"
														},
														{
															"nativeSrc": "4282:39:5",
															"nodeType": "YulAssignment",
															"src": "4282:39:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4311:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "4311:9:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "4292:18:5",
																	"nodeType": "YulIdentifier",
																	"src": "4292:18:5"
																},
																"nativeSrc": "4292:29:5",
																"nodeType": "YulFunctionCall",
																"src": "4292:29:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "4282:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "4282:6:5"
																}
															]
														},
														{
															"nativeSrc": "4330:45:5",
															"nodeType": "YulVariableDeclaration",
															"src": "4330:45:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4360:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "4360:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4371:2:5",
																				"nodeType": "YulLiteral",
																				"src": "4371:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4356:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "4356:3:5"
																		},
																		"nativeSrc": "4356:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4356:18:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4343:12:5",
																	"nodeType": "YulIdentifier",
																	"src": "4343:12:5"
																},
																"nativeSrc": "4343:32:5",
																"nodeType": "YulFunctionCall",
																"src": "4343:32:5"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "4334:5:5",
																	"nodeType": "YulTypedName",
																	"src": "4334:5:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4428:16:5",
																"nodeType": "YulBlock",
																"src": "4428:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4437:1:5",
																					"nodeType": "YulLiteral",
																					"src": "4437:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4440:1:5",
																					"nodeType": "YulLiteral",
																					"src": "4440:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4430:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "4430:6:5"
																			},
																			"nativeSrc": "4430:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "4430:12:5"
																		},
																		"nativeSrc": "4430:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "4430:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4397:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "4397:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nativeSrc": "4418:5:5",
																								"nodeType": "YulIdentifier",
																								"src": "4418:5:5"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nativeSrc": "4411:6:5",
																							"nodeType": "YulIdentifier",
																							"src": "4411:6:5"
																						},
																						"nativeSrc": "4411:13:5",
																						"nodeType": "YulFunctionCall",
																						"src": "4411:13:5"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "4404:6:5",
																					"nodeType": "YulIdentifier",
																					"src": "4404:6:5"
																				},
																				"nativeSrc": "4404:21:5",
																				"nodeType": "YulFunctionCall",
																				"src": "4404:21:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "4394:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "4394:2:5"
																		},
																		"nativeSrc": "4394:32:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4394:32:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4387:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "4387:6:5"
																},
																"nativeSrc": "4387:40:5",
																"nodeType": "YulFunctionCall",
																"src": "4387:40:5"
															},
															"nativeSrc": "4384:60:5",
															"nodeType": "YulIf",
															"src": "4384:60:5"
														},
														{
															"nativeSrc": "4453:15:5",
															"nodeType": "YulAssignment",
															"src": "4453:15:5",
															"value": {
																"name": "value",
																"nativeSrc": "4463:5:5",
																"nodeType": "YulIdentifier",
																"src": "4463:5:5"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "4453:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "4453:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nativeSrc": "4127:347:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4169:9:5",
														"nodeType": "YulTypedName",
														"src": "4169:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4180:7:5",
														"nodeType": "YulTypedName",
														"src": "4180:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4192:6:5",
														"nodeType": "YulTypedName",
														"src": "4192:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4200:6:5",
														"nodeType": "YulTypedName",
														"src": "4200:6:5",
														"type": ""
													}
												],
												"src": "4127:347:5"
											},
											{
												"body": {
													"nativeSrc": "4549:116:5",
													"nodeType": "YulBlock",
													"src": "4549:116:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "4595:16:5",
																"nodeType": "YulBlock",
																"src": "4595:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4604:1:5",
																					"nodeType": "YulLiteral",
																					"src": "4604:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4607:1:5",
																					"nodeType": "YulLiteral",
																					"src": "4607:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4597:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "4597:6:5"
																			},
																			"nativeSrc": "4597:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "4597:12:5"
																		},
																		"nativeSrc": "4597:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "4597:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4570:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "4570:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4579:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "4579:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4566:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "4566:3:5"
																		},
																		"nativeSrc": "4566:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4566:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4591:2:5",
																		"nodeType": "YulLiteral",
																		"src": "4591:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4562:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "4562:3:5"
																},
																"nativeSrc": "4562:32:5",
																"nodeType": "YulFunctionCall",
																"src": "4562:32:5"
															},
															"nativeSrc": "4559:52:5",
															"nodeType": "YulIf",
															"src": "4559:52:5"
														},
														{
															"nativeSrc": "4620:39:5",
															"nodeType": "YulAssignment",
															"src": "4620:39:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4649:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "4649:9:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "4630:18:5",
																	"nodeType": "YulIdentifier",
																	"src": "4630:18:5"
																},
																"nativeSrc": "4630:29:5",
																"nodeType": "YulFunctionCall",
																"src": "4630:29:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "4620:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "4620:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "4479:186:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4515:9:5",
														"nodeType": "YulTypedName",
														"src": "4515:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4526:7:5",
														"nodeType": "YulTypedName",
														"src": "4526:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4538:6:5",
														"nodeType": "YulTypedName",
														"src": "4538:6:5",
														"type": ""
													}
												],
												"src": "4479:186:5"
											},
											{
												"body": {
													"nativeSrc": "4810:668:5",
													"nodeType": "YulBlock",
													"src": "4810:668:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "4857:16:5",
																"nodeType": "YulBlock",
																"src": "4857:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4866:1:5",
																					"nodeType": "YulLiteral",
																					"src": "4866:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4869:1:5",
																					"nodeType": "YulLiteral",
																					"src": "4869:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4859:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "4859:6:5"
																			},
																			"nativeSrc": "4859:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "4859:12:5"
																		},
																		"nativeSrc": "4859:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "4859:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4831:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "4831:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4840:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "4840:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4827:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "4827:3:5"
																		},
																		"nativeSrc": "4827:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4827:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4852:3:5",
																		"nodeType": "YulLiteral",
																		"src": "4852:3:5",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4823:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "4823:3:5"
																},
																"nativeSrc": "4823:33:5",
																"nodeType": "YulFunctionCall",
																"src": "4823:33:5"
															},
															"nativeSrc": "4820:53:5",
															"nodeType": "YulIf",
															"src": "4820:53:5"
														},
														{
															"nativeSrc": "4882:39:5",
															"nodeType": "YulAssignment",
															"src": "4882:39:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4911:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "4911:9:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "4892:18:5",
																	"nodeType": "YulIdentifier",
																	"src": "4892:18:5"
																},
																"nativeSrc": "4892:29:5",
																"nodeType": "YulFunctionCall",
																"src": "4892:29:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "4882:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "4882:6:5"
																}
															]
														},
														{
															"nativeSrc": "4930:48:5",
															"nodeType": "YulAssignment",
															"src": "4930:48:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4963:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "4963:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4974:2:5",
																				"nodeType": "YulLiteral",
																				"src": "4974:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4959:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "4959:3:5"
																		},
																		"nativeSrc": "4959:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4959:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "4940:18:5",
																	"nodeType": "YulIdentifier",
																	"src": "4940:18:5"
																},
																"nativeSrc": "4940:38:5",
																"nodeType": "YulFunctionCall",
																"src": "4940:38:5"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "4930:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "4930:6:5"
																}
															]
														},
														{
															"nativeSrc": "4987:42:5",
															"nodeType": "YulAssignment",
															"src": "4987:42:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5014:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "5014:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5025:2:5",
																				"nodeType": "YulLiteral",
																				"src": "5025:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5010:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "5010:3:5"
																		},
																		"nativeSrc": "5010:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5010:18:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4997:12:5",
																	"nodeType": "YulIdentifier",
																	"src": "4997:12:5"
																},
																"nativeSrc": "4997:32:5",
																"nodeType": "YulFunctionCall",
																"src": "4997:32:5"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "4987:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "4987:6:5"
																}
															]
														},
														{
															"nativeSrc": "5038:46:5",
															"nodeType": "YulVariableDeclaration",
															"src": "5038:46:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5069:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "5069:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5080:2:5",
																				"nodeType": "YulLiteral",
																				"src": "5080:2:5",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5065:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "5065:3:5"
																		},
																		"nativeSrc": "5065:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5065:18:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "5052:12:5",
																	"nodeType": "YulIdentifier",
																	"src": "5052:12:5"
																},
																"nativeSrc": "5052:32:5",
																"nodeType": "YulFunctionCall",
																"src": "5052:32:5"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "5042:6:5",
																	"nodeType": "YulTypedName",
																	"src": "5042:6:5",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5093:28:5",
															"nodeType": "YulVariableDeclaration",
															"src": "5093:28:5",
															"value": {
																"kind": "number",
																"nativeSrc": "5103:18:5",
																"nodeType": "YulLiteral",
																"src": "5103:18:5",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "5097:2:5",
																	"nodeType": "YulTypedName",
																	"src": "5097:2:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5148:16:5",
																"nodeType": "YulBlock",
																"src": "5148:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5157:1:5",
																					"nodeType": "YulLiteral",
																					"src": "5157:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5160:1:5",
																					"nodeType": "YulLiteral",
																					"src": "5160:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5150:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "5150:6:5"
																			},
																			"nativeSrc": "5150:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "5150:12:5"
																		},
																		"nativeSrc": "5150:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "5150:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "5136:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "5136:6:5"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "5144:2:5",
																		"nodeType": "YulIdentifier",
																		"src": "5144:2:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5133:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "5133:2:5"
																},
																"nativeSrc": "5133:14:5",
																"nodeType": "YulFunctionCall",
																"src": "5133:14:5"
															},
															"nativeSrc": "5130:34:5",
															"nodeType": "YulIf",
															"src": "5130:34:5"
														},
														{
															"nativeSrc": "5173:32:5",
															"nodeType": "YulVariableDeclaration",
															"src": "5173:32:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5187:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "5187:9:5"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "5198:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "5198:6:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5183:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "5183:3:5"
																},
																"nativeSrc": "5183:22:5",
																"nodeType": "YulFunctionCall",
																"src": "5183:22:5"
															},
															"variables": [
																{
																	"name": "_2",
																	"nativeSrc": "5177:2:5",
																	"nodeType": "YulTypedName",
																	"src": "5177:2:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5253:16:5",
																"nodeType": "YulBlock",
																"src": "5253:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5262:1:5",
																					"nodeType": "YulLiteral",
																					"src": "5262:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5265:1:5",
																					"nodeType": "YulLiteral",
																					"src": "5265:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5255:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "5255:6:5"
																			},
																			"nativeSrc": "5255:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "5255:12:5"
																		},
																		"nativeSrc": "5255:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "5255:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nativeSrc": "5232:2:5",
																						"nodeType": "YulIdentifier",
																						"src": "5232:2:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5236:4:5",
																						"nodeType": "YulLiteral",
																						"src": "5236:4:5",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5228:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "5228:3:5"
																				},
																				"nativeSrc": "5228:13:5",
																				"nodeType": "YulFunctionCall",
																				"src": "5228:13:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5243:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "5243:7:5"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "5224:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "5224:3:5"
																		},
																		"nativeSrc": "5224:27:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5224:27:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5217:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "5217:6:5"
																},
																"nativeSrc": "5217:35:5",
																"nodeType": "YulFunctionCall",
																"src": "5217:35:5"
															},
															"nativeSrc": "5214:55:5",
															"nodeType": "YulIf",
															"src": "5214:55:5"
														},
														{
															"nativeSrc": "5278:30:5",
															"nodeType": "YulVariableDeclaration",
															"src": "5278:30:5",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nativeSrc": "5305:2:5",
																		"nodeType": "YulIdentifier",
																		"src": "5305:2:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "5292:12:5",
																	"nodeType": "YulIdentifier",
																	"src": "5292:12:5"
																},
																"nativeSrc": "5292:16:5",
																"nodeType": "YulFunctionCall",
																"src": "5292:16:5"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "5282:6:5",
																	"nodeType": "YulTypedName",
																	"src": "5282:6:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5335:16:5",
																"nodeType": "YulBlock",
																"src": "5335:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5344:1:5",
																					"nodeType": "YulLiteral",
																					"src": "5344:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5347:1:5",
																					"nodeType": "YulLiteral",
																					"src": "5347:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5337:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "5337:6:5"
																			},
																			"nativeSrc": "5337:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "5337:12:5"
																		},
																		"nativeSrc": "5337:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "5337:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "5323:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "5323:6:5"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "5331:2:5",
																		"nodeType": "YulIdentifier",
																		"src": "5331:2:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5320:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "5320:2:5"
																},
																"nativeSrc": "5320:14:5",
																"nodeType": "YulFunctionCall",
																"src": "5320:14:5"
															},
															"nativeSrc": "5317:34:5",
															"nodeType": "YulIf",
															"src": "5317:34:5"
														},
														{
															"body": {
																"nativeSrc": "5401:16:5",
																"nodeType": "YulBlock",
																"src": "5401:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5410:1:5",
																					"nodeType": "YulLiteral",
																					"src": "5410:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5413:1:5",
																					"nodeType": "YulLiteral",
																					"src": "5413:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5403:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "5403:6:5"
																			},
																			"nativeSrc": "5403:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "5403:12:5"
																		},
																		"nativeSrc": "5403:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "5403:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nativeSrc": "5374:2:5",
																						"nodeType": "YulIdentifier",
																						"src": "5374:2:5"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "5378:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "5378:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5370:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "5370:3:5"
																				},
																				"nativeSrc": "5370:15:5",
																				"nodeType": "YulFunctionCall",
																				"src": "5370:15:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5387:2:5",
																				"nodeType": "YulLiteral",
																				"src": "5387:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5366:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "5366:3:5"
																		},
																		"nativeSrc": "5366:24:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5366:24:5"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "5392:7:5",
																		"nodeType": "YulIdentifier",
																		"src": "5392:7:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5363:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "5363:2:5"
																},
																"nativeSrc": "5363:37:5",
																"nodeType": "YulFunctionCall",
																"src": "5363:37:5"
															},
															"nativeSrc": "5360:57:5",
															"nodeType": "YulIf",
															"src": "5360:57:5"
														},
														{
															"nativeSrc": "5426:21:5",
															"nodeType": "YulAssignment",
															"src": "5426:21:5",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nativeSrc": "5440:2:5",
																		"nodeType": "YulIdentifier",
																		"src": "5440:2:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5444:2:5",
																		"nodeType": "YulLiteral",
																		"src": "5444:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5436:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "5436:3:5"
																},
																"nativeSrc": "5436:11:5",
																"nodeType": "YulFunctionCall",
																"src": "5436:11:5"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nativeSrc": "5426:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "5426:6:5"
																}
															]
														},
														{
															"nativeSrc": "5456:16:5",
															"nodeType": "YulAssignment",
															"src": "5456:16:5",
															"value": {
																"name": "length",
																"nativeSrc": "5466:6:5",
																"nodeType": "YulIdentifier",
																"src": "5466:6:5"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nativeSrc": "5456:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "5456:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_calldata_ptr",
												"nativeSrc": "4670:808:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4744:9:5",
														"nodeType": "YulTypedName",
														"src": "4744:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4755:7:5",
														"nodeType": "YulTypedName",
														"src": "4755:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4767:6:5",
														"nodeType": "YulTypedName",
														"src": "4767:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4775:6:5",
														"nodeType": "YulTypedName",
														"src": "4775:6:5",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "4783:6:5",
														"nodeType": "YulTypedName",
														"src": "4783:6:5",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "4791:6:5",
														"nodeType": "YulTypedName",
														"src": "4791:6:5",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "4799:6:5",
														"nodeType": "YulTypedName",
														"src": "4799:6:5",
														"type": ""
													}
												],
												"src": "4670:808:5"
											},
											{
												"body": {
													"nativeSrc": "5570:173:5",
													"nodeType": "YulBlock",
													"src": "5570:173:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "5616:16:5",
																"nodeType": "YulBlock",
																"src": "5616:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5625:1:5",
																					"nodeType": "YulLiteral",
																					"src": "5625:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5628:1:5",
																					"nodeType": "YulLiteral",
																					"src": "5628:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5618:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "5618:6:5"
																			},
																			"nativeSrc": "5618:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "5618:12:5"
																		},
																		"nativeSrc": "5618:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "5618:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5591:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "5591:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5600:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "5600:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5587:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "5587:3:5"
																		},
																		"nativeSrc": "5587:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5587:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5612:2:5",
																		"nodeType": "YulLiteral",
																		"src": "5612:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5583:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "5583:3:5"
																},
																"nativeSrc": "5583:32:5",
																"nodeType": "YulFunctionCall",
																"src": "5583:32:5"
															},
															"nativeSrc": "5580:52:5",
															"nodeType": "YulIf",
															"src": "5580:52:5"
														},
														{
															"nativeSrc": "5641:39:5",
															"nodeType": "YulAssignment",
															"src": "5641:39:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5670:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "5670:9:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "5651:18:5",
																	"nodeType": "YulIdentifier",
																	"src": "5651:18:5"
																},
																"nativeSrc": "5651:29:5",
																"nodeType": "YulFunctionCall",
																"src": "5651:29:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "5641:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "5641:6:5"
																}
															]
														},
														{
															"nativeSrc": "5689:48:5",
															"nodeType": "YulAssignment",
															"src": "5689:48:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5722:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "5722:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5733:2:5",
																				"nodeType": "YulLiteral",
																				"src": "5733:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5718:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "5718:3:5"
																		},
																		"nativeSrc": "5718:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5718:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "5699:18:5",
																	"nodeType": "YulIdentifier",
																	"src": "5699:18:5"
																},
																"nativeSrc": "5699:38:5",
																"nodeType": "YulFunctionCall",
																"src": "5699:38:5"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "5689:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "5689:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "5483:260:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5528:9:5",
														"nodeType": "YulTypedName",
														"src": "5528:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5539:7:5",
														"nodeType": "YulTypedName",
														"src": "5539:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5551:6:5",
														"nodeType": "YulTypedName",
														"src": "5551:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5559:6:5",
														"nodeType": "YulTypedName",
														"src": "5559:6:5",
														"type": ""
													}
												],
												"src": "5483:260:5"
											},
											{
												"body": {
													"nativeSrc": "5803:325:5",
													"nodeType": "YulBlock",
													"src": "5803:325:5",
													"statements": [
														{
															"nativeSrc": "5813:22:5",
															"nodeType": "YulAssignment",
															"src": "5813:22:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5827:1:5",
																		"nodeType": "YulLiteral",
																		"src": "5827:1:5",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "5830:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "5830:4:5"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "5823:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "5823:3:5"
																},
																"nativeSrc": "5823:12:5",
																"nodeType": "YulFunctionCall",
																"src": "5823:12:5"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "5813:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "5813:6:5"
																}
															]
														},
														{
															"nativeSrc": "5844:38:5",
															"nodeType": "YulVariableDeclaration",
															"src": "5844:38:5",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "5874:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "5874:4:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5880:1:5",
																		"nodeType": "YulLiteral",
																		"src": "5880:1:5",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "5870:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "5870:3:5"
																},
																"nativeSrc": "5870:12:5",
																"nodeType": "YulFunctionCall",
																"src": "5870:12:5"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "5848:18:5",
																	"nodeType": "YulTypedName",
																	"src": "5848:18:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5921:31:5",
																"nodeType": "YulBlock",
																"src": "5921:31:5",
																"statements": [
																	{
																		"nativeSrc": "5923:27:5",
																		"nodeType": "YulAssignment",
																		"src": "5923:27:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "5937:6:5",
																					"nodeType": "YulIdentifier",
																					"src": "5937:6:5"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5945:4:5",
																					"nodeType": "YulLiteral",
																					"src": "5945:4:5",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "5933:3:5",
																				"nodeType": "YulIdentifier",
																				"src": "5933:3:5"
																			},
																			"nativeSrc": "5933:17:5",
																			"nodeType": "YulFunctionCall",
																			"src": "5933:17:5"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "5923:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "5923:6:5"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "5901:18:5",
																		"nodeType": "YulIdentifier",
																		"src": "5901:18:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5894:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "5894:6:5"
																},
																"nativeSrc": "5894:26:5",
																"nodeType": "YulFunctionCall",
																"src": "5894:26:5"
															},
															"nativeSrc": "5891:61:5",
															"nodeType": "YulIf",
															"src": "5891:61:5"
														},
														{
															"body": {
																"nativeSrc": "6011:111:5",
																"nodeType": "YulBlock",
																"src": "6011:111:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6032:1:5",
																					"nodeType": "YulLiteral",
																					"src": "6032:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "6039:3:5",
																							"nodeType": "YulLiteral",
																							"src": "6039:3:5",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "6044:10:5",
																							"nodeType": "YulLiteral",
																							"src": "6044:10:5",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "6035:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "6035:3:5"
																					},
																					"nativeSrc": "6035:20:5",
																					"nodeType": "YulFunctionCall",
																					"src": "6035:20:5"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "6025:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "6025:6:5"
																			},
																			"nativeSrc": "6025:31:5",
																			"nodeType": "YulFunctionCall",
																			"src": "6025:31:5"
																		},
																		"nativeSrc": "6025:31:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "6025:31:5"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6076:1:5",
																					"nodeType": "YulLiteral",
																					"src": "6076:1:5",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6079:4:5",
																					"nodeType": "YulLiteral",
																					"src": "6079:4:5",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "6069:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "6069:6:5"
																			},
																			"nativeSrc": "6069:15:5",
																			"nodeType": "YulFunctionCall",
																			"src": "6069:15:5"
																		},
																		"nativeSrc": "6069:15:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "6069:15:5"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6104:1:5",
																					"nodeType": "YulLiteral",
																					"src": "6104:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6107:4:5",
																					"nodeType": "YulLiteral",
																					"src": "6107:4:5",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6097:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "6097:6:5"
																			},
																			"nativeSrc": "6097:15:5",
																			"nodeType": "YulFunctionCall",
																			"src": "6097:15:5"
																		},
																		"nativeSrc": "6097:15:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "6097:15:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "5967:18:5",
																		"nodeType": "YulIdentifier",
																		"src": "5967:18:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "5990:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "5990:6:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5998:2:5",
																				"nodeType": "YulLiteral",
																				"src": "5998:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "5987:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "5987:2:5"
																		},
																		"nativeSrc": "5987:14:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5987:14:5"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "5964:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "5964:2:5"
																},
																"nativeSrc": "5964:38:5",
																"nodeType": "YulFunctionCall",
																"src": "5964:38:5"
															},
															"nativeSrc": "5961:161:5",
															"nodeType": "YulIf",
															"src": "5961:161:5"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "5748:380:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "5783:4:5",
														"nodeType": "YulTypedName",
														"src": "5783:4:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "5792:6:5",
														"nodeType": "YulTypedName",
														"src": "5792:6:5",
														"type": ""
													}
												],
												"src": "5748:380:5"
											},
											{
												"body": {
													"nativeSrc": "6189:65:5",
													"nodeType": "YulBlock",
													"src": "6189:65:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6206:1:5",
																		"nodeType": "YulLiteral",
																		"src": "6206:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "6209:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "6209:3:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6199:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "6199:6:5"
																},
																"nativeSrc": "6199:14:5",
																"nodeType": "YulFunctionCall",
																"src": "6199:14:5"
															},
															"nativeSrc": "6199:14:5",
															"nodeType": "YulExpressionStatement",
															"src": "6199:14:5"
														},
														{
															"nativeSrc": "6222:26:5",
															"nodeType": "YulAssignment",
															"src": "6222:26:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6240:1:5",
																		"nodeType": "YulLiteral",
																		"src": "6240:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6243:4:5",
																		"nodeType": "YulLiteral",
																		"src": "6243:4:5",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "6230:9:5",
																	"nodeType": "YulIdentifier",
																	"src": "6230:9:5"
																},
																"nativeSrc": "6230:18:5",
																"nodeType": "YulFunctionCall",
																"src": "6230:18:5"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "6222:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "6222:4:5"
																}
															]
														}
													]
												},
												"name": "array_dataslot_string_storage",
												"nativeSrc": "6133:121:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "6172:3:5",
														"nodeType": "YulTypedName",
														"src": "6172:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "6180:4:5",
														"nodeType": "YulTypedName",
														"src": "6180:4:5",
														"type": ""
													}
												],
												"src": "6133:121:5"
											},
											{
												"body": {
													"nativeSrc": "6340:462:5",
													"nodeType": "YulBlock",
													"src": "6340:462:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "6373:423:5",
																"nodeType": "YulBlock",
																"src": "6373:423:5",
																"statements": [
																	{
																		"nativeSrc": "6387:11:5",
																		"nodeType": "YulVariableDeclaration",
																		"src": "6387:11:5",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "6397:1:5",
																			"nodeType": "YulLiteral",
																			"src": "6397:1:5",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nativeSrc": "6391:2:5",
																				"nodeType": "YulTypedName",
																				"src": "6391:2:5",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6418:1:5",
																					"nodeType": "YulLiteral",
																					"src": "6418:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"name": "array",
																					"nativeSrc": "6421:5:5",
																					"nodeType": "YulIdentifier",
																					"src": "6421:5:5"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "6411:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "6411:6:5"
																			},
																			"nativeSrc": "6411:16:5",
																			"nodeType": "YulFunctionCall",
																			"src": "6411:16:5"
																		},
																		"nativeSrc": "6411:16:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "6411:16:5"
																	},
																	{
																		"nativeSrc": "6440:30:5",
																		"nodeType": "YulVariableDeclaration",
																		"src": "6440:30:5",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6462:1:5",
																					"nodeType": "YulLiteral",
																					"src": "6462:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6465:4:5",
																					"nodeType": "YulLiteral",
																					"src": "6465:4:5",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nativeSrc": "6452:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "6452:9:5"
																			},
																			"nativeSrc": "6452:18:5",
																			"nodeType": "YulFunctionCall",
																			"src": "6452:18:5"
																		},
																		"variables": [
																			{
																				"name": "data",
																				"nativeSrc": "6444:4:5",
																				"nodeType": "YulTypedName",
																				"src": "6444:4:5",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "6483:57:5",
																		"nodeType": "YulVariableDeclaration",
																		"src": "6483:57:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "6506:4:5",
																					"nodeType": "YulIdentifier",
																					"src": "6506:4:5"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "6516:1:5",
																							"nodeType": "YulLiteral",
																							"src": "6516:1:5",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "startIndex",
																									"nativeSrc": "6523:10:5",
																									"nodeType": "YulIdentifier",
																									"src": "6523:10:5"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "6535:2:5",
																									"nodeType": "YulLiteral",
																									"src": "6535:2:5",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "6519:3:5",
																								"nodeType": "YulIdentifier",
																								"src": "6519:3:5"
																							},
																							"nativeSrc": "6519:19:5",
																							"nodeType": "YulFunctionCall",
																							"src": "6519:19:5"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "6512:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "6512:3:5"
																					},
																					"nativeSrc": "6512:27:5",
																					"nodeType": "YulFunctionCall",
																					"src": "6512:27:5"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "6502:3:5",
																				"nodeType": "YulIdentifier",
																				"src": "6502:3:5"
																			},
																			"nativeSrc": "6502:38:5",
																			"nodeType": "YulFunctionCall",
																			"src": "6502:38:5"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "6487:11:5",
																				"nodeType": "YulTypedName",
																				"src": "6487:11:5",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "6577:23:5",
																			"nodeType": "YulBlock",
																			"src": "6577:23:5",
																			"statements": [
																				{
																					"nativeSrc": "6579:19:5",
																					"nodeType": "YulAssignment",
																					"src": "6579:19:5",
																					"value": {
																						"name": "data",
																						"nativeSrc": "6594:4:5",
																						"nodeType": "YulIdentifier",
																						"src": "6594:4:5"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "6579:11:5",
																							"nodeType": "YulIdentifier",
																							"src": "6579:11:5"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "6559:10:5",
																					"nodeType": "YulIdentifier",
																					"src": "6559:10:5"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6571:4:5",
																					"nodeType": "YulLiteral",
																					"src": "6571:4:5",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "6556:2:5",
																				"nodeType": "YulIdentifier",
																				"src": "6556:2:5"
																			},
																			"nativeSrc": "6556:20:5",
																			"nodeType": "YulFunctionCall",
																			"src": "6556:20:5"
																		},
																		"nativeSrc": "6553:47:5",
																		"nodeType": "YulIf",
																		"src": "6553:47:5"
																	},
																	{
																		"nativeSrc": "6613:41:5",
																		"nodeType": "YulVariableDeclaration",
																		"src": "6613:41:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "6627:4:5",
																					"nodeType": "YulIdentifier",
																					"src": "6627:4:5"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "6637:1:5",
																							"nodeType": "YulLiteral",
																							"src": "6637:1:5",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "6644:3:5",
																									"nodeType": "YulIdentifier",
																									"src": "6644:3:5"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "6649:2:5",
																									"nodeType": "YulLiteral",
																									"src": "6649:2:5",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "6640:3:5",
																								"nodeType": "YulIdentifier",
																								"src": "6640:3:5"
																							},
																							"nativeSrc": "6640:12:5",
																							"nodeType": "YulFunctionCall",
																							"src": "6640:12:5"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "6633:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "6633:3:5"
																					},
																					"nativeSrc": "6633:20:5",
																					"nodeType": "YulFunctionCall",
																					"src": "6633:20:5"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "6623:3:5",
																				"nodeType": "YulIdentifier",
																				"src": "6623:3:5"
																			},
																			"nativeSrc": "6623:31:5",
																			"nodeType": "YulFunctionCall",
																			"src": "6623:31:5"
																		},
																		"variables": [
																			{
																				"name": "_2",
																				"nativeSrc": "6617:2:5",
																				"nodeType": "YulTypedName",
																				"src": "6617:2:5",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "6667:24:5",
																		"nodeType": "YulVariableDeclaration",
																		"src": "6667:24:5",
																		"value": {
																			"name": "deleteStart",
																			"nativeSrc": "6680:11:5",
																			"nodeType": "YulIdentifier",
																			"src": "6680:11:5"
																		},
																		"variables": [
																			{
																				"name": "start",
																				"nativeSrc": "6671:5:5",
																				"nodeType": "YulTypedName",
																				"src": "6671:5:5",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "6765:21:5",
																			"nodeType": "YulBlock",
																			"src": "6765:21:5",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "6774:5:5",
																								"nodeType": "YulIdentifier",
																								"src": "6774:5:5"
																							},
																							{
																								"name": "_1",
																								"nativeSrc": "6781:2:5",
																								"nodeType": "YulIdentifier",
																								"src": "6781:2:5"
																							}
																						],
																						"functionName": {
																							"name": "sstore",
																							"nativeSrc": "6767:6:5",
																							"nodeType": "YulIdentifier",
																							"src": "6767:6:5"
																						},
																						"nativeSrc": "6767:17:5",
																						"nodeType": "YulFunctionCall",
																						"src": "6767:17:5"
																					},
																					"nativeSrc": "6767:17:5",
																					"nodeType": "YulExpressionStatement",
																					"src": "6767:17:5"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "6715:5:5",
																					"nodeType": "YulIdentifier",
																					"src": "6715:5:5"
																				},
																				{
																					"name": "_2",
																					"nativeSrc": "6722:2:5",
																					"nodeType": "YulIdentifier",
																					"src": "6722:2:5"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "6712:2:5",
																				"nodeType": "YulIdentifier",
																				"src": "6712:2:5"
																			},
																			"nativeSrc": "6712:13:5",
																			"nodeType": "YulFunctionCall",
																			"src": "6712:13:5"
																		},
																		"nativeSrc": "6704:82:5",
																		"nodeType": "YulForLoop",
																		"post": {
																			"nativeSrc": "6726:26:5",
																			"nodeType": "YulBlock",
																			"src": "6726:26:5",
																			"statements": [
																				{
																					"nativeSrc": "6728:22:5",
																					"nodeType": "YulAssignment",
																					"src": "6728:22:5",
																					"value": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "6741:5:5",
																								"nodeType": "YulIdentifier",
																								"src": "6741:5:5"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "6748:1:5",
																								"nodeType": "YulLiteral",
																								"src": "6748:1:5",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "6737:3:5",
																							"nodeType": "YulIdentifier",
																							"src": "6737:3:5"
																						},
																						"nativeSrc": "6737:13:5",
																						"nodeType": "YulFunctionCall",
																						"src": "6737:13:5"
																					},
																					"variableNames": [
																						{
																							"name": "start",
																							"nativeSrc": "6728:5:5",
																							"nodeType": "YulIdentifier",
																							"src": "6728:5:5"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nativeSrc": "6708:3:5",
																			"nodeType": "YulBlock",
																			"src": "6708:3:5",
																			"statements": []
																		},
																		"src": "6704:82:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "6356:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "6356:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6361:2:5",
																		"nodeType": "YulLiteral",
																		"src": "6361:2:5",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6353:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "6353:2:5"
																},
																"nativeSrc": "6353:11:5",
																"nodeType": "YulFunctionCall",
																"src": "6353:11:5"
															},
															"nativeSrc": "6350:446:5",
															"nodeType": "YulIf",
															"src": "6350:446:5"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_string_storage",
												"nativeSrc": "6259:543:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "6312:5:5",
														"nodeType": "YulTypedName",
														"src": "6312:5:5",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "6319:3:5",
														"nodeType": "YulTypedName",
														"src": "6319:3:5",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "6324:10:5",
														"nodeType": "YulTypedName",
														"src": "6324:10:5",
														"type": ""
													}
												],
												"src": "6259:543:5"
											},
											{
												"body": {
													"nativeSrc": "6892:81:5",
													"nodeType": "YulBlock",
													"src": "6892:81:5",
													"statements": [
														{
															"nativeSrc": "6902:65:5",
															"nodeType": "YulAssignment",
															"src": "6902:65:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "6917:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "6917:4:5"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "6935:1:5",
																										"nodeType": "YulLiteral",
																										"src": "6935:1:5",
																										"type": "",
																										"value": "3"
																									},
																									{
																										"name": "len",
																										"nativeSrc": "6938:3:5",
																										"nodeType": "YulIdentifier",
																										"src": "6938:3:5"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "6931:3:5",
																									"nodeType": "YulIdentifier",
																									"src": "6931:3:5"
																								},
																								"nativeSrc": "6931:11:5",
																								"nodeType": "YulFunctionCall",
																								"src": "6931:11:5"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "6948:1:5",
																										"nodeType": "YulLiteral",
																										"src": "6948:1:5",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nativeSrc": "6944:3:5",
																									"nodeType": "YulIdentifier",
																									"src": "6944:3:5"
																								},
																								"nativeSrc": "6944:6:5",
																								"nodeType": "YulFunctionCall",
																								"src": "6944:6:5"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nativeSrc": "6927:3:5",
																							"nodeType": "YulIdentifier",
																							"src": "6927:3:5"
																						},
																						"nativeSrc": "6927:24:5",
																						"nodeType": "YulFunctionCall",
																						"src": "6927:24:5"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "6923:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "6923:3:5"
																				},
																				"nativeSrc": "6923:29:5",
																				"nodeType": "YulFunctionCall",
																				"src": "6923:29:5"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "6913:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "6913:3:5"
																		},
																		"nativeSrc": "6913:40:5",
																		"nodeType": "YulFunctionCall",
																		"src": "6913:40:5"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "6959:1:5",
																				"nodeType": "YulLiteral",
																				"src": "6959:1:5",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "6962:3:5",
																				"nodeType": "YulIdentifier",
																				"src": "6962:3:5"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "6955:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "6955:3:5"
																		},
																		"nativeSrc": "6955:11:5",
																		"nodeType": "YulFunctionCall",
																		"src": "6955:11:5"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "6910:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "6910:2:5"
																},
																"nativeSrc": "6910:57:5",
																"nodeType": "YulFunctionCall",
																"src": "6910:57:5"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "6902:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "6902:4:5"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "6807:166:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "6869:4:5",
														"nodeType": "YulTypedName",
														"src": "6869:4:5",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "6875:3:5",
														"nodeType": "YulTypedName",
														"src": "6875:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "6883:4:5",
														"nodeType": "YulTypedName",
														"src": "6883:4:5",
														"type": ""
													}
												],
												"src": "6807:166:5"
											},
											{
												"body": {
													"nativeSrc": "7074:1249:5",
													"nodeType": "YulBlock",
													"src": "7074:1249:5",
													"statements": [
														{
															"nativeSrc": "7084:24:5",
															"nodeType": "YulVariableDeclaration",
															"src": "7084:24:5",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "7104:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "7104:3:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "7098:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "7098:5:5"
																},
																"nativeSrc": "7098:10:5",
																"nodeType": "YulFunctionCall",
																"src": "7098:10:5"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "7088:6:5",
																	"nodeType": "YulTypedName",
																	"src": "7088:6:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7151:22:5",
																"nodeType": "YulBlock",
																"src": "7151:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "7153:16:5",
																				"nodeType": "YulIdentifier",
																				"src": "7153:16:5"
																			},
																			"nativeSrc": "7153:18:5",
																			"nodeType": "YulFunctionCall",
																			"src": "7153:18:5"
																		},
																		"nativeSrc": "7153:18:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "7153:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "7123:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "7123:6:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7131:18:5",
																		"nodeType": "YulLiteral",
																		"src": "7131:18:5",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7120:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "7120:2:5"
																},
																"nativeSrc": "7120:30:5",
																"nodeType": "YulFunctionCall",
																"src": "7120:30:5"
															},
															"nativeSrc": "7117:56:5",
															"nodeType": "YulIf",
															"src": "7117:56:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "7226:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "7226:4:5"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "7264:4:5",
																						"nodeType": "YulIdentifier",
																						"src": "7264:4:5"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "7258:5:5",
																					"nodeType": "YulIdentifier",
																					"src": "7258:5:5"
																				},
																				"nativeSrc": "7258:11:5",
																				"nodeType": "YulFunctionCall",
																				"src": "7258:11:5"
																			}
																		],
																		"functionName": {
																			"name": "extract_byte_array_length",
																			"nativeSrc": "7232:25:5",
																			"nodeType": "YulIdentifier",
																			"src": "7232:25:5"
																		},
																		"nativeSrc": "7232:38:5",
																		"nodeType": "YulFunctionCall",
																		"src": "7232:38:5"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "7272:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "7272:6:5"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_string_storage",
																	"nativeSrc": "7182:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "7182:43:5"
																},
																"nativeSrc": "7182:97:5",
																"nodeType": "YulFunctionCall",
																"src": "7182:97:5"
															},
															"nativeSrc": "7182:97:5",
															"nodeType": "YulExpressionStatement",
															"src": "7182:97:5"
														},
														{
															"nativeSrc": "7288:18:5",
															"nodeType": "YulVariableDeclaration",
															"src": "7288:18:5",
															"value": {
																"kind": "number",
																"nativeSrc": "7305:1:5",
																"nodeType": "YulLiteral",
																"src": "7305:1:5",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "7292:9:5",
																	"nodeType": "YulTypedName",
																	"src": "7292:9:5",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "7315:23:5",
															"nodeType": "YulVariableDeclaration",
															"src": "7315:23:5",
															"value": {
																"kind": "number",
																"nativeSrc": "7334:4:5",
																"nodeType": "YulLiteral",
																"src": "7334:4:5",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "srcOffset_1",
																	"nativeSrc": "7319:11:5",
																	"nodeType": "YulTypedName",
																	"src": "7319:11:5",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "7347:17:5",
															"nodeType": "YulAssignment",
															"src": "7347:17:5",
															"value": {
																"kind": "number",
																"nativeSrc": "7360:4:5",
																"nodeType": "YulLiteral",
																"src": "7360:4:5",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "7347:9:5",
																	"nodeType": "YulIdentifier",
																	"src": "7347:9:5"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "7410:656:5",
																		"nodeType": "YulBlock",
																		"src": "7410:656:5",
																		"statements": [
																			{
																				"nativeSrc": "7424:35:5",
																				"nodeType": "YulVariableDeclaration",
																				"src": "7424:35:5",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "7443:6:5",
																							"nodeType": "YulIdentifier",
																							"src": "7443:6:5"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "7455:2:5",
																									"nodeType": "YulLiteral",
																									"src": "7455:2:5",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "7451:3:5",
																								"nodeType": "YulIdentifier",
																								"src": "7451:3:5"
																							},
																							"nativeSrc": "7451:7:5",
																							"nodeType": "YulFunctionCall",
																							"src": "7451:7:5"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "7439:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "7439:3:5"
																					},
																					"nativeSrc": "7439:20:5",
																					"nodeType": "YulFunctionCall",
																					"src": "7439:20:5"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "7428:7:5",
																						"nodeType": "YulTypedName",
																						"src": "7428:7:5",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "7472:49:5",
																				"nodeType": "YulVariableDeclaration",
																				"src": "7472:49:5",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "7516:4:5",
																							"nodeType": "YulIdentifier",
																							"src": "7516:4:5"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nativeSrc": "7486:29:5",
																						"nodeType": "YulIdentifier",
																						"src": "7486:29:5"
																					},
																					"nativeSrc": "7486:35:5",
																					"nodeType": "YulFunctionCall",
																					"src": "7486:35:5"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "7476:6:5",
																						"nodeType": "YulTypedName",
																						"src": "7476:6:5",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "7534:10:5",
																				"nodeType": "YulVariableDeclaration",
																				"src": "7534:10:5",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "7543:1:5",
																					"nodeType": "YulLiteral",
																					"src": "7543:1:5",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "7538:1:5",
																						"nodeType": "YulTypedName",
																						"src": "7538:1:5",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "7621:172:5",
																					"nodeType": "YulBlock",
																					"src": "7621:172:5",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "7646:6:5",
																										"nodeType": "YulIdentifier",
																										"src": "7646:6:5"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "7664:3:5",
																														"nodeType": "YulIdentifier",
																														"src": "7664:3:5"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "7669:9:5",
																														"nodeType": "YulIdentifier",
																														"src": "7669:9:5"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "7660:3:5",
																													"nodeType": "YulIdentifier",
																													"src": "7660:3:5"
																												},
																												"nativeSrc": "7660:19:5",
																												"nodeType": "YulFunctionCall",
																												"src": "7660:19:5"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "7654:5:5",
																											"nodeType": "YulIdentifier",
																											"src": "7654:5:5"
																										},
																										"nativeSrc": "7654:26:5",
																										"nodeType": "YulFunctionCall",
																										"src": "7654:26:5"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "7639:6:5",
																									"nodeType": "YulIdentifier",
																									"src": "7639:6:5"
																								},
																								"nativeSrc": "7639:42:5",
																								"nodeType": "YulFunctionCall",
																								"src": "7639:42:5"
																							},
																							"nativeSrc": "7639:42:5",
																							"nodeType": "YulExpressionStatement",
																							"src": "7639:42:5"
																						},
																						{
																							"nativeSrc": "7698:24:5",
																							"nodeType": "YulAssignment",
																							"src": "7698:24:5",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "7712:6:5",
																										"nodeType": "YulIdentifier",
																										"src": "7712:6:5"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "7720:1:5",
																										"nodeType": "YulLiteral",
																										"src": "7720:1:5",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "7708:3:5",
																									"nodeType": "YulIdentifier",
																									"src": "7708:3:5"
																								},
																								"nativeSrc": "7708:14:5",
																								"nodeType": "YulFunctionCall",
																								"src": "7708:14:5"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "7698:6:5",
																									"nodeType": "YulIdentifier",
																									"src": "7698:6:5"
																								}
																							]
																						},
																						{
																							"nativeSrc": "7739:40:5",
																							"nodeType": "YulAssignment",
																							"src": "7739:40:5",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "7756:9:5",
																										"nodeType": "YulIdentifier",
																										"src": "7756:9:5"
																									},
																									{
																										"name": "srcOffset_1",
																										"nativeSrc": "7767:11:5",
																										"nodeType": "YulIdentifier",
																										"src": "7767:11:5"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "7752:3:5",
																									"nodeType": "YulIdentifier",
																									"src": "7752:3:5"
																								},
																								"nativeSrc": "7752:27:5",
																								"nodeType": "YulFunctionCall",
																								"src": "7752:27:5"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "7739:9:5",
																									"nodeType": "YulIdentifier",
																									"src": "7739:9:5"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "7568:1:5",
																							"nodeType": "YulIdentifier",
																							"src": "7568:1:5"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "7571:7:5",
																							"nodeType": "YulIdentifier",
																							"src": "7571:7:5"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "7565:2:5",
																						"nodeType": "YulIdentifier",
																						"src": "7565:2:5"
																					},
																					"nativeSrc": "7565:14:5",
																					"nodeType": "YulFunctionCall",
																					"src": "7565:14:5"
																				},
																				"nativeSrc": "7557:236:5",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "7580:28:5",
																					"nodeType": "YulBlock",
																					"src": "7580:28:5",
																					"statements": [
																						{
																							"nativeSrc": "7582:24:5",
																							"nodeType": "YulAssignment",
																							"src": "7582:24:5",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "7591:1:5",
																										"nodeType": "YulIdentifier",
																										"src": "7591:1:5"
																									},
																									{
																										"name": "srcOffset_1",
																										"nativeSrc": "7594:11:5",
																										"nodeType": "YulIdentifier",
																										"src": "7594:11:5"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "7587:3:5",
																									"nodeType": "YulIdentifier",
																									"src": "7587:3:5"
																								},
																								"nativeSrc": "7587:19:5",
																								"nodeType": "YulFunctionCall",
																								"src": "7587:19:5"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "7582:1:5",
																									"nodeType": "YulIdentifier",
																									"src": "7582:1:5"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "7561:3:5",
																					"nodeType": "YulBlock",
																					"src": "7561:3:5",
																					"statements": []
																				},
																				"src": "7557:236:5"
																			},
																			{
																				"body": {
																					"nativeSrc": "7841:166:5",
																					"nodeType": "YulBlock",
																					"src": "7841:166:5",
																					"statements": [
																						{
																							"nativeSrc": "7859:43:5",
																							"nodeType": "YulVariableDeclaration",
																							"src": "7859:43:5",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "7886:3:5",
																												"nodeType": "YulIdentifier",
																												"src": "7886:3:5"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "7891:9:5",
																												"nodeType": "YulIdentifier",
																												"src": "7891:9:5"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "7882:3:5",
																											"nodeType": "YulIdentifier",
																											"src": "7882:3:5"
																										},
																										"nativeSrc": "7882:19:5",
																										"nodeType": "YulFunctionCall",
																										"src": "7882:19:5"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "7876:5:5",
																									"nodeType": "YulIdentifier",
																									"src": "7876:5:5"
																								},
																								"nativeSrc": "7876:26:5",
																								"nodeType": "YulFunctionCall",
																								"src": "7876:26:5"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "7863:9:5",
																									"nodeType": "YulTypedName",
																									"src": "7863:9:5",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "7926:6:5",
																										"nodeType": "YulIdentifier",
																										"src": "7926:6:5"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "7938:9:5",
																												"nodeType": "YulIdentifier",
																												"src": "7938:9:5"
																											},
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"kind": "number",
																																				"nativeSrc": "7965:1:5",
																																				"nodeType": "YulLiteral",
																																				"src": "7965:1:5",
																																				"type": "",
																																				"value": "3"
																																			},
																																			{
																																				"name": "newLen",
																																				"nativeSrc": "7968:6:5",
																																				"nodeType": "YulIdentifier",
																																				"src": "7968:6:5"
																																			}
																																		],
																																		"functionName": {
																																			"name": "shl",
																																			"nativeSrc": "7961:3:5",
																																			"nodeType": "YulIdentifier",
																																			"src": "7961:3:5"
																																		},
																																		"nativeSrc": "7961:14:5",
																																		"nodeType": "YulFunctionCall",
																																		"src": "7961:14:5"
																																	},
																																	{
																																		"kind": "number",
																																		"nativeSrc": "7977:3:5",
																																		"nodeType": "YulLiteral",
																																		"src": "7977:3:5",
																																		"type": "",
																																		"value": "248"
																																	}
																																],
																																"functionName": {
																																	"name": "and",
																																	"nativeSrc": "7957:3:5",
																																	"nodeType": "YulIdentifier",
																																	"src": "7957:3:5"
																																},
																																"nativeSrc": "7957:24:5",
																																"nodeType": "YulFunctionCall",
																																"src": "7957:24:5"
																															},
																															{
																																"arguments": [
																																	{
																																		"kind": "number",
																																		"nativeSrc": "7987:1:5",
																																		"nodeType": "YulLiteral",
																																		"src": "7987:1:5",
																																		"type": "",
																																		"value": "0"
																																	}
																																],
																																"functionName": {
																																	"name": "not",
																																	"nativeSrc": "7983:3:5",
																																	"nodeType": "YulIdentifier",
																																	"src": "7983:3:5"
																																},
																																"nativeSrc": "7983:6:5",
																																"nodeType": "YulFunctionCall",
																																"src": "7983:6:5"
																															}
																														],
																														"functionName": {
																															"name": "shr",
																															"nativeSrc": "7953:3:5",
																															"nodeType": "YulIdentifier",
																															"src": "7953:3:5"
																														},
																														"nativeSrc": "7953:37:5",
																														"nodeType": "YulFunctionCall",
																														"src": "7953:37:5"
																													}
																												],
																												"functionName": {
																													"name": "not",
																													"nativeSrc": "7949:3:5",
																													"nodeType": "YulIdentifier",
																													"src": "7949:3:5"
																												},
																												"nativeSrc": "7949:42:5",
																												"nodeType": "YulFunctionCall",
																												"src": "7949:42:5"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nativeSrc": "7934:3:5",
																											"nodeType": "YulIdentifier",
																											"src": "7934:3:5"
																										},
																										"nativeSrc": "7934:58:5",
																										"nodeType": "YulFunctionCall",
																										"src": "7934:58:5"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "7919:6:5",
																									"nodeType": "YulIdentifier",
																									"src": "7919:6:5"
																								},
																								"nativeSrc": "7919:74:5",
																								"nodeType": "YulFunctionCall",
																								"src": "7919:74:5"
																							},
																							"nativeSrc": "7919:74:5",
																							"nodeType": "YulExpressionStatement",
																							"src": "7919:74:5"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "7812:7:5",
																							"nodeType": "YulIdentifier",
																							"src": "7812:7:5"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "7821:6:5",
																							"nodeType": "YulIdentifier",
																							"src": "7821:6:5"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "7809:2:5",
																						"nodeType": "YulIdentifier",
																						"src": "7809:2:5"
																					},
																					"nativeSrc": "7809:19:5",
																					"nodeType": "YulFunctionCall",
																					"src": "7809:19:5"
																				},
																				"nativeSrc": "7806:201:5",
																				"nodeType": "YulIf",
																				"src": "7806:201:5"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "8027:4:5",
																							"nodeType": "YulIdentifier",
																							"src": "8027:4:5"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nativeSrc": "8041:1:5",
																											"nodeType": "YulLiteral",
																											"src": "8041:1:5",
																											"type": "",
																											"value": "1"
																										},
																										{
																											"name": "newLen",
																											"nativeSrc": "8044:6:5",
																											"nodeType": "YulIdentifier",
																											"src": "8044:6:5"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nativeSrc": "8037:3:5",
																										"nodeType": "YulIdentifier",
																										"src": "8037:3:5"
																									},
																									"nativeSrc": "8037:14:5",
																									"nodeType": "YulFunctionCall",
																									"src": "8037:14:5"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "8053:1:5",
																									"nodeType": "YulLiteral",
																									"src": "8053:1:5",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "8033:3:5",
																								"nodeType": "YulIdentifier",
																								"src": "8033:3:5"
																							},
																							"nativeSrc": "8033:22:5",
																							"nodeType": "YulFunctionCall",
																							"src": "8033:22:5"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "8020:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "8020:6:5"
																					},
																					"nativeSrc": "8020:36:5",
																					"nodeType": "YulFunctionCall",
																					"src": "8020:36:5"
																				},
																				"nativeSrc": "8020:36:5",
																				"nodeType": "YulExpressionStatement",
																				"src": "8020:36:5"
																			}
																		]
																	},
																	"nativeSrc": "7403:663:5",
																	"nodeType": "YulCase",
																	"src": "7403:663:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7408:1:5",
																		"nodeType": "YulLiteral",
																		"src": "7408:1:5",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "8083:234:5",
																		"nodeType": "YulBlock",
																		"src": "8083:234:5",
																		"statements": [
																			{
																				"nativeSrc": "8097:14:5",
																				"nodeType": "YulVariableDeclaration",
																				"src": "8097:14:5",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "8110:1:5",
																					"nodeType": "YulLiteral",
																					"src": "8110:1:5",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "8101:5:5",
																						"nodeType": "YulTypedName",
																						"src": "8101:5:5",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "8146:67:5",
																					"nodeType": "YulBlock",
																					"src": "8146:67:5",
																					"statements": [
																						{
																							"nativeSrc": "8164:35:5",
																							"nodeType": "YulAssignment",
																							"src": "8164:35:5",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "8183:3:5",
																												"nodeType": "YulIdentifier",
																												"src": "8183:3:5"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "8188:9:5",
																												"nodeType": "YulIdentifier",
																												"src": "8188:9:5"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "8179:3:5",
																											"nodeType": "YulIdentifier",
																											"src": "8179:3:5"
																										},
																										"nativeSrc": "8179:19:5",
																										"nodeType": "YulFunctionCall",
																										"src": "8179:19:5"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "8173:5:5",
																									"nodeType": "YulIdentifier",
																									"src": "8173:5:5"
																								},
																								"nativeSrc": "8173:26:5",
																								"nodeType": "YulFunctionCall",
																								"src": "8173:26:5"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "8164:5:5",
																									"nodeType": "YulIdentifier",
																									"src": "8164:5:5"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "8127:6:5",
																					"nodeType": "YulIdentifier",
																					"src": "8127:6:5"
																				},
																				"nativeSrc": "8124:89:5",
																				"nodeType": "YulIf",
																				"src": "8124:89:5"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "8233:4:5",
																							"nodeType": "YulIdentifier",
																							"src": "8233:4:5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "8292:5:5",
																									"nodeType": "YulIdentifier",
																									"src": "8292:5:5"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "8299:6:5",
																									"nodeType": "YulIdentifier",
																									"src": "8299:6:5"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "8239:52:5",
																								"nodeType": "YulIdentifier",
																								"src": "8239:52:5"
																							},
																							"nativeSrc": "8239:67:5",
																							"nodeType": "YulFunctionCall",
																							"src": "8239:67:5"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "8226:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "8226:6:5"
																					},
																					"nativeSrc": "8226:81:5",
																					"nodeType": "YulFunctionCall",
																					"src": "8226:81:5"
																				},
																				"nativeSrc": "8226:81:5",
																				"nodeType": "YulExpressionStatement",
																				"src": "8226:81:5"
																			}
																		]
																	},
																	"nativeSrc": "8075:242:5",
																	"nodeType": "YulCase",
																	"src": "8075:242:5",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "7383:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "7383:6:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7391:2:5",
																		"nodeType": "YulLiteral",
																		"src": "7391:2:5",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7380:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "7380:2:5"
																},
																"nativeSrc": "7380:14:5",
																"nodeType": "YulFunctionCall",
																"src": "7380:14:5"
															},
															"nativeSrc": "7373:944:5",
															"nodeType": "YulSwitch",
															"src": "7373:944:5"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "6978:1345:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "7059:4:5",
														"nodeType": "YulTypedName",
														"src": "7059:4:5",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "7065:3:5",
														"nodeType": "YulTypedName",
														"src": "7065:3:5",
														"type": ""
													}
												],
												"src": "6978:1345:5"
											},
											{
												"body": {
													"nativeSrc": "8360:95:5",
													"nodeType": "YulBlock",
													"src": "8360:95:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8377:1:5",
																		"nodeType": "YulLiteral",
																		"src": "8377:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "8384:3:5",
																				"nodeType": "YulLiteral",
																				"src": "8384:3:5",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8389:10:5",
																				"nodeType": "YulLiteral",
																				"src": "8389:10:5",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "8380:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "8380:3:5"
																		},
																		"nativeSrc": "8380:20:5",
																		"nodeType": "YulFunctionCall",
																		"src": "8380:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8370:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "8370:6:5"
																},
																"nativeSrc": "8370:31:5",
																"nodeType": "YulFunctionCall",
																"src": "8370:31:5"
															},
															"nativeSrc": "8370:31:5",
															"nodeType": "YulExpressionStatement",
															"src": "8370:31:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8417:1:5",
																		"nodeType": "YulLiteral",
																		"src": "8417:1:5",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8420:4:5",
																		"nodeType": "YulLiteral",
																		"src": "8420:4:5",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8410:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "8410:6:5"
																},
																"nativeSrc": "8410:15:5",
																"nodeType": "YulFunctionCall",
																"src": "8410:15:5"
															},
															"nativeSrc": "8410:15:5",
															"nodeType": "YulExpressionStatement",
															"src": "8410:15:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8441:1:5",
																		"nodeType": "YulLiteral",
																		"src": "8441:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8444:4:5",
																		"nodeType": "YulLiteral",
																		"src": "8444:4:5",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "8434:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "8434:6:5"
																},
																"nativeSrc": "8434:15:5",
																"nodeType": "YulFunctionCall",
																"src": "8434:15:5"
															},
															"nativeSrc": "8434:15:5",
															"nodeType": "YulExpressionStatement",
															"src": "8434:15:5"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "8328:127:5",
												"nodeType": "YulFunctionDefinition",
												"src": "8328:127:5"
											},
											{
												"body": {
													"nativeSrc": "8509:79:5",
													"nodeType": "YulBlock",
													"src": "8509:79:5",
													"statements": [
														{
															"nativeSrc": "8519:17:5",
															"nodeType": "YulAssignment",
															"src": "8519:17:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8531:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "8531:1:5"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "8534:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "8534:1:5"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "8527:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "8527:3:5"
																},
																"nativeSrc": "8527:9:5",
																"nodeType": "YulFunctionCall",
																"src": "8527:9:5"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "8519:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "8519:4:5"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8560:22:5",
																"nodeType": "YulBlock",
																"src": "8560:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "8562:16:5",
																				"nodeType": "YulIdentifier",
																				"src": "8562:16:5"
																			},
																			"nativeSrc": "8562:18:5",
																			"nodeType": "YulFunctionCall",
																			"src": "8562:18:5"
																		},
																		"nativeSrc": "8562:18:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "8562:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "8551:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "8551:4:5"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "8557:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "8557:1:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8548:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "8548:2:5"
																},
																"nativeSrc": "8548:11:5",
																"nodeType": "YulFunctionCall",
																"src": "8548:11:5"
															},
															"nativeSrc": "8545:37:5",
															"nodeType": "YulIf",
															"src": "8545:37:5"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "8460:128:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "8491:1:5",
														"nodeType": "YulTypedName",
														"src": "8491:1:5",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "8494:1:5",
														"nodeType": "YulTypedName",
														"src": "8494:1:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "8500:4:5",
														"nodeType": "YulTypedName",
														"src": "8500:4:5",
														"type": ""
													}
												],
												"src": "8460:128:5"
											},
											{
												"body": {
													"nativeSrc": "8625:95:5",
													"nodeType": "YulBlock",
													"src": "8625:95:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8642:1:5",
																		"nodeType": "YulLiteral",
																		"src": "8642:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "8649:3:5",
																				"nodeType": "YulLiteral",
																				"src": "8649:3:5",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8654:10:5",
																				"nodeType": "YulLiteral",
																				"src": "8654:10:5",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "8645:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "8645:3:5"
																		},
																		"nativeSrc": "8645:20:5",
																		"nodeType": "YulFunctionCall",
																		"src": "8645:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8635:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "8635:6:5"
																},
																"nativeSrc": "8635:31:5",
																"nodeType": "YulFunctionCall",
																"src": "8635:31:5"
															},
															"nativeSrc": "8635:31:5",
															"nodeType": "YulExpressionStatement",
															"src": "8635:31:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8682:1:5",
																		"nodeType": "YulLiteral",
																		"src": "8682:1:5",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8685:4:5",
																		"nodeType": "YulLiteral",
																		"src": "8685:4:5",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8675:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "8675:6:5"
																},
																"nativeSrc": "8675:15:5",
																"nodeType": "YulFunctionCall",
																"src": "8675:15:5"
															},
															"nativeSrc": "8675:15:5",
															"nodeType": "YulExpressionStatement",
															"src": "8675:15:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8706:1:5",
																		"nodeType": "YulLiteral",
																		"src": "8706:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8709:4:5",
																		"nodeType": "YulLiteral",
																		"src": "8709:4:5",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "8699:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "8699:6:5"
																},
																"nativeSrc": "8699:15:5",
																"nodeType": "YulFunctionCall",
																"src": "8699:15:5"
															},
															"nativeSrc": "8699:15:5",
															"nodeType": "YulExpressionStatement",
															"src": "8699:15:5"
														}
													]
												},
												"name": "panic_error_0x32",
												"nativeSrc": "8593:127:5",
												"nodeType": "YulFunctionDefinition",
												"src": "8593:127:5"
											},
											{
												"body": {
													"nativeSrc": "8757:95:5",
													"nodeType": "YulBlock",
													"src": "8757:95:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8774:1:5",
																		"nodeType": "YulLiteral",
																		"src": "8774:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "8781:3:5",
																				"nodeType": "YulLiteral",
																				"src": "8781:3:5",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8786:10:5",
																				"nodeType": "YulLiteral",
																				"src": "8786:10:5",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "8777:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "8777:3:5"
																		},
																		"nativeSrc": "8777:20:5",
																		"nodeType": "YulFunctionCall",
																		"src": "8777:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8767:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "8767:6:5"
																},
																"nativeSrc": "8767:31:5",
																"nodeType": "YulFunctionCall",
																"src": "8767:31:5"
															},
															"nativeSrc": "8767:31:5",
															"nodeType": "YulExpressionStatement",
															"src": "8767:31:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8814:1:5",
																		"nodeType": "YulLiteral",
																		"src": "8814:1:5",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8817:4:5",
																		"nodeType": "YulLiteral",
																		"src": "8817:4:5",
																		"type": "",
																		"value": "0x31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8807:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "8807:6:5"
																},
																"nativeSrc": "8807:15:5",
																"nodeType": "YulFunctionCall",
																"src": "8807:15:5"
															},
															"nativeSrc": "8807:15:5",
															"nodeType": "YulExpressionStatement",
															"src": "8807:15:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8838:1:5",
																		"nodeType": "YulLiteral",
																		"src": "8838:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8841:4:5",
																		"nodeType": "YulLiteral",
																		"src": "8841:4:5",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "8831:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "8831:6:5"
																},
																"nativeSrc": "8831:15:5",
																"nodeType": "YulFunctionCall",
																"src": "8831:15:5"
															},
															"nativeSrc": "8831:15:5",
															"nodeType": "YulExpressionStatement",
															"src": "8831:15:5"
														}
													]
												},
												"name": "panic_error_0x31",
												"nativeSrc": "8725:127:5",
												"nodeType": "YulFunctionDefinition",
												"src": "8725:127:5"
											},
											{
												"body": {
													"nativeSrc": "9114:298:5",
													"nodeType": "YulBlock",
													"src": "9114:298:5",
													"statements": [
														{
															"nativeSrc": "9124:29:5",
															"nodeType": "YulVariableDeclaration",
															"src": "9124:29:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "9142:3:5",
																				"nodeType": "YulLiteral",
																				"src": "9142:3:5",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9147:1:5",
																				"nodeType": "YulLiteral",
																				"src": "9147:1:5",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "9138:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "9138:3:5"
																		},
																		"nativeSrc": "9138:11:5",
																		"nodeType": "YulFunctionCall",
																		"src": "9138:11:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9151:1:5",
																		"nodeType": "YulLiteral",
																		"src": "9151:1:5",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "9134:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "9134:3:5"
																},
																"nativeSrc": "9134:19:5",
																"nodeType": "YulFunctionCall",
																"src": "9134:19:5"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "9128:2:5",
																	"nodeType": "YulTypedName",
																	"src": "9128:2:5",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9169:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "9169:9:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "9184:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "9184:6:5"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "9192:2:5",
																				"nodeType": "YulIdentifier",
																				"src": "9192:2:5"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "9180:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "9180:3:5"
																		},
																		"nativeSrc": "9180:15:5",
																		"nodeType": "YulFunctionCall",
																		"src": "9180:15:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9162:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "9162:6:5"
																},
																"nativeSrc": "9162:34:5",
																"nodeType": "YulFunctionCall",
																"src": "9162:34:5"
															},
															"nativeSrc": "9162:34:5",
															"nodeType": "YulExpressionStatement",
															"src": "9162:34:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9216:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "9216:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9227:2:5",
																				"nodeType": "YulLiteral",
																				"src": "9227:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9212:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "9212:3:5"
																		},
																		"nativeSrc": "9212:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "9212:18:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "9236:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "9236:6:5"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "9244:2:5",
																				"nodeType": "YulIdentifier",
																				"src": "9244:2:5"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "9232:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "9232:3:5"
																		},
																		"nativeSrc": "9232:15:5",
																		"nodeType": "YulFunctionCall",
																		"src": "9232:15:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9205:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "9205:6:5"
																},
																"nativeSrc": "9205:43:5",
																"nodeType": "YulFunctionCall",
																"src": "9205:43:5"
															},
															"nativeSrc": "9205:43:5",
															"nodeType": "YulExpressionStatement",
															"src": "9205:43:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9268:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "9268:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9279:2:5",
																				"nodeType": "YulLiteral",
																				"src": "9279:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9264:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "9264:3:5"
																		},
																		"nativeSrc": "9264:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "9264:18:5"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "9284:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "9284:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9257:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "9257:6:5"
																},
																"nativeSrc": "9257:34:5",
																"nodeType": "YulFunctionCall",
																"src": "9257:34:5"
															},
															"nativeSrc": "9257:34:5",
															"nodeType": "YulExpressionStatement",
															"src": "9257:34:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9311:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "9311:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9322:2:5",
																				"nodeType": "YulLiteral",
																				"src": "9322:2:5",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9307:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "9307:3:5"
																		},
																		"nativeSrc": "9307:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "9307:18:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9327:3:5",
																		"nodeType": "YulLiteral",
																		"src": "9327:3:5",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9300:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "9300:6:5"
																},
																"nativeSrc": "9300:31:5",
																"nodeType": "YulFunctionCall",
																"src": "9300:31:5"
															},
															"nativeSrc": "9300:31:5",
															"nodeType": "YulExpressionStatement",
															"src": "9300:31:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9351:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "9351:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9362:3:5",
																				"nodeType": "YulLiteral",
																				"src": "9362:3:5",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9347:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "9347:3:5"
																		},
																		"nativeSrc": "9347:19:5",
																		"nodeType": "YulFunctionCall",
																		"src": "9347:19:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9368:1:5",
																		"nodeType": "YulLiteral",
																		"src": "9368:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9340:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "9340:6:5"
																},
																"nativeSrc": "9340:30:5",
																"nodeType": "YulFunctionCall",
																"src": "9340:30:5"
															},
															"nativeSrc": "9340:30:5",
															"nodeType": "YulExpressionStatement",
															"src": "9340:30:5"
														},
														{
															"nativeSrc": "9379:27:5",
															"nodeType": "YulAssignment",
															"src": "9379:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9391:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "9391:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9402:3:5",
																		"nodeType": "YulLiteral",
																		"src": "9402:3:5",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9387:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "9387:3:5"
																},
																"nativeSrc": "9387:19:5",
																"nodeType": "YulFunctionCall",
																"src": "9387:19:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9379:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "9379:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nativeSrc": "8857:555:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9067:9:5",
														"nodeType": "YulTypedName",
														"src": "9067:9:5",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "9078:6:5",
														"nodeType": "YulTypedName",
														"src": "9078:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9086:6:5",
														"nodeType": "YulTypedName",
														"src": "9086:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9094:6:5",
														"nodeType": "YulTypedName",
														"src": "9094:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9105:4:5",
														"nodeType": "YulTypedName",
														"src": "9105:4:5",
														"type": ""
													}
												],
												"src": "8857:555:5"
											},
											{
												"body": {
													"nativeSrc": "9497:210:5",
													"nodeType": "YulBlock",
													"src": "9497:210:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "9543:16:5",
																"nodeType": "YulBlock",
																"src": "9543:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "9552:1:5",
																					"nodeType": "YulLiteral",
																					"src": "9552:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "9555:1:5",
																					"nodeType": "YulLiteral",
																					"src": "9555:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "9545:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "9545:6:5"
																			},
																			"nativeSrc": "9545:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "9545:12:5"
																		},
																		"nativeSrc": "9545:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "9545:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9518:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "9518:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9527:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "9527:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9514:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "9514:3:5"
																		},
																		"nativeSrc": "9514:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "9514:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9539:2:5",
																		"nodeType": "YulLiteral",
																		"src": "9539:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "9510:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "9510:3:5"
																},
																"nativeSrc": "9510:32:5",
																"nodeType": "YulFunctionCall",
																"src": "9510:32:5"
															},
															"nativeSrc": "9507:52:5",
															"nodeType": "YulIf",
															"src": "9507:52:5"
														},
														{
															"nativeSrc": "9568:29:5",
															"nodeType": "YulVariableDeclaration",
															"src": "9568:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9587:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "9587:9:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "9581:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "9581:5:5"
																},
																"nativeSrc": "9581:16:5",
																"nodeType": "YulFunctionCall",
																"src": "9581:16:5"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "9572:5:5",
																	"nodeType": "YulTypedName",
																	"src": "9572:5:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9661:16:5",
																"nodeType": "YulBlock",
																"src": "9661:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "9670:1:5",
																					"nodeType": "YulLiteral",
																					"src": "9670:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "9673:1:5",
																					"nodeType": "YulLiteral",
																					"src": "9673:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "9663:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "9663:6:5"
																			},
																			"nativeSrc": "9663:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "9663:12:5"
																		},
																		"nativeSrc": "9663:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "9663:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "9619:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "9619:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "9630:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "9630:5:5"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "9641:3:5",
																								"nodeType": "YulLiteral",
																								"src": "9641:3:5",
																								"type": "",
																								"value": "224"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "9646:10:5",
																								"nodeType": "YulLiteral",
																								"src": "9646:10:5",
																								"type": "",
																								"value": "0xffffffff"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "9637:3:5",
																							"nodeType": "YulIdentifier",
																							"src": "9637:3:5"
																						},
																						"nativeSrc": "9637:20:5",
																						"nodeType": "YulFunctionCall",
																						"src": "9637:20:5"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "9626:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "9626:3:5"
																				},
																				"nativeSrc": "9626:32:5",
																				"nodeType": "YulFunctionCall",
																				"src": "9626:32:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "9616:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "9616:2:5"
																		},
																		"nativeSrc": "9616:43:5",
																		"nodeType": "YulFunctionCall",
																		"src": "9616:43:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "9609:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "9609:6:5"
																},
																"nativeSrc": "9609:51:5",
																"nodeType": "YulFunctionCall",
																"src": "9609:51:5"
															},
															"nativeSrc": "9606:71:5",
															"nodeType": "YulIf",
															"src": "9606:71:5"
														},
														{
															"nativeSrc": "9686:15:5",
															"nodeType": "YulAssignment",
															"src": "9686:15:5",
															"value": {
																"name": "value",
																"nativeSrc": "9696:5:5",
																"nodeType": "YulIdentifier",
																"src": "9696:5:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "9686:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "9686:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4_fromMemory",
												"nativeSrc": "9417:290:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9463:9:5",
														"nodeType": "YulTypedName",
														"src": "9463:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "9474:7:5",
														"nodeType": "YulTypedName",
														"src": "9474:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "9486:6:5",
														"nodeType": "YulTypedName",
														"src": "9486:6:5",
														"type": ""
													}
												],
												"src": "9417:290:5"
											},
											{
												"body": {
													"nativeSrc": "9925:449:5",
													"nodeType": "YulBlock",
													"src": "9925:449:5",
													"statements": [
														{
															"nativeSrc": "9935:29:5",
															"nodeType": "YulVariableDeclaration",
															"src": "9935:29:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "9953:3:5",
																				"nodeType": "YulLiteral",
																				"src": "9953:3:5",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9958:1:5",
																				"nodeType": "YulLiteral",
																				"src": "9958:1:5",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "9949:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "9949:3:5"
																		},
																		"nativeSrc": "9949:11:5",
																		"nodeType": "YulFunctionCall",
																		"src": "9949:11:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9962:1:5",
																		"nodeType": "YulLiteral",
																		"src": "9962:1:5",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "9945:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "9945:3:5"
																},
																"nativeSrc": "9945:19:5",
																"nodeType": "YulFunctionCall",
																"src": "9945:19:5"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "9939:2:5",
																	"nodeType": "YulTypedName",
																	"src": "9939:2:5",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9980:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "9980:9:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "9995:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "9995:6:5"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "10003:2:5",
																				"nodeType": "YulIdentifier",
																				"src": "10003:2:5"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "9991:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "9991:3:5"
																		},
																		"nativeSrc": "9991:15:5",
																		"nodeType": "YulFunctionCall",
																		"src": "9991:15:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9973:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "9973:6:5"
																},
																"nativeSrc": "9973:34:5",
																"nodeType": "YulFunctionCall",
																"src": "9973:34:5"
															},
															"nativeSrc": "9973:34:5",
															"nodeType": "YulExpressionStatement",
															"src": "9973:34:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10027:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "10027:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10038:2:5",
																				"nodeType": "YulLiteral",
																				"src": "10038:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10023:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "10023:3:5"
																		},
																		"nativeSrc": "10023:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "10023:18:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "10047:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "10047:6:5"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "10055:2:5",
																				"nodeType": "YulIdentifier",
																				"src": "10055:2:5"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "10043:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "10043:3:5"
																		},
																		"nativeSrc": "10043:15:5",
																		"nodeType": "YulFunctionCall",
																		"src": "10043:15:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10016:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "10016:6:5"
																},
																"nativeSrc": "10016:43:5",
																"nodeType": "YulFunctionCall",
																"src": "10016:43:5"
															},
															"nativeSrc": "10016:43:5",
															"nodeType": "YulExpressionStatement",
															"src": "10016:43:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10079:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "10079:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10090:2:5",
																				"nodeType": "YulLiteral",
																				"src": "10090:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10075:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "10075:3:5"
																		},
																		"nativeSrc": "10075:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "10075:18:5"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "10095:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "10095:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10068:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "10068:6:5"
																},
																"nativeSrc": "10068:34:5",
																"nodeType": "YulFunctionCall",
																"src": "10068:34:5"
															},
															"nativeSrc": "10068:34:5",
															"nodeType": "YulExpressionStatement",
															"src": "10068:34:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10122:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "10122:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10133:2:5",
																				"nodeType": "YulLiteral",
																				"src": "10133:2:5",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10118:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "10118:3:5"
																		},
																		"nativeSrc": "10118:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "10118:18:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10138:3:5",
																		"nodeType": "YulLiteral",
																		"src": "10138:3:5",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10111:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "10111:6:5"
																},
																"nativeSrc": "10111:31:5",
																"nodeType": "YulFunctionCall",
																"src": "10111:31:5"
															},
															"nativeSrc": "10111:31:5",
															"nodeType": "YulExpressionStatement",
															"src": "10111:31:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10162:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "10162:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10173:3:5",
																				"nodeType": "YulLiteral",
																				"src": "10173:3:5",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10158:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "10158:3:5"
																		},
																		"nativeSrc": "10158:19:5",
																		"nodeType": "YulFunctionCall",
																		"src": "10158:19:5"
																	},
																	{
																		"name": "value4",
																		"nativeSrc": "10179:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "10179:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10151:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "10151:6:5"
																},
																"nativeSrc": "10151:35:5",
																"nodeType": "YulFunctionCall",
																"src": "10151:35:5"
															},
															"nativeSrc": "10151:35:5",
															"nodeType": "YulExpressionStatement",
															"src": "10151:35:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10212:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "10212:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10223:3:5",
																				"nodeType": "YulLiteral",
																				"src": "10223:3:5",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10208:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "10208:3:5"
																		},
																		"nativeSrc": "10208:19:5",
																		"nodeType": "YulFunctionCall",
																		"src": "10208:19:5"
																	},
																	{
																		"name": "value3",
																		"nativeSrc": "10229:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "10229:6:5"
																	},
																	{
																		"name": "value4",
																		"nativeSrc": "10237:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "10237:6:5"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nativeSrc": "10195:12:5",
																	"nodeType": "YulIdentifier",
																	"src": "10195:12:5"
																},
																"nativeSrc": "10195:49:5",
																"nodeType": "YulFunctionCall",
																"src": "10195:49:5"
															},
															"nativeSrc": "10195:49:5",
															"nodeType": "YulExpressionStatement",
															"src": "10195:49:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10268:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "10268:9:5"
																					},
																					{
																						"name": "value4",
																						"nativeSrc": "10279:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "10279:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10264:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "10264:3:5"
																				},
																				"nativeSrc": "10264:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "10264:22:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10288:3:5",
																				"nodeType": "YulLiteral",
																				"src": "10288:3:5",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10260:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "10260:3:5"
																		},
																		"nativeSrc": "10260:32:5",
																		"nodeType": "YulFunctionCall",
																		"src": "10260:32:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10294:1:5",
																		"nodeType": "YulLiteral",
																		"src": "10294:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10253:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "10253:6:5"
																},
																"nativeSrc": "10253:43:5",
																"nodeType": "YulFunctionCall",
																"src": "10253:43:5"
															},
															"nativeSrc": "10253:43:5",
															"nodeType": "YulExpressionStatement",
															"src": "10253:43:5"
														},
														{
															"nativeSrc": "10305:63:5",
															"nodeType": "YulAssignment",
															"src": "10305:63:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10321:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "10321:9:5"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value4",
																								"nativeSrc": "10340:6:5",
																								"nodeType": "YulIdentifier",
																								"src": "10340:6:5"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "10348:2:5",
																								"nodeType": "YulLiteral",
																								"src": "10348:2:5",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "10336:3:5",
																							"nodeType": "YulIdentifier",
																							"src": "10336:3:5"
																						},
																						"nativeSrc": "10336:15:5",
																						"nodeType": "YulFunctionCall",
																						"src": "10336:15:5"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "10357:2:5",
																								"nodeType": "YulLiteral",
																								"src": "10357:2:5",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nativeSrc": "10353:3:5",
																							"nodeType": "YulIdentifier",
																							"src": "10353:3:5"
																						},
																						"nativeSrc": "10353:7:5",
																						"nodeType": "YulFunctionCall",
																						"src": "10353:7:5"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "10332:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "10332:3:5"
																				},
																				"nativeSrc": "10332:29:5",
																				"nodeType": "YulFunctionCall",
																				"src": "10332:29:5"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10317:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "10317:3:5"
																		},
																		"nativeSrc": "10317:45:5",
																		"nodeType": "YulFunctionCall",
																		"src": "10317:45:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10364:3:5",
																		"nodeType": "YulLiteral",
																		"src": "10364:3:5",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10313:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "10313:3:5"
																},
																"nativeSrc": "10313:55:5",
																"nodeType": "YulFunctionCall",
																"src": "10313:55:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10305:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "10305:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_calldata_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nativeSrc": "9712:662:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9862:9:5",
														"nodeType": "YulTypedName",
														"src": "9862:9:5",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "9873:6:5",
														"nodeType": "YulTypedName",
														"src": "9873:6:5",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "9881:6:5",
														"nodeType": "YulTypedName",
														"src": "9881:6:5",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "9889:6:5",
														"nodeType": "YulTypedName",
														"src": "9889:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9897:6:5",
														"nodeType": "YulTypedName",
														"src": "9897:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9905:6:5",
														"nodeType": "YulTypedName",
														"src": "9905:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9916:4:5",
														"nodeType": "YulTypedName",
														"src": "9916:4:5",
														"type": ""
													}
												],
												"src": "9712:662:5"
											},
											{
												"body": {
													"nativeSrc": "10563:837:5",
													"nodeType": "YulBlock",
													"src": "10563:837:5",
													"statements": [
														{
															"nativeSrc": "10573:12:5",
															"nodeType": "YulVariableDeclaration",
															"src": "10573:12:5",
															"value": {
																"kind": "number",
																"nativeSrc": "10584:1:5",
																"nodeType": "YulLiteral",
																"src": "10584:1:5",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "ret",
																	"nativeSrc": "10577:3:5",
																	"nodeType": "YulTypedName",
																	"src": "10577:3:5",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "10594:30:5",
															"nodeType": "YulVariableDeclaration",
															"src": "10594:30:5",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "10617:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "10617:6:5"
																	}
																],
																"functionName": {
																	"name": "sload",
																	"nativeSrc": "10611:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "10611:5:5"
																},
																"nativeSrc": "10611:13:5",
																"nodeType": "YulFunctionCall",
																"src": "10611:13:5"
															},
															"variables": [
																{
																	"name": "slotValue",
																	"nativeSrc": "10598:9:5",
																	"nodeType": "YulTypedName",
																	"src": "10598:9:5",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "10633:50:5",
															"nodeType": "YulVariableDeclaration",
															"src": "10633:50:5",
															"value": {
																"arguments": [
																	{
																		"name": "slotValue",
																		"nativeSrc": "10673:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "10673:9:5"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "10647:25:5",
																	"nodeType": "YulIdentifier",
																	"src": "10647:25:5"
																},
																"nativeSrc": "10647:36:5",
																"nodeType": "YulFunctionCall",
																"src": "10647:36:5"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "10637:6:5",
																	"nodeType": "YulTypedName",
																	"src": "10637:6:5",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "10692:11:5",
															"nodeType": "YulVariableDeclaration",
															"src": "10692:11:5",
															"value": {
																"kind": "number",
																"nativeSrc": "10702:1:5",
																"nodeType": "YulLiteral",
																"src": "10702:1:5",
																"type": "",
																"value": "1"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "10696:2:5",
																	"nodeType": "YulTypedName",
																	"src": "10696:2:5",
																	"type": ""
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "10752:126:5",
																		"nodeType": "YulBlock",
																		"src": "10752:126:5",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "pos",
																							"nativeSrc": "10773:3:5",
																							"nodeType": "YulIdentifier",
																							"src": "10773:3:5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "slotValue",
																									"nativeSrc": "10782:9:5",
																									"nodeType": "YulIdentifier",
																									"src": "10782:9:5"
																								},
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nativeSrc": "10797:3:5",
																											"nodeType": "YulLiteral",
																											"src": "10797:3:5",
																											"type": "",
																											"value": "255"
																										}
																									],
																									"functionName": {
																										"name": "not",
																										"nativeSrc": "10793:3:5",
																										"nodeType": "YulIdentifier",
																										"src": "10793:3:5"
																									},
																									"nativeSrc": "10793:8:5",
																									"nodeType": "YulFunctionCall",
																									"src": "10793:8:5"
																								}
																							],
																							"functionName": {
																								"name": "and",
																								"nativeSrc": "10778:3:5",
																								"nodeType": "YulIdentifier",
																								"src": "10778:3:5"
																							},
																							"nativeSrc": "10778:24:5",
																							"nodeType": "YulFunctionCall",
																							"src": "10778:24:5"
																						}
																					],
																					"functionName": {
																						"name": "mstore",
																						"nativeSrc": "10766:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "10766:6:5"
																					},
																					"nativeSrc": "10766:37:5",
																					"nodeType": "YulFunctionCall",
																					"src": "10766:37:5"
																				},
																				"nativeSrc": "10766:37:5",
																				"nodeType": "YulExpressionStatement",
																				"src": "10766:37:5"
																			},
																			{
																				"nativeSrc": "10816:52:5",
																				"nodeType": "YulAssignment",
																				"src": "10816:52:5",
																				"value": {
																					"arguments": [
																						{
																							"name": "pos",
																							"nativeSrc": "10827:3:5",
																							"nodeType": "YulIdentifier",
																							"src": "10827:3:5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "length",
																									"nativeSrc": "10836:6:5",
																									"nodeType": "YulIdentifier",
																									"src": "10836:6:5"
																								},
																								{
																									"arguments": [
																										{
																											"arguments": [
																												{
																													"name": "length",
																													"nativeSrc": "10858:6:5",
																													"nodeType": "YulIdentifier",
																													"src": "10858:6:5"
																												}
																											],
																											"functionName": {
																												"name": "iszero",
																												"nativeSrc": "10851:6:5",
																												"nodeType": "YulIdentifier",
																												"src": "10851:6:5"
																											},
																											"nativeSrc": "10851:14:5",
																											"nodeType": "YulFunctionCall",
																											"src": "10851:14:5"
																										}
																									],
																									"functionName": {
																										"name": "iszero",
																										"nativeSrc": "10844:6:5",
																										"nodeType": "YulIdentifier",
																										"src": "10844:6:5"
																									},
																									"nativeSrc": "10844:22:5",
																									"nodeType": "YulFunctionCall",
																									"src": "10844:22:5"
																								}
																							],
																							"functionName": {
																								"name": "mul",
																								"nativeSrc": "10832:3:5",
																								"nodeType": "YulIdentifier",
																								"src": "10832:3:5"
																							},
																							"nativeSrc": "10832:35:5",
																							"nodeType": "YulFunctionCall",
																							"src": "10832:35:5"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "10823:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "10823:3:5"
																					},
																					"nativeSrc": "10823:45:5",
																					"nodeType": "YulFunctionCall",
																					"src": "10823:45:5"
																				},
																				"variableNames": [
																					{
																						"name": "ret",
																						"nativeSrc": "10816:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "10816:3:5"
																					}
																				]
																			}
																		]
																	},
																	"nativeSrc": "10745:133:5",
																	"nodeType": "YulCase",
																	"src": "10745:133:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10750:1:5",
																		"nodeType": "YulLiteral",
																		"src": "10750:1:5",
																		"type": "",
																		"value": "0"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "10894:351:5",
																		"nodeType": "YulBlock",
																		"src": "10894:351:5",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "10915:1:5",
																							"nodeType": "YulLiteral",
																							"src": "10915:1:5",
																							"type": "",
																							"value": "0"
																						},
																						{
																							"name": "value0",
																							"nativeSrc": "10918:6:5",
																							"nodeType": "YulIdentifier",
																							"src": "10918:6:5"
																						}
																					],
																					"functionName": {
																						"name": "mstore",
																						"nativeSrc": "10908:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "10908:6:5"
																					},
																					"nativeSrc": "10908:17:5",
																					"nodeType": "YulFunctionCall",
																					"src": "10908:17:5"
																				},
																				"nativeSrc": "10908:17:5",
																				"nodeType": "YulExpressionStatement",
																				"src": "10908:17:5"
																			},
																			{
																				"nativeSrc": "10938:14:5",
																				"nodeType": "YulVariableDeclaration",
																				"src": "10938:14:5",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "10948:4:5",
																					"nodeType": "YulLiteral",
																					"src": "10948:4:5",
																					"type": "",
																					"value": "0x20"
																				},
																				"variables": [
																					{
																						"name": "_2",
																						"nativeSrc": "10942:2:5",
																						"nodeType": "YulTypedName",
																						"src": "10942:2:5",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "10965:33:5",
																				"nodeType": "YulVariableDeclaration",
																				"src": "10965:33:5",
																				"value": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "10990:1:5",
																							"nodeType": "YulLiteral",
																							"src": "10990:1:5",
																							"type": "",
																							"value": "0"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "10993:4:5",
																							"nodeType": "YulLiteral",
																							"src": "10993:4:5",
																							"type": "",
																							"value": "0x20"
																						}
																					],
																					"functionName": {
																						"name": "keccak256",
																						"nativeSrc": "10980:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "10980:9:5"
																					},
																					"nativeSrc": "10980:18:5",
																					"nodeType": "YulFunctionCall",
																					"src": "10980:18:5"
																				},
																				"variables": [
																					{
																						"name": "dataPos",
																						"nativeSrc": "10969:7:5",
																						"nodeType": "YulTypedName",
																						"src": "10969:7:5",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "11011:10:5",
																				"nodeType": "YulVariableDeclaration",
																				"src": "11011:10:5",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "11020:1:5",
																					"nodeType": "YulLiteral",
																					"src": "11020:1:5",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "11015:1:5",
																						"nodeType": "YulTypedName",
																						"src": "11015:1:5",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "11088:111:5",
																					"nodeType": "YulBlock",
																					"src": "11088:111:5",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "pos",
																												"nativeSrc": "11117:3:5",
																												"nodeType": "YulIdentifier",
																												"src": "11117:3:5"
																											},
																											{
																												"name": "i",
																												"nativeSrc": "11122:1:5",
																												"nodeType": "YulIdentifier",
																												"src": "11122:1:5"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "11113:3:5",
																											"nodeType": "YulIdentifier",
																											"src": "11113:3:5"
																										},
																										"nativeSrc": "11113:11:5",
																										"nodeType": "YulFunctionCall",
																										"src": "11113:11:5"
																									},
																									{
																										"arguments": [
																											{
																												"name": "dataPos",
																												"nativeSrc": "11132:7:5",
																												"nodeType": "YulIdentifier",
																												"src": "11132:7:5"
																											}
																										],
																										"functionName": {
																											"name": "sload",
																											"nativeSrc": "11126:5:5",
																											"nodeType": "YulIdentifier",
																											"src": "11126:5:5"
																										},
																										"nativeSrc": "11126:14:5",
																										"nodeType": "YulFunctionCall",
																										"src": "11126:14:5"
																									}
																								],
																								"functionName": {
																									"name": "mstore",
																									"nativeSrc": "11106:6:5",
																									"nodeType": "YulIdentifier",
																									"src": "11106:6:5"
																								},
																								"nativeSrc": "11106:35:5",
																								"nodeType": "YulFunctionCall",
																								"src": "11106:35:5"
																							},
																							"nativeSrc": "11106:35:5",
																							"nodeType": "YulExpressionStatement",
																							"src": "11106:35:5"
																						},
																						{
																							"nativeSrc": "11158:27:5",
																							"nodeType": "YulAssignment",
																							"src": "11158:27:5",
																							"value": {
																								"arguments": [
																									{
																										"name": "dataPos",
																										"nativeSrc": "11173:7:5",
																										"nodeType": "YulIdentifier",
																										"src": "11173:7:5"
																									},
																									{
																										"name": "_1",
																										"nativeSrc": "11182:2:5",
																										"nodeType": "YulIdentifier",
																										"src": "11182:2:5"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "11169:3:5",
																									"nodeType": "YulIdentifier",
																									"src": "11169:3:5"
																								},
																								"nativeSrc": "11169:16:5",
																								"nodeType": "YulFunctionCall",
																								"src": "11169:16:5"
																							},
																							"variableNames": [
																								{
																									"name": "dataPos",
																									"nativeSrc": "11158:7:5",
																									"nodeType": "YulIdentifier",
																									"src": "11158:7:5"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "11045:1:5",
																							"nodeType": "YulIdentifier",
																							"src": "11045:1:5"
																						},
																						{
																							"name": "length",
																							"nativeSrc": "11048:6:5",
																							"nodeType": "YulIdentifier",
																							"src": "11048:6:5"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "11042:2:5",
																						"nodeType": "YulIdentifier",
																						"src": "11042:2:5"
																					},
																					"nativeSrc": "11042:13:5",
																					"nodeType": "YulFunctionCall",
																					"src": "11042:13:5"
																				},
																				"nativeSrc": "11034:165:5",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "11056:19:5",
																					"nodeType": "YulBlock",
																					"src": "11056:19:5",
																					"statements": [
																						{
																							"nativeSrc": "11058:15:5",
																							"nodeType": "YulAssignment",
																							"src": "11058:15:5",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "11067:1:5",
																										"nodeType": "YulIdentifier",
																										"src": "11067:1:5"
																									},
																									{
																										"name": "_2",
																										"nativeSrc": "11070:2:5",
																										"nodeType": "YulIdentifier",
																										"src": "11070:2:5"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "11063:3:5",
																									"nodeType": "YulIdentifier",
																									"src": "11063:3:5"
																								},
																								"nativeSrc": "11063:10:5",
																								"nodeType": "YulFunctionCall",
																								"src": "11063:10:5"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "11058:1:5",
																									"nodeType": "YulIdentifier",
																									"src": "11058:1:5"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "11038:3:5",
																					"nodeType": "YulBlock",
																					"src": "11038:3:5",
																					"statements": []
																				},
																				"src": "11034:165:5"
																			},
																			{
																				"nativeSrc": "11212:23:5",
																				"nodeType": "YulAssignment",
																				"src": "11212:23:5",
																				"value": {
																					"arguments": [
																						{
																							"name": "pos",
																							"nativeSrc": "11223:3:5",
																							"nodeType": "YulIdentifier",
																							"src": "11223:3:5"
																						},
																						{
																							"name": "length",
																							"nativeSrc": "11228:6:5",
																							"nodeType": "YulIdentifier",
																							"src": "11228:6:5"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "11219:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "11219:3:5"
																					},
																					"nativeSrc": "11219:16:5",
																					"nodeType": "YulFunctionCall",
																					"src": "11219:16:5"
																				},
																				"variableNames": [
																					{
																						"name": "ret",
																						"nativeSrc": "11212:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "11212:3:5"
																					}
																				]
																			}
																		]
																	},
																	"nativeSrc": "10887:358:5",
																	"nodeType": "YulCase",
																	"src": "10887:358:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10892:1:5",
																		"nodeType": "YulLiteral",
																		"src": "10892:1:5",
																		"type": "",
																		"value": "1"
																	}
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "slotValue",
																		"nativeSrc": "10723:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "10723:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10734:1:5",
																		"nodeType": "YulLiteral",
																		"src": "10734:1:5",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "10719:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "10719:3:5"
																},
																"nativeSrc": "10719:17:5",
																"nodeType": "YulFunctionCall",
																"src": "10719:17:5"
															},
															"nativeSrc": "10712:533:5",
															"nodeType": "YulSwitch",
															"src": "10712:533:5"
														},
														{
															"nativeSrc": "11254:29:5",
															"nodeType": "YulVariableDeclaration",
															"src": "11254:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "11276:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "11276:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "11270:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "11270:5:5"
																},
																"nativeSrc": "11270:13:5",
																"nodeType": "YulFunctionCall",
																"src": "11270:13:5"
															},
															"variables": [
																{
																	"name": "length_1",
																	"nativeSrc": "11258:8:5",
																	"nodeType": "YulTypedName",
																	"src": "11258:8:5",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "11331:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "11331:6:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11339:4:5",
																				"nodeType": "YulLiteral",
																				"src": "11339:4:5",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11327:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "11327:3:5"
																		},
																		"nativeSrc": "11327:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "11327:17:5"
																	},
																	{
																		"name": "ret",
																		"nativeSrc": "11346:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "11346:3:5"
																	},
																	{
																		"name": "length_1",
																		"nativeSrc": "11351:8:5",
																		"nodeType": "YulIdentifier",
																		"src": "11351:8:5"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "11292:34:5",
																	"nodeType": "YulIdentifier",
																	"src": "11292:34:5"
																},
																"nativeSrc": "11292:68:5",
																"nodeType": "YulFunctionCall",
																"src": "11292:68:5"
															},
															"nativeSrc": "11292:68:5",
															"nodeType": "YulExpressionStatement",
															"src": "11292:68:5"
														},
														{
															"nativeSrc": "11369:25:5",
															"nodeType": "YulAssignment",
															"src": "11369:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "ret",
																		"nativeSrc": "11380:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "11380:3:5"
																	},
																	{
																		"name": "length_1",
																		"nativeSrc": "11385:8:5",
																		"nodeType": "YulIdentifier",
																		"src": "11385:8:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11376:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "11376:3:5"
																},
																"nativeSrc": "11376:18:5",
																"nodeType": "YulFunctionCall",
																"src": "11376:18:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "11369:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "11369:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_string_storage_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "10379:1021:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "10531:3:5",
														"nodeType": "YulTypedName",
														"src": "10531:3:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "10536:6:5",
														"nodeType": "YulTypedName",
														"src": "10536:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10544:6:5",
														"nodeType": "YulTypedName",
														"src": "10544:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "10555:3:5",
														"nodeType": "YulTypedName",
														"src": "10555:3:5",
														"type": ""
													}
												],
												"src": "10379:1021:5"
											},
											{
												"body": {
													"nativeSrc": "11524:63:5",
													"nodeType": "YulBlock",
													"src": "11524:63:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11541:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "11541:3:5"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "11546:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "11546:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11534:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "11534:6:5"
																},
																"nativeSrc": "11534:19:5",
																"nodeType": "YulFunctionCall",
																"src": "11534:19:5"
															},
															"nativeSrc": "11534:19:5",
															"nodeType": "YulExpressionStatement",
															"src": "11534:19:5"
														},
														{
															"nativeSrc": "11562:19:5",
															"nodeType": "YulAssignment",
															"src": "11562:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11573:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "11573:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11578:2:5",
																		"nodeType": "YulLiteral",
																		"src": "11578:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11569:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "11569:3:5"
																},
																"nativeSrc": "11569:12:5",
																"nodeType": "YulFunctionCall",
																"src": "11569:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "11562:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "11562:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_uint256__to_t_uint256__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "11405:182:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "11500:3:5",
														"nodeType": "YulTypedName",
														"src": "11500:3:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "11505:6:5",
														"nodeType": "YulTypedName",
														"src": "11505:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "11516:3:5",
														"nodeType": "YulTypedName",
														"src": "11516:3:5",
														"type": ""
													}
												],
												"src": "11405:182:5"
											},
											{
												"body": {
													"nativeSrc": "11822:256:5",
													"nodeType": "YulBlock",
													"src": "11822:256:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11839:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "11839:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11844:66:5",
																		"nodeType": "YulLiteral",
																		"src": "11844:66:5",
																		"type": "",
																		"value": "0x7b226e616d65223a20224161766547686f737465722023000000000000000000"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11832:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "11832:6:5"
																},
																"nativeSrc": "11832:79:5",
																"nodeType": "YulFunctionCall",
																"src": "11832:79:5"
															},
															"nativeSrc": "11832:79:5",
															"nodeType": "YulExpressionStatement",
															"src": "11832:79:5"
														},
														{
															"nativeSrc": "11920:27:5",
															"nodeType": "YulVariableDeclaration",
															"src": "11920:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "11940:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "11940:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "11934:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "11934:5:5"
																},
																"nativeSrc": "11934:13:5",
																"nodeType": "YulFunctionCall",
																"src": "11934:13:5"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "11924:6:5",
																	"nodeType": "YulTypedName",
																	"src": "11924:6:5",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "11995:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "11995:6:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12003:4:5",
																				"nodeType": "YulLiteral",
																				"src": "12003:4:5",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11991:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "11991:3:5"
																		},
																		"nativeSrc": "11991:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "11991:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nativeSrc": "12014:3:5",
																				"nodeType": "YulIdentifier",
																				"src": "12014:3:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12019:2:5",
																				"nodeType": "YulLiteral",
																				"src": "12019:2:5",
																				"type": "",
																				"value": "23"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12010:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "12010:3:5"
																		},
																		"nativeSrc": "12010:12:5",
																		"nodeType": "YulFunctionCall",
																		"src": "12010:12:5"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "12024:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "12024:6:5"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "11956:34:5",
																	"nodeType": "YulIdentifier",
																	"src": "11956:34:5"
																},
																"nativeSrc": "11956:75:5",
																"nodeType": "YulFunctionCall",
																"src": "11956:75:5"
															},
															"nativeSrc": "11956:75:5",
															"nodeType": "YulExpressionStatement",
															"src": "11956:75:5"
														},
														{
															"nativeSrc": "12040:32:5",
															"nodeType": "YulAssignment",
															"src": "12040:32:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nativeSrc": "12055:3:5",
																				"nodeType": "YulIdentifier",
																				"src": "12055:3:5"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "12060:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "12060:6:5"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12051:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "12051:3:5"
																		},
																		"nativeSrc": "12051:16:5",
																		"nodeType": "YulFunctionCall",
																		"src": "12051:16:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12069:2:5",
																		"nodeType": "YulLiteral",
																		"src": "12069:2:5",
																		"type": "",
																		"value": "23"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12047:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "12047:3:5"
																},
																"nativeSrc": "12047:25:5",
																"nodeType": "YulFunctionCall",
																"src": "12047:25:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "12040:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "12040:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_fe9d4c51812073cc5e8ec967a205a059f799b9890a5eda0866690d8d8786f686_t_string_memory_ptr__to_t_bytes23_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "11592:486:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "11798:3:5",
														"nodeType": "YulTypedName",
														"src": "11798:3:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "11803:6:5",
														"nodeType": "YulTypedName",
														"src": "11803:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "11814:3:5",
														"nodeType": "YulTypedName",
														"src": "11814:3:5",
														"type": ""
													}
												],
												"src": "11592:486:5"
											},
											{
												"body": {
													"nativeSrc": "12323:690:5",
													"nodeType": "YulBlock",
													"src": "12323:690:5",
													"statements": [
														{
															"nativeSrc": "12333:27:5",
															"nodeType": "YulVariableDeclaration",
															"src": "12333:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "12353:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "12353:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "12347:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "12347:5:5"
																},
																"nativeSrc": "12347:13:5",
																"nodeType": "YulFunctionCall",
																"src": "12347:13:5"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "12337:6:5",
																	"nodeType": "YulTypedName",
																	"src": "12337:6:5",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "12408:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "12408:6:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12416:4:5",
																				"nodeType": "YulLiteral",
																				"src": "12416:4:5",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12404:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "12404:3:5"
																		},
																		"nativeSrc": "12404:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "12404:17:5"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "12423:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "12423:3:5"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "12428:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "12428:6:5"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "12369:34:5",
																	"nodeType": "YulIdentifier",
																	"src": "12369:34:5"
																},
																"nativeSrc": "12369:66:5",
																"nodeType": "YulFunctionCall",
																"src": "12369:66:5"
															},
															"nativeSrc": "12369:66:5",
															"nodeType": "YulExpressionStatement",
															"src": "12369:66:5"
														},
														{
															"nativeSrc": "12444:29:5",
															"nodeType": "YulVariableDeclaration",
															"src": "12444:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12461:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "12461:3:5"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "12466:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "12466:6:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12457:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "12457:3:5"
																},
																"nativeSrc": "12457:16:5",
																"nodeType": "YulFunctionCall",
																"src": "12457:16:5"
															},
															"variables": [
																{
																	"name": "end_1",
																	"nativeSrc": "12448:5:5",
																	"nodeType": "YulTypedName",
																	"src": "12448:5:5",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "end_1",
																		"nativeSrc": "12489:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "12489:5:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12496:66:5",
																		"nodeType": "YulLiteral",
																		"src": "12496:66:5",
																		"type": "",
																		"value": "0x222c226465736372697074696f6e223a224120636f6c6c656374696f6e206f66"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12482:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "12482:6:5"
																},
																"nativeSrc": "12482:81:5",
																"nodeType": "YulFunctionCall",
																"src": "12482:81:5"
															},
															"nativeSrc": "12482:81:5",
															"nodeType": "YulExpressionStatement",
															"src": "12482:81:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "end_1",
																				"nativeSrc": "12583:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "12583:5:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12590:4:5",
																				"nodeType": "YulLiteral",
																				"src": "12590:4:5",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12579:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "12579:3:5"
																		},
																		"nativeSrc": "12579:16:5",
																		"nodeType": "YulFunctionCall",
																		"src": "12579:16:5"
																	},
																	{
																		"hexValue": "2031352c303030204161766547686f7374657220656e61626c65642062792045",
																		"kind": "string",
																		"nativeSrc": "12597:34:5",
																		"nodeType": "YulLiteral",
																		"src": "12597:34:5",
																		"type": "",
																		"value": " 15,000 AaveGhoster enabled by E"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12572:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "12572:6:5"
																},
																"nativeSrc": "12572:60:5",
																"nodeType": "YulFunctionCall",
																"src": "12572:60:5"
															},
															"nativeSrc": "12572:60:5",
															"nodeType": "YulExpressionStatement",
															"src": "12572:60:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "end_1",
																				"nativeSrc": "12652:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "12652:5:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12659:2:5",
																				"nodeType": "YulLiteral",
																				"src": "12659:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12648:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "12648:3:5"
																		},
																		"nativeSrc": "12648:14:5",
																		"nodeType": "YulFunctionCall",
																		"src": "12648:14:5"
																	},
																	{
																		"hexValue": "52433430342c20616e206578706572696d656e74616c20746f6b656e20737461",
																		"kind": "string",
																		"nativeSrc": "12664:34:5",
																		"nodeType": "YulLiteral",
																		"src": "12664:34:5",
																		"type": "",
																		"value": "RC404, an experimental token sta"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12641:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "12641:6:5"
																},
																"nativeSrc": "12641:58:5",
																"nodeType": "YulFunctionCall",
																"src": "12641:58:5"
															},
															"nativeSrc": "12641:58:5",
															"nodeType": "YulExpressionStatement",
															"src": "12641:58:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "end_1",
																				"nativeSrc": "12719:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "12719:5:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12726:2:5",
																				"nodeType": "YulLiteral",
																				"src": "12726:2:5",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12715:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "12715:3:5"
																		},
																		"nativeSrc": "12715:14:5",
																		"nodeType": "YulFunctionCall",
																		"src": "12715:14:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12731:66:5",
																		"nodeType": "YulLiteral",
																		"src": "12731:66:5",
																		"type": "",
																		"value": "0x6e6461726420696e7370697265642062792050616e646f7261222c2265787465"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12708:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "12708:6:5"
																},
																"nativeSrc": "12708:90:5",
																"nodeType": "YulFunctionCall",
																"src": "12708:90:5"
															},
															"nativeSrc": "12708:90:5",
															"nodeType": "YulExpressionStatement",
															"src": "12708:90:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "end_1",
																				"nativeSrc": "12818:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "12818:5:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12825:3:5",
																				"nodeType": "YulLiteral",
																				"src": "12825:3:5",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12814:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "12814:3:5"
																		},
																		"nativeSrc": "12814:15:5",
																		"nodeType": "YulFunctionCall",
																		"src": "12814:15:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12831:66:5",
																		"nodeType": "YulLiteral",
																		"src": "12831:66:5",
																		"type": "",
																		"value": "0x726e616c5f75726c223a2268747470733a2f2f6161766567686f737465722e6f"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12807:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "12807:6:5"
																},
																"nativeSrc": "12807:91:5",
																"nodeType": "YulFunctionCall",
																"src": "12807:91:5"
															},
															"nativeSrc": "12807:91:5",
															"nodeType": "YulExpressionStatement",
															"src": "12807:91:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "end_1",
																				"nativeSrc": "12918:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "12918:5:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12925:3:5",
																				"nodeType": "YulLiteral",
																				"src": "12925:3:5",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12914:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "12914:3:5"
																		},
																		"nativeSrc": "12914:15:5",
																		"nodeType": "YulFunctionCall",
																		"src": "12914:15:5"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "12935:3:5",
																				"nodeType": "YulLiteral",
																				"src": "12935:3:5",
																				"type": "",
																				"value": "129"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12940:34:5",
																				"nodeType": "YulLiteral",
																				"src": "12940:34:5",
																				"type": "",
																				"value": "0x373634b73291161134b6b0b3b2911d11"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "12931:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "12931:3:5"
																		},
																		"nativeSrc": "12931:44:5",
																		"nodeType": "YulFunctionCall",
																		"src": "12931:44:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12907:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "12907:6:5"
																},
																"nativeSrc": "12907:69:5",
																"nodeType": "YulFunctionCall",
																"src": "12907:69:5"
															},
															"nativeSrc": "12907:69:5",
															"nodeType": "YulExpressionStatement",
															"src": "12907:69:5"
														},
														{
															"nativeSrc": "12985:22:5",
															"nodeType": "YulAssignment",
															"src": "12985:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "end_1",
																		"nativeSrc": "12996:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "12996:5:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13003:3:5",
																		"nodeType": "YulLiteral",
																		"src": "13003:3:5",
																		"type": "",
																		"value": "176"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12992:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "12992:3:5"
																},
																"nativeSrc": "12992:15:5",
																"nodeType": "YulFunctionCall",
																"src": "12992:15:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "12985:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "12985:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_string_memory_ptr_t_stringliteral_854f884486bac1c129d284ef0dc887ee8e77308cd46a54222bf4afc46d6dcf9a__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "12083:930:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "12299:3:5",
														"nodeType": "YulTypedName",
														"src": "12299:3:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "12304:6:5",
														"nodeType": "YulTypedName",
														"src": "12304:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "12315:3:5",
														"nodeType": "YulTypedName",
														"src": "12315:3:5",
														"type": ""
													}
												],
												"src": "12083:930:5"
											},
											{
												"body": {
													"nativeSrc": "13205:309:5",
													"nodeType": "YulBlock",
													"src": "13205:309:5",
													"statements": [
														{
															"nativeSrc": "13215:27:5",
															"nodeType": "YulVariableDeclaration",
															"src": "13215:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "13235:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "13235:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "13229:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "13229:5:5"
																},
																"nativeSrc": "13229:13:5",
																"nodeType": "YulFunctionCall",
																"src": "13229:13:5"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "13219:6:5",
																	"nodeType": "YulTypedName",
																	"src": "13219:6:5",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "13290:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "13290:6:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13298:4:5",
																				"nodeType": "YulLiteral",
																				"src": "13298:4:5",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13286:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "13286:3:5"
																		},
																		"nativeSrc": "13286:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "13286:17:5"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "13305:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "13305:3:5"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "13310:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "13310:6:5"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "13251:34:5",
																	"nodeType": "YulIdentifier",
																	"src": "13251:34:5"
																},
																"nativeSrc": "13251:66:5",
																"nodeType": "YulFunctionCall",
																"src": "13251:66:5"
															},
															"nativeSrc": "13251:66:5",
															"nodeType": "YulExpressionStatement",
															"src": "13251:66:5"
														},
														{
															"nativeSrc": "13326:29:5",
															"nodeType": "YulVariableDeclaration",
															"src": "13326:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13343:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "13343:3:5"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "13348:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "13348:6:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13339:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "13339:3:5"
																},
																"nativeSrc": "13339:16:5",
																"nodeType": "YulFunctionCall",
																"src": "13339:16:5"
															},
															"variables": [
																{
																	"name": "end_1",
																	"nativeSrc": "13330:5:5",
																	"nodeType": "YulTypedName",
																	"src": "13330:5:5",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "13364:29:5",
															"nodeType": "YulVariableDeclaration",
															"src": "13364:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "13386:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "13386:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "13380:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "13380:5:5"
																},
																"nativeSrc": "13380:13:5",
																"nodeType": "YulFunctionCall",
																"src": "13380:13:5"
															},
															"variables": [
																{
																	"name": "length_1",
																	"nativeSrc": "13368:8:5",
																	"nodeType": "YulTypedName",
																	"src": "13368:8:5",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "13441:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "13441:6:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13449:4:5",
																				"nodeType": "YulLiteral",
																				"src": "13449:4:5",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13437:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "13437:3:5"
																		},
																		"nativeSrc": "13437:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "13437:17:5"
																	},
																	{
																		"name": "end_1",
																		"nativeSrc": "13456:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "13456:5:5"
																	},
																	{
																		"name": "length_1",
																		"nativeSrc": "13463:8:5",
																		"nodeType": "YulIdentifier",
																		"src": "13463:8:5"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "13402:34:5",
																	"nodeType": "YulIdentifier",
																	"src": "13402:34:5"
																},
																"nativeSrc": "13402:70:5",
																"nodeType": "YulFunctionCall",
																"src": "13402:70:5"
															},
															"nativeSrc": "13402:70:5",
															"nodeType": "YulExpressionStatement",
															"src": "13402:70:5"
														},
														{
															"nativeSrc": "13481:27:5",
															"nodeType": "YulAssignment",
															"src": "13481:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "end_1",
																		"nativeSrc": "13492:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "13492:5:5"
																	},
																	{
																		"name": "length_1",
																		"nativeSrc": "13499:8:5",
																		"nodeType": "YulIdentifier",
																		"src": "13499:8:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13488:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "13488:3:5"
																},
																"nativeSrc": "13488:20:5",
																"nodeType": "YulFunctionCall",
																"src": "13488:20:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "13481:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "13481:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "13018:496:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "13173:3:5",
														"nodeType": "YulTypedName",
														"src": "13173:3:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "13178:6:5",
														"nodeType": "YulTypedName",
														"src": "13178:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "13186:6:5",
														"nodeType": "YulTypedName",
														"src": "13186:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "13197:3:5",
														"nodeType": "YulTypedName",
														"src": "13197:3:5",
														"type": ""
													}
												],
												"src": "13018:496:5"
											},
											{
												"body": {
													"nativeSrc": "13759:327:5",
													"nodeType": "YulBlock",
													"src": "13759:327:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13776:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "13776:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13781:66:5",
																		"nodeType": "YulLiteral",
																		"src": "13781:66:5",
																		"type": "",
																		"value": "0x222c2261747472696275746573223a5b7b2274726169745f74797065223a2243"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13769:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "13769:6:5"
																},
																"nativeSrc": "13769:79:5",
																"nodeType": "YulFunctionCall",
																"src": "13769:79:5"
															},
															"nativeSrc": "13769:79:5",
															"nodeType": "YulExpressionStatement",
															"src": "13769:79:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nativeSrc": "13868:3:5",
																				"nodeType": "YulIdentifier",
																				"src": "13868:3:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13873:2:5",
																				"nodeType": "YulLiteral",
																				"src": "13873:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13864:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "13864:3:5"
																		},
																		"nativeSrc": "13864:12:5",
																		"nodeType": "YulFunctionCall",
																		"src": "13864:12:5"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "13882:3:5",
																				"nodeType": "YulLiteral",
																				"src": "13882:3:5",
																				"type": "",
																				"value": "137"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13887:32:5",
																				"nodeType": "YulLiteral",
																				"src": "13887:32:5",
																				"type": "",
																				"value": "0x37b637b91116113b30b63ab2911d11"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "13878:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "13878:3:5"
																		},
																		"nativeSrc": "13878:42:5",
																		"nodeType": "YulFunctionCall",
																		"src": "13878:42:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13857:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "13857:6:5"
																},
																"nativeSrc": "13857:64:5",
																"nodeType": "YulFunctionCall",
																"src": "13857:64:5"
															},
															"nativeSrc": "13857:64:5",
															"nodeType": "YulExpressionStatement",
															"src": "13857:64:5"
														},
														{
															"nativeSrc": "13930:27:5",
															"nodeType": "YulVariableDeclaration",
															"src": "13930:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "13950:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "13950:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "13944:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "13944:5:5"
																},
																"nativeSrc": "13944:13:5",
																"nodeType": "YulFunctionCall",
																"src": "13944:13:5"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "13934:6:5",
																	"nodeType": "YulTypedName",
																	"src": "13934:6:5",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "14005:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "14005:6:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14013:2:5",
																				"nodeType": "YulLiteral",
																				"src": "14013:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14001:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "14001:3:5"
																		},
																		"nativeSrc": "14001:15:5",
																		"nodeType": "YulFunctionCall",
																		"src": "14001:15:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nativeSrc": "14022:3:5",
																				"nodeType": "YulIdentifier",
																				"src": "14022:3:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14027:2:5",
																				"nodeType": "YulLiteral",
																				"src": "14027:2:5",
																				"type": "",
																				"value": "47"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14018:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "14018:3:5"
																		},
																		"nativeSrc": "14018:12:5",
																		"nodeType": "YulFunctionCall",
																		"src": "14018:12:5"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "14032:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "14032:6:5"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "13966:34:5",
																	"nodeType": "YulIdentifier",
																	"src": "13966:34:5"
																},
																"nativeSrc": "13966:73:5",
																"nodeType": "YulFunctionCall",
																"src": "13966:73:5"
															},
															"nativeSrc": "13966:73:5",
															"nodeType": "YulExpressionStatement",
															"src": "13966:73:5"
														},
														{
															"nativeSrc": "14048:32:5",
															"nodeType": "YulAssignment",
															"src": "14048:32:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nativeSrc": "14063:3:5",
																				"nodeType": "YulIdentifier",
																				"src": "14063:3:5"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "14068:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "14068:6:5"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14059:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "14059:3:5"
																		},
																		"nativeSrc": "14059:16:5",
																		"nodeType": "YulFunctionCall",
																		"src": "14059:16:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14077:2:5",
																		"nodeType": "YulLiteral",
																		"src": "14077:2:5",
																		"type": "",
																		"value": "47"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14055:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "14055:3:5"
																},
																"nativeSrc": "14055:25:5",
																"nodeType": "YulFunctionCall",
																"src": "14055:25:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "14048:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "14048:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_7196ac4a970ec79361a69477bc1a540e85d3935600f7f1445303dbc04fc044ce_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "13519:567:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "13735:3:5",
														"nodeType": "YulTypedName",
														"src": "13735:3:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "13740:6:5",
														"nodeType": "YulTypedName",
														"src": "13740:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "13751:3:5",
														"nodeType": "YulTypedName",
														"src": "13751:3:5",
														"type": ""
													}
												],
												"src": "13519:567:5"
											},
											{
												"body": {
													"nativeSrc": "14321:219:5",
													"nodeType": "YulBlock",
													"src": "14321:219:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14338:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "14338:3:5"
																	},
																	{
																		"hexValue": "646174613a6170706c69636174696f6e2f6a736f6e3b757466382c",
																		"kind": "string",
																		"nativeSrc": "14343:29:5",
																		"nodeType": "YulLiteral",
																		"src": "14343:29:5",
																		"type": "",
																		"value": "data:application/json;utf8,"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14331:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "14331:6:5"
																},
																"nativeSrc": "14331:42:5",
																"nodeType": "YulFunctionCall",
																"src": "14331:42:5"
															},
															"nativeSrc": "14331:42:5",
															"nodeType": "YulExpressionStatement",
															"src": "14331:42:5"
														},
														{
															"nativeSrc": "14382:27:5",
															"nodeType": "YulVariableDeclaration",
															"src": "14382:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "14402:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "14402:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "14396:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "14396:5:5"
																},
																"nativeSrc": "14396:13:5",
																"nodeType": "YulFunctionCall",
																"src": "14396:13:5"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "14386:6:5",
																	"nodeType": "YulTypedName",
																	"src": "14386:6:5",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "14457:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "14457:6:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14465:4:5",
																				"nodeType": "YulLiteral",
																				"src": "14465:4:5",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14453:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "14453:3:5"
																		},
																		"nativeSrc": "14453:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "14453:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nativeSrc": "14476:3:5",
																				"nodeType": "YulIdentifier",
																				"src": "14476:3:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14481:2:5",
																				"nodeType": "YulLiteral",
																				"src": "14481:2:5",
																				"type": "",
																				"value": "27"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14472:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "14472:3:5"
																		},
																		"nativeSrc": "14472:12:5",
																		"nodeType": "YulFunctionCall",
																		"src": "14472:12:5"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "14486:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "14486:6:5"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "14418:34:5",
																	"nodeType": "YulIdentifier",
																	"src": "14418:34:5"
																},
																"nativeSrc": "14418:75:5",
																"nodeType": "YulFunctionCall",
																"src": "14418:75:5"
															},
															"nativeSrc": "14418:75:5",
															"nodeType": "YulExpressionStatement",
															"src": "14418:75:5"
														},
														{
															"nativeSrc": "14502:32:5",
															"nodeType": "YulAssignment",
															"src": "14502:32:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nativeSrc": "14517:3:5",
																				"nodeType": "YulIdentifier",
																				"src": "14517:3:5"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "14522:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "14522:6:5"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14513:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "14513:3:5"
																		},
																		"nativeSrc": "14513:16:5",
																		"nodeType": "YulFunctionCall",
																		"src": "14513:16:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14531:2:5",
																		"nodeType": "YulLiteral",
																		"src": "14531:2:5",
																		"type": "",
																		"value": "27"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14509:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "14509:3:5"
																},
																"nativeSrc": "14509:25:5",
																"nodeType": "YulFunctionCall",
																"src": "14509:25:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "14502:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "14502:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_947ee3b345bbae8b47ca548e58fd3eb9fc264e3488d72aeca69c8f1f89149b7a_t_string_memory_ptr__to_t_bytes27_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "14091:449:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "14297:3:5",
														"nodeType": "YulTypedName",
														"src": "14297:3:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "14302:6:5",
														"nodeType": "YulTypedName",
														"src": "14302:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "14313:3:5",
														"nodeType": "YulTypedName",
														"src": "14313:3:5",
														"type": ""
													}
												],
												"src": "14091:449:5"
											},
											{
												"body": {
													"nativeSrc": "14609:352:5",
													"nodeType": "YulBlock",
													"src": "14609:352:5",
													"statements": [
														{
															"nativeSrc": "14619:16:5",
															"nodeType": "YulVariableDeclaration",
															"src": "14619:16:5",
															"value": {
																"kind": "number",
																"nativeSrc": "14634:1:5",
																"nodeType": "YulLiteral",
																"src": "14634:1:5",
																"type": "",
																"value": "1"
															},
															"variables": [
																{
																	"name": "power_1",
																	"nativeSrc": "14623:7:5",
																	"nodeType": "YulTypedName",
																	"src": "14623:7:5",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "14644:10:5",
															"nodeType": "YulAssignment",
															"src": "14644:10:5",
															"value": {
																"kind": "number",
																"nativeSrc": "14653:1:5",
																"nodeType": "YulLiteral",
																"src": "14653:1:5",
																"type": "",
																"value": "1"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "14644:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "14644:5:5"
																}
															]
														},
														{
															"nativeSrc": "14663:13:5",
															"nodeType": "YulAssignment",
															"src": "14663:13:5",
															"value": {
																"name": "_base",
																"nativeSrc": "14671:5:5",
																"nodeType": "YulIdentifier",
																"src": "14671:5:5"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nativeSrc": "14663:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "14663:4:5"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "14727:228:5",
																"nodeType": "YulBlock",
																"src": "14727:228:5",
																"statements": [
																	{
																		"body": {
																			"nativeSrc": "14772:22:5",
																			"nodeType": "YulBlock",
																			"src": "14772:22:5",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nativeSrc": "14774:16:5",
																							"nodeType": "YulIdentifier",
																							"src": "14774:16:5"
																						},
																						"nativeSrc": "14774:18:5",
																						"nodeType": "YulFunctionCall",
																						"src": "14774:18:5"
																					},
																					"nativeSrc": "14774:18:5",
																					"nodeType": "YulExpressionStatement",
																					"src": "14774:18:5"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "14747:4:5",
																					"nodeType": "YulIdentifier",
																					"src": "14747:4:5"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "14761:1:5",
																									"nodeType": "YulLiteral",
																									"src": "14761:1:5",
																									"type": "",
																									"value": "0"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "14757:3:5",
																								"nodeType": "YulIdentifier",
																								"src": "14757:3:5"
																							},
																							"nativeSrc": "14757:6:5",
																							"nodeType": "YulFunctionCall",
																							"src": "14757:6:5"
																						},
																						{
																							"name": "base",
																							"nativeSrc": "14765:4:5",
																							"nodeType": "YulIdentifier",
																							"src": "14765:4:5"
																						}
																					],
																					"functionName": {
																						"name": "div",
																						"nativeSrc": "14753:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "14753:3:5"
																					},
																					"nativeSrc": "14753:17:5",
																					"nodeType": "YulFunctionCall",
																					"src": "14753:17:5"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nativeSrc": "14744:2:5",
																				"nodeType": "YulIdentifier",
																				"src": "14744:2:5"
																			},
																			"nativeSrc": "14744:27:5",
																			"nodeType": "YulFunctionCall",
																			"src": "14744:27:5"
																		},
																		"nativeSrc": "14741:53:5",
																		"nodeType": "YulIf",
																		"src": "14741:53:5"
																	},
																	{
																		"body": {
																			"nativeSrc": "14833:29:5",
																			"nodeType": "YulBlock",
																			"src": "14833:29:5",
																			"statements": [
																				{
																					"nativeSrc": "14835:25:5",
																					"nodeType": "YulAssignment",
																					"src": "14835:25:5",
																					"value": {
																						"arguments": [
																							{
																								"name": "power",
																								"nativeSrc": "14848:5:5",
																								"nodeType": "YulIdentifier",
																								"src": "14848:5:5"
																							},
																							{
																								"name": "base",
																								"nativeSrc": "14855:4:5",
																								"nodeType": "YulIdentifier",
																								"src": "14855:4:5"
																							}
																						],
																						"functionName": {
																							"name": "mul",
																							"nativeSrc": "14844:3:5",
																							"nodeType": "YulIdentifier",
																							"src": "14844:3:5"
																						},
																						"nativeSrc": "14844:16:5",
																						"nodeType": "YulFunctionCall",
																						"src": "14844:16:5"
																					},
																					"variableNames": [
																						{
																							"name": "power",
																							"nativeSrc": "14835:5:5",
																							"nodeType": "YulIdentifier",
																							"src": "14835:5:5"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nativeSrc": "14814:8:5",
																					"nodeType": "YulIdentifier",
																					"src": "14814:8:5"
																				},
																				{
																					"name": "power_1",
																					"nativeSrc": "14824:7:5",
																					"nodeType": "YulIdentifier",
																					"src": "14824:7:5"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "14810:3:5",
																				"nodeType": "YulIdentifier",
																				"src": "14810:3:5"
																			},
																			"nativeSrc": "14810:22:5",
																			"nodeType": "YulFunctionCall",
																			"src": "14810:22:5"
																		},
																		"nativeSrc": "14807:55:5",
																		"nodeType": "YulIf",
																		"src": "14807:55:5"
																	},
																	{
																		"nativeSrc": "14875:23:5",
																		"nodeType": "YulAssignment",
																		"src": "14875:23:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "14887:4:5",
																					"nodeType": "YulIdentifier",
																					"src": "14887:4:5"
																				},
																				{
																					"name": "base",
																					"nativeSrc": "14893:4:5",
																					"nodeType": "YulIdentifier",
																					"src": "14893:4:5"
																				}
																			],
																			"functionName": {
																				"name": "mul",
																				"nativeSrc": "14883:3:5",
																				"nodeType": "YulIdentifier",
																				"src": "14883:3:5"
																			},
																			"nativeSrc": "14883:15:5",
																			"nodeType": "YulFunctionCall",
																			"src": "14883:15:5"
																		},
																		"variableNames": [
																			{
																				"name": "base",
																				"nativeSrc": "14875:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "14875:4:5"
																			}
																		]
																	},
																	{
																		"nativeSrc": "14911:34:5",
																		"nodeType": "YulAssignment",
																		"src": "14911:34:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "power_1",
																					"nativeSrc": "14927:7:5",
																					"nodeType": "YulIdentifier",
																					"src": "14927:7:5"
																				},
																				{
																					"name": "exponent",
																					"nativeSrc": "14936:8:5",
																					"nodeType": "YulIdentifier",
																					"src": "14936:8:5"
																				}
																			],
																			"functionName": {
																				"name": "shr",
																				"nativeSrc": "14923:3:5",
																				"nodeType": "YulIdentifier",
																				"src": "14923:3:5"
																			},
																			"nativeSrc": "14923:22:5",
																			"nodeType": "YulFunctionCall",
																			"src": "14923:22:5"
																		},
																		"variableNames": [
																			{
																				"name": "exponent",
																				"nativeSrc": "14911:8:5",
																				"nodeType": "YulIdentifier",
																				"src": "14911:8:5"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "14696:8:5",
																		"nodeType": "YulIdentifier",
																		"src": "14696:8:5"
																	},
																	{
																		"name": "power_1",
																		"nativeSrc": "14706:7:5",
																		"nodeType": "YulIdentifier",
																		"src": "14706:7:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "14693:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "14693:2:5"
																},
																"nativeSrc": "14693:21:5",
																"nodeType": "YulFunctionCall",
																"src": "14693:21:5"
															},
															"nativeSrc": "14685:270:5",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "14715:3:5",
																"nodeType": "YulBlock",
																"src": "14715:3:5",
																"statements": []
															},
															"pre": {
																"nativeSrc": "14689:3:5",
																"nodeType": "YulBlock",
																"src": "14689:3:5",
																"statements": []
															},
															"src": "14685:270:5"
														}
													]
												},
												"name": "checked_exp_helper",
												"nativeSrc": "14545:416:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "_base",
														"nativeSrc": "14573:5:5",
														"nodeType": "YulTypedName",
														"src": "14573:5:5",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "14580:8:5",
														"nodeType": "YulTypedName",
														"src": "14580:8:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "14593:5:5",
														"nodeType": "YulTypedName",
														"src": "14593:5:5",
														"type": ""
													},
													{
														"name": "base",
														"nativeSrc": "14600:4:5",
														"nodeType": "YulTypedName",
														"src": "14600:4:5",
														"type": ""
													}
												],
												"src": "14545:416:5"
											},
											{
												"body": {
													"nativeSrc": "15025:747:5",
													"nodeType": "YulBlock",
													"src": "15025:747:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "15063:52:5",
																"nodeType": "YulBlock",
																"src": "15063:52:5",
																"statements": [
																	{
																		"nativeSrc": "15077:10:5",
																		"nodeType": "YulAssignment",
																		"src": "15077:10:5",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "15086:1:5",
																			"nodeType": "YulLiteral",
																			"src": "15086:1:5",
																			"type": "",
																			"value": "1"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "15077:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "15077:5:5"
																			}
																		]
																	},
																	{
																		"nativeSrc": "15100:5:5",
																		"nodeType": "YulLeave",
																		"src": "15100:5:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "15045:8:5",
																		"nodeType": "YulIdentifier",
																		"src": "15045:8:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "15038:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "15038:6:5"
																},
																"nativeSrc": "15038:16:5",
																"nodeType": "YulFunctionCall",
																"src": "15038:16:5"
															},
															"nativeSrc": "15035:80:5",
															"nodeType": "YulIf",
															"src": "15035:80:5"
														},
														{
															"body": {
																"nativeSrc": "15148:52:5",
																"nodeType": "YulBlock",
																"src": "15148:52:5",
																"statements": [
																	{
																		"nativeSrc": "15162:10:5",
																		"nodeType": "YulAssignment",
																		"src": "15162:10:5",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "15171:1:5",
																			"nodeType": "YulLiteral",
																			"src": "15171:1:5",
																			"type": "",
																			"value": "0"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "15162:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "15162:5:5"
																			}
																		]
																	},
																	{
																		"nativeSrc": "15185:5:5",
																		"nodeType": "YulLeave",
																		"src": "15185:5:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "15134:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "15134:4:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "15127:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "15127:6:5"
																},
																"nativeSrc": "15127:12:5",
																"nodeType": "YulFunctionCall",
																"src": "15127:12:5"
															},
															"nativeSrc": "15124:76:5",
															"nodeType": "YulIf",
															"src": "15124:76:5"
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "15236:52:5",
																		"nodeType": "YulBlock",
																		"src": "15236:52:5",
																		"statements": [
																			{
																				"nativeSrc": "15250:10:5",
																				"nodeType": "YulAssignment",
																				"src": "15250:10:5",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "15259:1:5",
																					"nodeType": "YulLiteral",
																					"src": "15259:1:5",
																					"type": "",
																					"value": "1"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "15250:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "15250:5:5"
																					}
																				]
																			},
																			{
																				"nativeSrc": "15273:5:5",
																				"nodeType": "YulLeave",
																				"src": "15273:5:5"
																			}
																		]
																	},
																	"nativeSrc": "15229:59:5",
																	"nodeType": "YulCase",
																	"src": "15229:59:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "15234:1:5",
																		"nodeType": "YulLiteral",
																		"src": "15234:1:5",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "15304:123:5",
																		"nodeType": "YulBlock",
																		"src": "15304:123:5",
																		"statements": [
																			{
																				"body": {
																					"nativeSrc": "15339:22:5",
																					"nodeType": "YulBlock",
																					"src": "15339:22:5",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nativeSrc": "15341:16:5",
																									"nodeType": "YulIdentifier",
																									"src": "15341:16:5"
																								},
																								"nativeSrc": "15341:18:5",
																								"nodeType": "YulFunctionCall",
																								"src": "15341:18:5"
																							},
																							"nativeSrc": "15341:18:5",
																							"nodeType": "YulExpressionStatement",
																							"src": "15341:18:5"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nativeSrc": "15324:8:5",
																							"nodeType": "YulIdentifier",
																							"src": "15324:8:5"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "15334:3:5",
																							"nodeType": "YulLiteral",
																							"src": "15334:3:5",
																							"type": "",
																							"value": "255"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nativeSrc": "15321:2:5",
																						"nodeType": "YulIdentifier",
																						"src": "15321:2:5"
																					},
																					"nativeSrc": "15321:17:5",
																					"nodeType": "YulFunctionCall",
																					"src": "15321:17:5"
																				},
																				"nativeSrc": "15318:43:5",
																				"nodeType": "YulIf",
																				"src": "15318:43:5"
																			},
																			{
																				"nativeSrc": "15374:25:5",
																				"nodeType": "YulAssignment",
																				"src": "15374:25:5",
																				"value": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nativeSrc": "15387:8:5",
																							"nodeType": "YulIdentifier",
																							"src": "15387:8:5"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "15397:1:5",
																							"nodeType": "YulLiteral",
																							"src": "15397:1:5",
																							"type": "",
																							"value": "1"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "15383:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "15383:3:5"
																					},
																					"nativeSrc": "15383:16:5",
																					"nodeType": "YulFunctionCall",
																					"src": "15383:16:5"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "15374:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "15374:5:5"
																					}
																				]
																			},
																			{
																				"nativeSrc": "15412:5:5",
																				"nodeType": "YulLeave",
																				"src": "15412:5:5"
																			}
																		]
																	},
																	"nativeSrc": "15297:130:5",
																	"nodeType": "YulCase",
																	"src": "15297:130:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "15302:1:5",
																		"nodeType": "YulLiteral",
																		"src": "15302:1:5",
																		"type": "",
																		"value": "2"
																	}
																}
															],
															"expression": {
																"name": "base",
																"nativeSrc": "15216:4:5",
																"nodeType": "YulIdentifier",
																"src": "15216:4:5"
															},
															"nativeSrc": "15209:218:5",
															"nodeType": "YulSwitch",
															"src": "15209:218:5"
														},
														{
															"body": {
																"nativeSrc": "15525:70:5",
																"nodeType": "YulBlock",
																"src": "15525:70:5",
																"statements": [
																	{
																		"nativeSrc": "15539:28:5",
																		"nodeType": "YulAssignment",
																		"src": "15539:28:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "15552:4:5",
																					"nodeType": "YulIdentifier",
																					"src": "15552:4:5"
																				},
																				{
																					"name": "exponent",
																					"nativeSrc": "15558:8:5",
																					"nodeType": "YulIdentifier",
																					"src": "15558:8:5"
																				}
																			],
																			"functionName": {
																				"name": "exp",
																				"nativeSrc": "15548:3:5",
																				"nodeType": "YulIdentifier",
																				"src": "15548:3:5"
																			},
																			"nativeSrc": "15548:19:5",
																			"nodeType": "YulFunctionCall",
																			"src": "15548:19:5"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "15539:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "15539:5:5"
																			}
																		]
																	},
																	{
																		"nativeSrc": "15580:5:5",
																		"nodeType": "YulLeave",
																		"src": "15580:5:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "15449:4:5",
																						"nodeType": "YulIdentifier",
																						"src": "15449:4:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "15455:2:5",
																						"nodeType": "YulLiteral",
																						"src": "15455:2:5",
																						"type": "",
																						"value": "11"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "15446:2:5",
																					"nodeType": "YulIdentifier",
																					"src": "15446:2:5"
																				},
																				"nativeSrc": "15446:12:5",
																				"nodeType": "YulFunctionCall",
																				"src": "15446:12:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "15463:8:5",
																						"nodeType": "YulIdentifier",
																						"src": "15463:8:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "15473:2:5",
																						"nodeType": "YulLiteral",
																						"src": "15473:2:5",
																						"type": "",
																						"value": "78"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "15460:2:5",
																					"nodeType": "YulIdentifier",
																					"src": "15460:2:5"
																				},
																				"nativeSrc": "15460:16:5",
																				"nodeType": "YulFunctionCall",
																				"src": "15460:16:5"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "15442:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "15442:3:5"
																		},
																		"nativeSrc": "15442:35:5",
																		"nodeType": "YulFunctionCall",
																		"src": "15442:35:5"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "15486:4:5",
																						"nodeType": "YulIdentifier",
																						"src": "15486:4:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "15492:3:5",
																						"nodeType": "YulLiteral",
																						"src": "15492:3:5",
																						"type": "",
																						"value": "307"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "15483:2:5",
																					"nodeType": "YulIdentifier",
																					"src": "15483:2:5"
																				},
																				"nativeSrc": "15483:13:5",
																				"nodeType": "YulFunctionCall",
																				"src": "15483:13:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "15501:8:5",
																						"nodeType": "YulIdentifier",
																						"src": "15501:8:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "15511:2:5",
																						"nodeType": "YulLiteral",
																						"src": "15511:2:5",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "15498:2:5",
																					"nodeType": "YulIdentifier",
																					"src": "15498:2:5"
																				},
																				"nativeSrc": "15498:16:5",
																				"nodeType": "YulFunctionCall",
																				"src": "15498:16:5"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "15479:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "15479:3:5"
																		},
																		"nativeSrc": "15479:36:5",
																		"nodeType": "YulFunctionCall",
																		"src": "15479:36:5"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "15439:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "15439:2:5"
																},
																"nativeSrc": "15439:77:5",
																"nodeType": "YulFunctionCall",
																"src": "15439:77:5"
															},
															"nativeSrc": "15436:159:5",
															"nodeType": "YulIf",
															"src": "15436:159:5"
														},
														{
															"nativeSrc": "15604:57:5",
															"nodeType": "YulVariableDeclaration",
															"src": "15604:57:5",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "15646:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "15646:4:5"
																	},
																	{
																		"name": "exponent",
																		"nativeSrc": "15652:8:5",
																		"nodeType": "YulIdentifier",
																		"src": "15652:8:5"
																	}
																],
																"functionName": {
																	"name": "checked_exp_helper",
																	"nativeSrc": "15627:18:5",
																	"nodeType": "YulIdentifier",
																	"src": "15627:18:5"
																},
																"nativeSrc": "15627:34:5",
																"nodeType": "YulFunctionCall",
																"src": "15627:34:5"
															},
															"variables": [
																{
																	"name": "power_1",
																	"nativeSrc": "15608:7:5",
																	"nodeType": "YulTypedName",
																	"src": "15608:7:5",
																	"type": ""
																},
																{
																	"name": "base_1",
																	"nativeSrc": "15617:6:5",
																	"nodeType": "YulTypedName",
																	"src": "15617:6:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "15706:22:5",
																"nodeType": "YulBlock",
																"src": "15706:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "15708:16:5",
																				"nodeType": "YulIdentifier",
																				"src": "15708:16:5"
																			},
																			"nativeSrc": "15708:18:5",
																			"nodeType": "YulFunctionCall",
																			"src": "15708:18:5"
																		},
																		"nativeSrc": "15708:18:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "15708:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "power_1",
																		"nativeSrc": "15676:7:5",
																		"nodeType": "YulIdentifier",
																		"src": "15676:7:5"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "15693:1:5",
																						"nodeType": "YulLiteral",
																						"src": "15693:1:5",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "15689:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "15689:3:5"
																				},
																				"nativeSrc": "15689:6:5",
																				"nodeType": "YulFunctionCall",
																				"src": "15689:6:5"
																			},
																			{
																				"name": "base_1",
																				"nativeSrc": "15697:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "15697:6:5"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "15685:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "15685:3:5"
																		},
																		"nativeSrc": "15685:19:5",
																		"nodeType": "YulFunctionCall",
																		"src": "15685:19:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "15673:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "15673:2:5"
																},
																"nativeSrc": "15673:32:5",
																"nodeType": "YulFunctionCall",
																"src": "15673:32:5"
															},
															"nativeSrc": "15670:58:5",
															"nodeType": "YulIf",
															"src": "15670:58:5"
														},
														{
															"nativeSrc": "15737:29:5",
															"nodeType": "YulAssignment",
															"src": "15737:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "power_1",
																		"nativeSrc": "15750:7:5",
																		"nodeType": "YulIdentifier",
																		"src": "15750:7:5"
																	},
																	{
																		"name": "base_1",
																		"nativeSrc": "15759:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "15759:6:5"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "15746:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "15746:3:5"
																},
																"nativeSrc": "15746:20:5",
																"nodeType": "YulFunctionCall",
																"src": "15746:20:5"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "15737:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "15737:5:5"
																}
															]
														}
													]
												},
												"name": "checked_exp_unsigned",
												"nativeSrc": "14966:806:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "14996:4:5",
														"nodeType": "YulTypedName",
														"src": "14996:4:5",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "15002:8:5",
														"nodeType": "YulTypedName",
														"src": "15002:8:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "15015:5:5",
														"nodeType": "YulTypedName",
														"src": "15015:5:5",
														"type": ""
													}
												],
												"src": "14966:806:5"
											},
											{
												"body": {
													"nativeSrc": "15845:72:5",
													"nodeType": "YulBlock",
													"src": "15845:72:5",
													"statements": [
														{
															"nativeSrc": "15855:56:5",
															"nodeType": "YulAssignment",
															"src": "15855:56:5",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "15885:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "15885:4:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "exponent",
																				"nativeSrc": "15895:8:5",
																				"nodeType": "YulIdentifier",
																				"src": "15895:8:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15905:4:5",
																				"nodeType": "YulLiteral",
																				"src": "15905:4:5",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "15891:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "15891:3:5"
																		},
																		"nativeSrc": "15891:19:5",
																		"nodeType": "YulFunctionCall",
																		"src": "15891:19:5"
																	}
																],
																"functionName": {
																	"name": "checked_exp_unsigned",
																	"nativeSrc": "15864:20:5",
																	"nodeType": "YulIdentifier",
																	"src": "15864:20:5"
																},
																"nativeSrc": "15864:47:5",
																"nodeType": "YulFunctionCall",
																"src": "15864:47:5"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "15855:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "15855:5:5"
																}
															]
														}
													]
												},
												"name": "checked_exp_t_uint256_t_uint8",
												"nativeSrc": "15777:140:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "15816:4:5",
														"nodeType": "YulTypedName",
														"src": "15816:4:5",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "15822:8:5",
														"nodeType": "YulTypedName",
														"src": "15822:8:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "15835:5:5",
														"nodeType": "YulTypedName",
														"src": "15835:5:5",
														"type": ""
													}
												],
												"src": "15777:140:5"
											},
											{
												"body": {
													"nativeSrc": "15954:95:5",
													"nodeType": "YulBlock",
													"src": "15954:95:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "15971:1:5",
																		"nodeType": "YulLiteral",
																		"src": "15971:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "15978:3:5",
																				"nodeType": "YulLiteral",
																				"src": "15978:3:5",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15983:10:5",
																				"nodeType": "YulLiteral",
																				"src": "15983:10:5",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "15974:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "15974:3:5"
																		},
																		"nativeSrc": "15974:20:5",
																		"nodeType": "YulFunctionCall",
																		"src": "15974:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15964:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "15964:6:5"
																},
																"nativeSrc": "15964:31:5",
																"nodeType": "YulFunctionCall",
																"src": "15964:31:5"
															},
															"nativeSrc": "15964:31:5",
															"nodeType": "YulExpressionStatement",
															"src": "15964:31:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "16011:1:5",
																		"nodeType": "YulLiteral",
																		"src": "16011:1:5",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16014:4:5",
																		"nodeType": "YulLiteral",
																		"src": "16014:4:5",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16004:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "16004:6:5"
																},
																"nativeSrc": "16004:15:5",
																"nodeType": "YulFunctionCall",
																"src": "16004:15:5"
															},
															"nativeSrc": "16004:15:5",
															"nodeType": "YulExpressionStatement",
															"src": "16004:15:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "16035:1:5",
																		"nodeType": "YulLiteral",
																		"src": "16035:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16038:4:5",
																		"nodeType": "YulLiteral",
																		"src": "16038:4:5",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "16028:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "16028:6:5"
																},
																"nativeSrc": "16028:15:5",
																"nodeType": "YulFunctionCall",
																"src": "16028:15:5"
															},
															"nativeSrc": "16028:15:5",
															"nodeType": "YulExpressionStatement",
															"src": "16028:15:5"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "15922:127:5",
												"nodeType": "YulFunctionDefinition",
												"src": "15922:127:5"
											},
											{
												"body": {
													"nativeSrc": "16100:171:5",
													"nodeType": "YulBlock",
													"src": "16100:171:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "16131:111:5",
																"nodeType": "YulBlock",
																"src": "16131:111:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "16152:1:5",
																					"nodeType": "YulLiteral",
																					"src": "16152:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "16159:3:5",
																							"nodeType": "YulLiteral",
																							"src": "16159:3:5",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "16164:10:5",
																							"nodeType": "YulLiteral",
																							"src": "16164:10:5",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "16155:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "16155:3:5"
																					},
																					"nativeSrc": "16155:20:5",
																					"nodeType": "YulFunctionCall",
																					"src": "16155:20:5"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "16145:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "16145:6:5"
																			},
																			"nativeSrc": "16145:31:5",
																			"nodeType": "YulFunctionCall",
																			"src": "16145:31:5"
																		},
																		"nativeSrc": "16145:31:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "16145:31:5"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "16196:1:5",
																					"nodeType": "YulLiteral",
																					"src": "16196:1:5",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "16199:4:5",
																					"nodeType": "YulLiteral",
																					"src": "16199:4:5",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "16189:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "16189:6:5"
																			},
																			"nativeSrc": "16189:15:5",
																			"nodeType": "YulFunctionCall",
																			"src": "16189:15:5"
																		},
																		"nativeSrc": "16189:15:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "16189:15:5"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "16224:1:5",
																					"nodeType": "YulLiteral",
																					"src": "16224:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "16227:4:5",
																					"nodeType": "YulLiteral",
																					"src": "16227:4:5",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "16217:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "16217:6:5"
																			},
																			"nativeSrc": "16217:15:5",
																			"nodeType": "YulFunctionCall",
																			"src": "16217:15:5"
																		},
																		"nativeSrc": "16217:15:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "16217:15:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "16120:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "16120:1:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "16113:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "16113:6:5"
																},
																"nativeSrc": "16113:9:5",
																"nodeType": "YulFunctionCall",
																"src": "16113:9:5"
															},
															"nativeSrc": "16110:132:5",
															"nodeType": "YulIf",
															"src": "16110:132:5"
														},
														{
															"nativeSrc": "16251:14:5",
															"nodeType": "YulAssignment",
															"src": "16251:14:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "16260:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "16260:1:5"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "16263:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "16263:1:5"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "16256:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "16256:3:5"
																},
																"nativeSrc": "16256:9:5",
																"nodeType": "YulFunctionCall",
																"src": "16256:9:5"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "16251:1:5",
																	"nodeType": "YulIdentifier",
																	"src": "16251:1:5"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "16054:217:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "16085:1:5",
														"nodeType": "YulTypedName",
														"src": "16085:1:5",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "16088:1:5",
														"nodeType": "YulTypedName",
														"src": "16088:1:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "16094:1:5",
														"nodeType": "YulTypedName",
														"src": "16094:1:5",
														"type": ""
													}
												],
												"src": "16054:217:5"
											}
										]
									},
									"contents": "{\n    { }\n    function copy_memory_to_memory_with_cleanup(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        copy_memory_to_memory_with_cleanup(add(value0, 32), add(headStart, 64), length)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_string(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        let _2 := 0xffffffffffffffff\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        if gt(add(add(offset, _1), 0x20), end) { revert(0, 0) }\n        calldatacopy(add(memPtr, 0x20), add(offset, 0x20), _1)\n        mstore(add(add(memPtr, _1), 0x20), 0)\n        array := memPtr\n    }\n    function abi_decode_tuple_t_string_memory_ptr(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value0 := abi_decode_string(add(headStart, offset), dataEnd)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        value0 := abi_decode_string(add(headStart, offset), dataEnd)\n        let offset_1 := calldataload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_string(add(headStart, offset_1), dataEnd)\n    }\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := calldataload(add(headStart, 32))\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value1 := value\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        let offset := calldataload(add(headStart, 96))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let length := calldataload(_2)\n        if gt(length, _1) { revert(0, 0) }\n        if gt(add(add(_2, length), 32), dataEnd) { revert(0, 0) }\n        value3 := add(_2, 32)\n        value4 := length\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(0, array)\n            let data := keccak256(0, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := 0x20\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function panic_error_0x31()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x31)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), 128)\n        mstore(add(headStart, 128), 0)\n        tail := add(headStart, 160)\n    }\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_calldata_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), 128)\n        mstore(add(headStart, 128), value4)\n        calldatacopy(add(headStart, 160), value3, value4)\n        mstore(add(add(headStart, value4), 160), 0)\n        tail := add(add(headStart, and(add(value4, 31), not(31))), 160)\n    }\n    function abi_encode_tuple_packed_t_string_storage_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        let ret := 0\n        let slotValue := sload(value0)\n        let length := extract_byte_array_length(slotValue)\n        let _1 := 1\n        switch and(slotValue, 1)\n        case 0 {\n            mstore(pos, and(slotValue, not(255)))\n            ret := add(pos, mul(length, iszero(iszero(length))))\n        }\n        case 1 {\n            mstore(0, value0)\n            let _2 := 0x20\n            let dataPos := keccak256(0, 0x20)\n            let i := 0\n            for { } lt(i, length) { i := add(i, _2) }\n            {\n                mstore(add(pos, i), sload(dataPos))\n                dataPos := add(dataPos, _1)\n            }\n            ret := add(pos, length)\n        }\n        let length_1 := mload(value1)\n        copy_memory_to_memory_with_cleanup(add(value1, 0x20), ret, length_1)\n        end := add(ret, length_1)\n    }\n    function abi_encode_tuple_packed_t_uint256__to_t_uint256__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        mstore(pos, value0)\n        end := add(pos, 32)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_fe9d4c51812073cc5e8ec967a205a059f799b9890a5eda0866690d8d8786f686_t_string_memory_ptr__to_t_bytes23_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        mstore(pos, 0x7b226e616d65223a20224161766547686f737465722023000000000000000000)\n        let length := mload(value0)\n        copy_memory_to_memory_with_cleanup(add(value0, 0x20), add(pos, 23), length)\n        end := add(add(pos, length), 23)\n    }\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_stringliteral_854f884486bac1c129d284ef0dc887ee8e77308cd46a54222bf4afc46d6dcf9a__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory_with_cleanup(add(value0, 0x20), pos, length)\n        let end_1 := add(pos, length)\n        mstore(end_1, 0x222c226465736372697074696f6e223a224120636f6c6c656374696f6e206f66)\n        mstore(add(end_1, 0x20), \" 15,000 AaveGhoster enabled by E\")\n        mstore(add(end_1, 64), \"RC404, an experimental token sta\")\n        mstore(add(end_1, 96), 0x6e6461726420696e7370697265642062792050616e646f7261222c2265787465)\n        mstore(add(end_1, 128), 0x726e616c5f75726c223a2268747470733a2f2f6161766567686f737465722e6f)\n        mstore(add(end_1, 160), shl(129, 0x373634b73291161134b6b0b3b2911d11))\n        end := add(end_1, 176)\n    }\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory_with_cleanup(add(value0, 0x20), pos, length)\n        let end_1 := add(pos, length)\n        let length_1 := mload(value1)\n        copy_memory_to_memory_with_cleanup(add(value1, 0x20), end_1, length_1)\n        end := add(end_1, length_1)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_7196ac4a970ec79361a69477bc1a540e85d3935600f7f1445303dbc04fc044ce_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        mstore(pos, 0x222c2261747472696275746573223a5b7b2274726169745f74797065223a2243)\n        mstore(add(pos, 32), shl(137, 0x37b637b91116113b30b63ab2911d11))\n        let length := mload(value0)\n        copy_memory_to_memory_with_cleanup(add(value0, 32), add(pos, 47), length)\n        end := add(add(pos, length), 47)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_947ee3b345bbae8b47ca548e58fd3eb9fc264e3488d72aeca69c8f1f89149b7a_t_string_memory_ptr__to_t_bytes27_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        mstore(pos, \"data:application/json;utf8,\")\n        let length := mload(value0)\n        copy_memory_to_memory_with_cleanup(add(value0, 0x20), add(pos, 27), length)\n        end := add(add(pos, length), 27)\n    }\n    function checked_exp_helper(_base, exponent) -> power, base\n    {\n        let power_1 := 1\n        power := 1\n        base := _base\n        for { } gt(exponent, power_1) { }\n        {\n            if gt(base, div(not(0), base)) { panic_error_0x11() }\n            if and(exponent, power_1) { power := mul(power, base) }\n            base := mul(base, base)\n            exponent := shr(power_1, exponent)\n        }\n    }\n    function checked_exp_unsigned(base, exponent) -> power\n    {\n        if iszero(exponent)\n        {\n            power := 1\n            leave\n        }\n        if iszero(base)\n        {\n            power := 0\n            leave\n        }\n        switch base\n        case 1 {\n            power := 1\n            leave\n        }\n        case 2 {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := shl(exponent, 1)\n            leave\n        }\n        if or(and(lt(base, 11), lt(exponent, 78)), and(lt(base, 307), lt(exponent, 32)))\n        {\n            power := exp(base, exponent)\n            leave\n        }\n        let power_1, base_1 := checked_exp_helper(base, exponent)\n        if gt(power_1, div(not(0), base_1)) { panic_error_0x11() }\n        power := mul(power_1, base_1)\n    }\n    function checked_exp_t_uint256_t_uint8(base, exponent) -> power\n    {\n        power := checked_exp_unsigned(base, and(exponent, 0xff))\n    }\n    function panic_error_0x12()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n}",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"1909": [
									{
										"length": 32,
										"start": 666
									},
									{
										"length": 32,
										"start": 4879
									}
								],
								"1912": [
									{
										"length": 32,
										"start": 565
									}
								]
							},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1A9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0xF9 JUMPI DUP1 PUSH4 0xC87B56DD GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xE0DF5B6F GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xE0DF5B6F EQ PUSH2 0x400 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x413 JUMPI DUP1 PUSH4 0xF28CA1DD EQ PUSH2 0x441 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x449 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x3BA JUMPI DUP1 PUSH4 0xD547CFB7 EQ PUSH2 0x3CD JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x3D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x9B19251A GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x9B19251A EQ PUSH2 0x35E JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x381 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x394 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x3A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x323 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x343 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x356 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2B968958 GT PUSH2 0x166 JUMPI DUP1 PUSH4 0x4F02C420 GT PUSH2 0x140 JUMPI DUP1 PUSH4 0x4F02C420 EQ PUSH2 0x2E1 JUMPI DUP1 PUSH4 0x504334C2 EQ PUSH2 0x2EA JUMPI DUP1 PUSH4 0x53D6FD59 EQ PUSH2 0x2FD JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x310 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2B968958 EQ PUSH2 0x28D JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x295 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x2CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1AE JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x1CC JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x20D JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x230 JUMPI DUP1 PUSH4 0x18D217C3 EQ PUSH2 0x265 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x27A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1B6 PUSH2 0x45C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C3 SWAP2 SWAP1 PUSH2 0x18C3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F5 PUSH2 0x1DA CALLDATASIZE PUSH1 0x4 PUSH2 0x18F6 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1C3 JUMP JUMPDEST PUSH2 0x220 PUSH2 0x21B CALLDATASIZE PUSH1 0x4 PUSH2 0x1926 JUMP JUMPDEST PUSH2 0x4EA JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1C3 JUMP JUMPDEST PUSH2 0x257 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1C3 JUMP JUMPDEST PUSH2 0x278 PUSH2 0x273 CALLDATASIZE PUSH1 0x4 PUSH2 0x19F3 JUMP JUMPDEST PUSH2 0x63B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x278 PUSH2 0x288 CALLDATASIZE PUSH1 0x4 PUSH2 0x1A30 JUMP JUMPDEST PUSH2 0x675 JUMP JUMPDEST PUSH2 0x278 PUSH2 0x9FE JUMP JUMPDEST PUSH2 0x2BC PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1C3 JUMP JUMPDEST PUSH2 0x278 PUSH2 0x2DC CALLDATASIZE PUSH1 0x4 PUSH2 0x1A30 JUMP JUMPDEST PUSH2 0xA64 JUMP JUMPDEST PUSH2 0x257 PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x278 PUSH2 0x2F8 CALLDATASIZE PUSH1 0x4 PUSH2 0x1A6C JUMP JUMPDEST PUSH2 0xB39 JUMP JUMPDEST PUSH2 0x278 PUSH2 0x30B CALLDATASIZE PUSH1 0x4 PUSH2 0x1AD0 JUMP JUMPDEST PUSH2 0xB6D JUMP JUMPDEST PUSH2 0x1F5 PUSH2 0x31E CALLDATASIZE PUSH1 0x4 PUSH2 0x18F6 JUMP JUMPDEST PUSH2 0xBC2 JUMP JUMPDEST PUSH2 0x257 PUSH2 0x331 CALLDATASIZE PUSH1 0x4 PUSH2 0x1B0C JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x1F5 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x1B6 PUSH2 0xBFD JUMP JUMPDEST PUSH2 0x220 PUSH2 0x36C CALLDATASIZE PUSH1 0x4 PUSH2 0x1B0C JUMP JUMPDEST PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x278 PUSH2 0x38F CALLDATASIZE PUSH1 0x4 PUSH2 0x1AD0 JUMP JUMPDEST PUSH2 0xC0A JUMP JUMPDEST PUSH2 0x220 PUSH2 0x3A2 CALLDATASIZE PUSH1 0x4 PUSH2 0x1926 JUMP JUMPDEST PUSH2 0xC76 JUMP JUMPDEST PUSH2 0x278 PUSH2 0x3B5 CALLDATASIZE PUSH1 0x4 PUSH2 0x1B27 JUMP JUMPDEST PUSH2 0xC8A JUMP JUMPDEST PUSH2 0x1B6 PUSH2 0x3C8 CALLDATASIZE PUSH1 0x4 PUSH2 0x18F6 JUMP JUMPDEST PUSH2 0xD4D JUMP JUMPDEST PUSH2 0x1B6 PUSH2 0x121C JUMP JUMPDEST PUSH2 0x257 PUSH2 0x3E3 CALLDATASIZE PUSH1 0x4 PUSH2 0x1BC2 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x278 PUSH2 0x40E CALLDATASIZE PUSH1 0x4 PUSH2 0x19F3 JUMP JUMPDEST PUSH2 0x1229 JUMP JUMPDEST PUSH2 0x220 PUSH2 0x421 CALLDATASIZE PUSH1 0x4 PUSH2 0x1BC2 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x1B6 PUSH2 0x125F JUMP JUMPDEST PUSH2 0x278 PUSH2 0x457 CALLDATASIZE PUSH1 0x4 PUSH2 0x1B0C JUMP JUMPDEST PUSH2 0x126C JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH2 0x469 SWAP1 PUSH2 0x1BF5 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x495 SWAP1 PUSH2 0x1BF5 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4E2 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x4B7 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4E2 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4C5 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 SLOAD DUP3 GT ISZERO DUP1 ISZERO PUSH2 0x4FE JUMPI POP PUSH1 0x0 DUP3 GT JUMPDEST ISZERO PUSH2 0x5D5 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER DUP2 EQ DUP1 ISZERO SWAP1 PUSH2 0x54F JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST ISZERO PUSH2 0x56C JUMPI PUSH1 0x40 MLOAD PUSH3 0x82B429 PUSH1 0xE8 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE SWAP3 MLOAD DUP7 DUP2 MSTORE SWAP1 DUP5 AND SWAP2 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH2 0x631 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND DUP1 DUP6 MSTORE SWAP1 DUP4 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 DUP7 SWAP1 SSTORE MLOAD DUP6 DUP2 MSTORE SWAP2 SWAP3 SWAP2 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP PUSH1 0x1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x665 JUMPI PUSH1 0x40 MLOAD PUSH3 0x82B429 PUSH1 0xE8 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xC PUSH2 0x671 DUP3 DUP3 PUSH2 0x1C7F JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 GT PUSH2 0x98F JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 AND EQ PUSH2 0x6B8 JUMPI PUSH1 0x40 MLOAD PUSH4 0x6EDAEF2F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x6DF JUMPI PUSH1 0x40 MLOAD PUSH4 0x4E469669 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EQ DUP1 ISZERO SWAP1 PUSH2 0x71C JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x73F JUMPI POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ ISZERO JUMPDEST ISZERO PUSH2 0x75C JUMPI PUSH1 0x40 MLOAD PUSH3 0x82B429 PUSH1 0xE8 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x764 PUSH2 0x1308 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD SWAP1 SWAP2 SWAP1 PUSH2 0x78C SWAP1 DUP5 SWAP1 PUSH2 0x1D55 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x79A SWAP1 POP PUSH2 0x1308 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD SWAP1 SWAP7 ADD SWAP1 SWAP6 SSTORE DUP6 DUP3 MSTORE PUSH1 0x8 DUP2 MSTORE DUP5 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND SWAP1 SWAP5 OR SWAP1 SSTORE PUSH1 0x6 DUP2 MSTORE DUP5 DUP3 KECCAK256 DUP1 SLOAD SWAP1 SWAP4 AND SWAP1 SWAP3 SSTORE SWAP2 DUP7 AND DUP3 MSTORE PUSH1 0x9 SWAP1 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD PUSH2 0x804 SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x1D55 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x814 JUMPI PUSH2 0x814 PUSH2 0x1D68 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP4 MSTORE PUSH1 0x9 DUP3 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP7 DUP6 MSTORE PUSH1 0xA SWAP1 SWAP4 MSTORE SWAP1 SWAP3 KECCAK256 SLOAD DUP2 SLOAD SWAP3 SWAP4 POP DUP4 SWAP3 DUP2 LT PUSH2 0x858 JUMPI PUSH2 0x858 PUSH2 0x1D68 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SWAP3 SWAP1 SWAP3 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP2 MSTORE PUSH1 0x9 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP1 PUSH2 0x88D JUMPI PUSH2 0x88D PUSH2 0x1D7E JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 KECCAK256 DUP4 ADD PUSH1 0x0 NOT SWAP1 DUP2 ADD DUP4 SWAP1 SSTORE SWAP1 SWAP3 ADD SWAP1 SWAP3 SSTORE DUP4 DUP3 MSTORE PUSH1 0xA DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD DUP5 DUP5 MSTORE DUP2 DUP5 KECCAK256 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP1 DUP5 MSTORE PUSH1 0x9 DUP4 MSTORE SWAP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP2 DUP2 ADD DUP4 SSTORE DUP3 DUP7 MSTORE SWAP4 DUP6 KECCAK256 ADD DUP7 SWAP1 SSTORE SWAP3 MSTORE SWAP1 SLOAD PUSH2 0x8F1 SWAP2 SWAP1 PUSH2 0x1D55 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP3 SWAP1 SWAP3 SSTORE SWAP1 MLOAD DUP4 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP8 AND SWAP3 SWAP1 DUP9 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 LOG4 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xE59FDD36D0D223C0C7D996DB7AD796880F45E1936CB0BB7AC102E7082E031487 PUSH2 0x978 PUSH2 0x1308 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0x0 NOT DUP2 EQ PUSH2 0x9EB JUMPI PUSH2 0x9C6 DUP3 DUP3 PUSH2 0x1D55 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SSTORE JUMPDEST PUSH2 0x9F6 DUP5 DUP5 DUP5 PUSH2 0x133A JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xA28 JUMPI PUSH1 0x40 MLOAD PUSH3 0x82B429 PUSH1 0xE8 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND DUP2 SSTORE PUSH1 0x40 MLOAD CALLER SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 JUMP JUMPDEST PUSH2 0xA6F DUP4 DUP4 DUP4 PUSH2 0x675 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EXTCODESIZE ISZERO DUP1 ISZERO SWAP1 PUSH2 0xB1B JUMPI POP PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP1 DUP3 MSTORE CALLER PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x24 DUP5 ADD MSTORE PUSH1 0x44 DUP4 ADD DUP5 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x64 DUP5 ADD MSTORE PUSH1 0x0 PUSH1 0x84 DUP5 ADD MSTORE SWAP1 SWAP2 SWAP1 DUP5 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH1 0xA4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xAEA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB0E SWAP2 SWAP1 PUSH2 0x1D94 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x9F9 JUMPI PUSH1 0x40 MLOAD PUSH4 0x3DA63931 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xB63 JUMPI PUSH1 0x40 MLOAD PUSH3 0x82B429 PUSH1 0xE8 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x671 DUP3 DUP3 PUSH2 0x14E8 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xB97 JUMPI PUSH1 0x40 MLOAD PUSH3 0x82B429 PUSH1 0xE8 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0xBF8 JUMPI PUSH1 0x40 MLOAD PUSH4 0xC5723B51 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH2 0x469 SWAP1 PUSH2 0x1BF5 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP1 DUP6 MSTORE SWAP1 DUP4 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD SWAP1 DUP2 MSTORE SWAP2 SWAP3 SWAP2 PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC83 CALLER DUP5 DUP5 PUSH2 0x133A JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xC95 DUP6 DUP6 DUP6 PUSH2 0x675 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO DUP1 ISZERO SWAP1 PUSH2 0xD2F JUMPI POP PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP1 DUP3 MSTORE SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH2 0xCDF SWAP1 CALLER SWAP1 DUP11 SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP10 SWAP1 PUSH1 0x4 ADD PUSH2 0x1DBE JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xCFE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD22 SWAP2 SWAP1 PUSH2 0x1D94 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x9F6 JUMPI PUSH1 0x40 MLOAD PUSH4 0x3DA63931 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0xD DUP1 SLOAD PUSH2 0xD5E SWAP1 PUSH2 0x1BF5 JUMP JUMPDEST SWAP1 POP GT ISZERO PUSH2 0xD98 JUMPI PUSH1 0xD PUSH2 0xD71 DUP4 PUSH2 0x1501 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xD82 SWAP3 SWAP2 SWAP1 PUSH2 0x1E12 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xDAD SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0xF8 SHR SWAP1 POP PUSH1 0x60 DUP1 PUSH1 0x64 DUP4 PUSH1 0xFF AND GT PUSH2 0xE1B JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH5 0x312E706E67 PUSH1 0xD8 SHL DUP2 MSTORE POP SWAP2 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH5 0x23B932B2B7 PUSH1 0xD9 SHL DUP2 MSTORE POP SWAP1 POP PUSH2 0x10ED JUMP JUMPDEST PUSH1 0xA0 DUP4 PUSH1 0xFF AND GT PUSH2 0xE6A JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH5 0x322E706E67 PUSH1 0xD8 SHL DUP2 MSTORE POP SWAP2 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH4 0x426C7565 PUSH1 0xE0 SHL DUP2 MSTORE POP SWAP1 POP PUSH2 0x10ED JUMP JUMPDEST PUSH1 0xD2 DUP4 PUSH1 0xFF AND GT PUSH2 0xEBB JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH5 0x332E706E67 PUSH1 0xD8 SHL DUP2 MSTORE POP SWAP2 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x6 DUP2 MSTORE PUSH1 0x20 ADD PUSH6 0x507572706C65 PUSH1 0xD0 SHL DUP2 MSTORE POP SWAP1 POP PUSH2 0x10ED JUMP JUMPDEST PUSH1 0xF0 DUP4 PUSH1 0xFF AND GT PUSH2 0xF0C JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH5 0x342E706E67 PUSH1 0xD8 SHL DUP2 MSTORE POP SWAP2 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x6 DUP2 MSTORE PUSH1 0x20 ADD PUSH6 0x4F72616E6765 PUSH1 0xD0 SHL DUP2 MSTORE POP SWAP1 POP PUSH2 0x10ED JUMP JUMPDEST PUSH1 0xFF DUP4 PUSH1 0xFF AND GT PUSH2 0xF5A JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH5 0x352E706E67 PUSH1 0xD8 SHL DUP2 MSTORE POP SWAP2 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x149959 PUSH1 0xEA SHL DUP2 MSTORE POP SWAP1 POP PUSH2 0x10ED JUMP JUMPDEST PUSH2 0x12C DUP4 PUSH1 0xFF AND GT PUSH2 0xFAB JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH5 0x362E706E67 PUSH1 0xD8 SHL DUP2 MSTORE POP SWAP2 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH5 0x5768697465 PUSH1 0xD8 SHL DUP2 MSTORE POP SWAP1 POP PUSH2 0x10ED JUMP JUMPDEST PUSH2 0x168 DUP4 PUSH1 0xFF AND GT PUSH2 0xFFC JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH5 0x372E706E67 PUSH1 0xD8 SHL DUP2 MSTORE POP SWAP2 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH5 0x426C61636B PUSH1 0xD8 SHL DUP2 MSTORE POP SWAP1 POP PUSH2 0x10ED JUMP JUMPDEST PUSH2 0x19A DUP4 PUSH1 0xFF AND GT PUSH2 0x104C JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH5 0x382E706E67 PUSH1 0xD8 SHL DUP2 MSTORE POP SWAP2 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH4 0x50696E6B PUSH1 0xE0 SHL DUP2 MSTORE POP SWAP1 POP PUSH2 0x10ED JUMP JUMPDEST PUSH2 0x1C2 DUP4 PUSH1 0xFF AND GT PUSH2 0x109E JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH5 0x392E706E67 PUSH1 0xD8 SHL DUP2 MSTORE POP SWAP2 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x6 DUP2 MSTORE PUSH1 0x20 ADD PUSH6 0x59656C6C6F77 PUSH1 0xD0 SHL DUP2 MSTORE POP SWAP1 POP PUSH2 0x10ED JUMP JUMPDEST PUSH2 0x1FE DUP4 PUSH1 0xFF AND GT PUSH2 0x10ED JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x6 DUP2 MSTORE PUSH1 0x20 ADD PUSH6 0x31302E706E67 PUSH1 0xD0 SHL DUP2 MSTORE POP SWAP2 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x6 DUP2 MSTORE PUSH1 0x20 ADD PUSH6 0x159A5BDB195D PUSH1 0xD2 SHL DUP2 MSTORE POP SWAP1 POP JUMPDEST PUSH1 0x0 PUSH2 0x10F8 DUP7 PUSH2 0x1501 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1108 SWAP2 SWAP1 PUSH2 0x1E99 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP1 DUP3 SWAP1 MSTORE PUSH2 0x1125 SWAP2 PUSH1 0x20 ADD PUSH2 0x1EDE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0xC DUP5 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1148 SWAP3 SWAP2 SWAP1 PUSH2 0x1E12 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP1 DUP3 SWAP1 MSTORE PUSH2 0x1166 SWAP3 SWAP2 PUSH1 0x20 ADD PUSH2 0x1FD0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x118A SWAP2 SWAP1 PUSH2 0x1FF6 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE DUP3 DUP3 ADD DUP3 MSTORE PUSH1 0x4 DUP4 MSTORE PUSH4 0x227D5D7D PUSH1 0xE0 SHL PUSH1 0x20 DUP5 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP2 MLOAD SWAP1 SWAP4 POP PUSH2 0x11C4 SWAP2 DUP6 SWAP2 DUP6 SWAP2 ADD PUSH2 0x1FD0 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP1 DUP3 SWAP1 MSTORE PUSH2 0x11E3 SWAP2 DUP4 SWAP1 PUSH1 0x20 ADD PUSH2 0x1FD0 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP1 DUP3 SWAP1 MSTORE PUSH2 0x1200 SWAP2 PUSH1 0x20 ADD PUSH2 0x2053 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP7 POP POP POP POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xD DUP1 SLOAD PUSH2 0x469 SWAP1 PUSH2 0x1BF5 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1253 JUMPI PUSH1 0x40 MLOAD PUSH3 0x82B429 PUSH1 0xE8 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xD PUSH2 0x671 DUP3 DUP3 PUSH2 0x1C7F JUMP JUMPDEST PUSH1 0xC DUP1 SLOAD PUSH2 0x469 SWAP1 PUSH2 0x1BF5 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1296 JUMPI PUSH1 0x40 MLOAD PUSH3 0x82B429 PUSH1 0xE8 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x12BD JUMPI PUSH1 0x40 MLOAD PUSH4 0x49E27CFF PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR DUP3 SSTORE PUSH1 0x40 MLOAD SWAP1 SWAP2 CALLER SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1335 PUSH32 0x0 PUSH1 0xA PUSH2 0x217C JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1345 PUSH2 0x1308 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP8 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD SWAP5 DUP11 AND DUP4 MSTORE SWAP1 DUP3 KECCAK256 SLOAD SWAP3 DUP3 MSTORE SWAP4 SWAP5 POP SWAP2 SWAP3 SWAP1 SWAP2 DUP7 SWAP2 SWAP1 PUSH2 0x1381 DUP4 DUP7 PUSH2 0x1D55 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD DUP11 ADD SWAP1 SSTORE SWAP3 DUP11 AND DUP3 MSTORE PUSH1 0xB SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x1413 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x13DE SWAP1 DUP6 SWAP1 PUSH2 0x218B JUMP JUMPDEST PUSH2 0x13E8 DUP6 DUP6 PUSH2 0x218B JUMP JUMPDEST PUSH2 0x13F2 SWAP2 SWAP1 PUSH2 0x1D55 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1410 JUMPI PUSH2 0x1408 DUP10 PUSH2 0x1594 JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x13F7 JUMP JUMPDEST POP POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x148E JUMPI PUSH1 0x0 PUSH2 0x143F DUP5 DUP4 PUSH2 0x218B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x1463 SWAP1 DUP7 SWAP1 PUSH2 0x218B JUMP JUMPDEST PUSH2 0x146D SWAP2 SWAP1 PUSH2 0x1D55 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x148B JUMPI PUSH2 0x1483 DUP9 PUSH2 0x16BC JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x1472 JUMP JUMPDEST POP POP JUMPDEST DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xE59FDD36D0D223C0C7D996DB7AD796880F45E1936CB0BB7AC102E7082E031487 DUP8 PUSH1 0x40 MLOAD PUSH2 0x14D3 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH1 0x1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH2 0x14F4 DUP4 DUP3 PUSH2 0x1C7F JUMP JUMPDEST POP PUSH1 0x2 PUSH2 0x9F9 DUP3 DUP3 PUSH2 0x1C7F JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x150E DUP4 PUSH2 0x17C7 JUMP JUMPDEST PUSH1 0x1 ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x152E JUMPI PUSH2 0x152E PUSH2 0x1950 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1558 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP DUP2 DUP2 ADD PUSH1 0x20 ADD JUMPDEST PUSH1 0x0 NOT ADD PUSH16 0x181899199A1A9B1B9C1CB0B131B232B3 PUSH1 0x81 SHL PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DIV SWAP5 POP DUP5 PUSH2 0x1562 JUMPI POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x15BB JUMPI PUSH1 0x40 MLOAD PUSH4 0x6EDAEF2F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH2 0x15E1 SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x1D55 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x15F1 JUMPI PUSH2 0x15F1 PUSH2 0x1D68 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP PUSH1 0x9 PUSH1 0x0 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD DUP1 PUSH2 0x1632 JUMPI PUSH2 0x1632 PUSH2 0x1D7E JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 KECCAK256 DUP4 ADD PUSH1 0x0 NOT SWAP1 DUP2 ADD DUP4 SWAP1 SSTORE SWAP1 SWAP3 ADD SWAP1 SWAP3 SSTORE DUP3 DUP3 MSTORE PUSH1 0xA DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP4 SWAP1 SSTORE PUSH1 0x8 DUP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND SWAP1 SWAP2 SSTORE PUSH1 0x6 SWAP1 SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD SWAP1 SWAP3 AND SWAP1 SWAP2 SSTORE MLOAD DUP3 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 DUP4 SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x16E3 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4E469669 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 DUP2 SWAP1 SSTORE PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0x1724 JUMPI PUSH1 0x40 MLOAD PUSH4 0x119B4FD3 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP1 DUP5 MSTORE PUSH1 0x9 DUP4 MSTORE SWAP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP2 DUP2 ADD DUP4 SSTORE DUP3 DUP7 MSTORE SWAP4 DUP6 KECCAK256 ADD DUP6 SWAP1 SSTORE SWAP3 MSTORE SWAP1 SLOAD PUSH2 0x177C SWAP2 SWAP1 PUSH2 0x1D55 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP3 SWAP1 SWAP3 SSTORE SWAP1 MLOAD DUP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 DUP3 SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH19 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F01 PUSH1 0x40 SHL DUP4 LT PUSH2 0x1806 JUMPI PUSH19 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F01 PUSH1 0x40 SHL DUP4 DIV SWAP3 POP PUSH1 0x40 ADD JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x1832 JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DIV SWAP3 POP PUSH1 0x20 ADD JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x1850 JUMPI PUSH7 0x2386F26FC10000 DUP4 DIV SWAP3 POP PUSH1 0x10 ADD JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x1868 JUMPI PUSH4 0x5F5E100 DUP4 DIV SWAP3 POP PUSH1 0x8 ADD JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x187C JUMPI PUSH2 0x2710 DUP4 DIV SWAP3 POP PUSH1 0x4 ADD JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x188E JUMPI PUSH1 0x64 DUP4 DIV SWAP3 POP PUSH1 0x2 ADD JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x635 JUMPI PUSH1 0x1 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x18BA JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x18A2 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x18E2 DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x189F JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1908 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xBF8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1939 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1942 DUP4 PUSH2 0x190F JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1977 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1992 JUMPI PUSH2 0x1992 PUSH2 0x1950 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x19BA JUMPI PUSH2 0x19BA PUSH2 0x1950 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE DUP7 PUSH1 0x20 DUP6 DUP9 ADD ADD GT ISZERO PUSH2 0x19D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 PUSH1 0x20 DUP8 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP6 DUP4 ADD ADD MSTORE DUP1 SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A05 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1A1C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1A28 DUP5 DUP3 DUP6 ADD PUSH2 0x1966 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1A45 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1A4E DUP5 PUSH2 0x190F JUMP JUMPDEST SWAP3 POP PUSH2 0x1A5C PUSH1 0x20 DUP6 ADD PUSH2 0x190F JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1A7F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1A97 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1AA3 DUP7 DUP4 DUP8 ADD PUSH2 0x1966 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1AB9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1AC6 DUP6 DUP3 DUP7 ADD PUSH2 0x1966 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1AE3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1AEC DUP4 PUSH2 0x190F JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1B01 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B1E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC83 DUP3 PUSH2 0x190F JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x80 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1B3F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1B48 DUP7 PUSH2 0x190F JUMP JUMPDEST SWAP5 POP PUSH2 0x1B56 PUSH1 0x20 DUP8 ADD PUSH2 0x190F JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1B7A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP9 ADD SWAP2 POP DUP9 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1B8E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x1B9D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP10 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x1BAF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP7 SWAP10 SWAP6 SWAP9 POP SWAP4 SWAP7 POP PUSH1 0x20 ADD SWAP5 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1BD5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1BDE DUP4 PUSH2 0x190F JUMP JUMPDEST SWAP2 POP PUSH2 0x1BEC PUSH1 0x20 DUP5 ADD PUSH2 0x190F JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1C09 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1C29 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x9F9 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH2 0x1C58 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1C77 JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1C64 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1C99 JUMPI PUSH2 0x1C99 PUSH2 0x1950 JUMP JUMPDEST PUSH2 0x1CAD DUP2 PUSH2 0x1CA7 DUP5 SLOAD PUSH2 0x1BF5 JUMP JUMPDEST DUP5 PUSH2 0x1C2F JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x1CE2 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x1CCA JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH2 0x1C77 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1D11 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0x1CF2 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0x1D2F JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x635 JUMPI PUSH2 0x635 PUSH2 0x1D3F JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1DA6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0xC83 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x0 DUP3 DUP5 PUSH1 0xA0 DUP5 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0xA0 DUP5 DUP5 ADD ADD MSTORE PUSH1 0xA0 PUSH1 0x1F NOT PUSH1 0x1F DUP6 ADD AND DUP4 ADD ADD SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 SLOAD PUSH2 0x1E20 DUP2 PUSH2 0x1BF5 JUMP JUMPDEST PUSH1 0x1 DUP3 DUP2 AND DUP1 ISZERO PUSH2 0x1E38 JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x1E4D JUMPI PUSH2 0x1E7C JUMP JUMPDEST PUSH1 0xFF NOT DUP5 AND DUP8 MSTORE DUP3 ISZERO ISZERO DUP4 MUL DUP8 ADD SWAP5 POP PUSH2 0x1E7C JUMP JUMPDEST DUP9 PUSH1 0x0 MSTORE PUSH1 0x20 DUP1 PUSH1 0x0 KECCAK256 PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x1E73 JUMPI DUP2 SLOAD DUP11 DUP3 ADD MSTORE SWAP1 DUP5 ADD SWAP1 DUP3 ADD PUSH2 0x1E5A JUMP JUMPDEST POP POP POP DUP3 DUP8 ADD SWAP5 POP JUMPDEST POP POP POP POP DUP4 MLOAD PUSH2 0x1E90 DUP2 DUP4 PUSH1 0x20 DUP9 ADD PUSH2 0x189F JUMP JUMPDEST ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x7B226E616D65223A20224161766547686F737465722023000000000000000000 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD PUSH2 0x1ED1 DUP2 PUSH1 0x17 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x189F JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD PUSH1 0x17 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x1EF0 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x189F JUMP JUMPDEST PUSH32 0x222C226465736372697074696F6E223A224120636F6C6C656374696F6E206F66 SWAP3 ADD SWAP2 DUP3 MSTORE POP PUSH32 0x2031352C303030204161766547686F7374657220656E61626C65642062792045 PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x52433430342C20616E206578706572696D656E74616C20746F6B656E20737461 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x6E6461726420696E7370697265642062792050616E646F7261222C2265787465 PUSH1 0x60 DUP3 ADD MSTORE PUSH32 0x726E616C5F75726C223A2268747470733A2F2F6161766567686F737465722E6F PUSH1 0x80 DUP3 ADD MSTORE PUSH16 0x373634B73291161134B6B0B3B2911D11 PUSH1 0x81 SHL PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xB0 ADD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH2 0x1FE2 DUP2 DUP5 PUSH1 0x20 DUP9 ADD PUSH2 0x189F JUMP JUMPDEST DUP4 MLOAD SWAP1 DUP4 ADD SWAP1 PUSH2 0x1E90 DUP2 DUP4 PUSH1 0x20 DUP9 ADD PUSH2 0x189F JUMP JUMPDEST PUSH32 0x222C2261747472696275746573223A5B7B2274726169745F74797065223A2243 DUP2 MSTORE PUSH15 0x37B637B91116113B30B63AB2911D11 PUSH1 0x89 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 DUP3 MLOAD PUSH2 0x2046 DUP2 PUSH1 0x2F DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x189F JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD PUSH1 0x2F ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x646174613A6170706C69636174696F6E2F6A736F6E3B757466382C0000000000 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD PUSH2 0x208B DUP2 PUSH1 0x1B DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x189F JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD PUSH1 0x1B ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 JUMPDEST DUP1 DUP6 GT ISZERO PUSH2 0x20D3 JUMPI DUP2 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0x20B9 JUMPI PUSH2 0x20B9 PUSH2 0x1D3F JUMP JUMPDEST DUP1 DUP6 AND ISZERO PUSH2 0x20C6 JUMPI SWAP2 DUP2 MUL SWAP2 JUMPDEST SWAP4 DUP5 SHR SWAP4 SWAP1 DUP1 MUL SWAP1 PUSH2 0x209D JUMP JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x20EA JUMPI POP PUSH1 0x1 PUSH2 0x635 JUMP JUMPDEST DUP2 PUSH2 0x20F7 JUMPI POP PUSH1 0x0 PUSH2 0x635 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x210D JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x2117 JUMPI PUSH2 0x2133 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x635 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x2128 JUMPI PUSH2 0x2128 PUSH2 0x1D3F JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH2 0x635 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x2156 JUMPI POP DUP2 DUP2 EXP PUSH2 0x635 JUMP JUMPDEST PUSH2 0x2160 DUP4 DUP4 PUSH2 0x2098 JUMP JUMPDEST DUP1 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0x2174 JUMPI PUSH2 0x2174 PUSH2 0x1D3F JUMP JUMPDEST MUL SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC83 PUSH1 0xFF DUP5 AND DUP4 PUSH2 0x20DB JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x21A8 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH32 0x1DBCAF3BD65A9463B6C991D65C78CF5EBAD17478D717DD482A4DBFC9F1DFF64 PUSH20 0x6F6C634300081800330000000000000000000000 ",
							"sourceMap": "145:3085:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2800:18:4;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3511:46;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;3511:46:4;;;;;;-1:-1:-1;;;;;1019:32:5;;;1001:51;;989:2;974:18;3511:46:4;855:203:5;5342:642:4;;;;;;:::i;:::-;;:::i;:::-;;;1665:14:5;;1658:22;1640:41;;1628:2;1613:18;5342:642:4;1500:187:5;3036:36:4;;;;;;;;1838:25:5;;;1826:2;1811:18;3036:36:4;1692:177:5;409:98:3;;;;;;:::i;:::-;;:::i;:::-;;6391:1716:4;;;;;;:::i;:::-;;:::i;797:151::-;;;:::i;2936:31::-;;;;;;;;3562:4:5;3550:17;;;3532:36;;3520:2;3505:18;2936:31:4;3390:184:5;8403:405:4;;;;;;:::i;:::-;;:::i;3171:21::-;;;;;;629:158:3;;;;;;:::i;:::-;;:::i;4671:111:4:-;;;;;;:::i;:::-;;:::i;4854:193::-;;;;;;:::i;:::-;;:::i;3277:44::-;;;;;;:::i;:::-;;;;;;;;;;;;;;238:20;;;;;-1:-1:-1;;;;;238:20:4;;;2854;;;:::i;4122:41::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;6035:207;;;;;;:::i;:::-;;:::i;8166:160::-;;;;;;:::i;:::-;;:::i;8903:437::-;;;;;;:::i;:::-;;:::i;795:2432:3:-;;;;;;:::i;:::-;;:::i;211:26::-;;;:::i;3391:64:4:-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;515:106:3;;;;;;:::i;:::-;;:::i;3622:68:4:-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;183:21:3;;;:::i;570:219:4:-;;;;;;:::i;:::-;;:::i;2800:18::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;5342:642::-;5445:4;5480:6;;5466:10;:20;;:38;;;;;5503:1;5490:10;:14;5466:38;5462:491;;;5521:13;5537:20;;;:8;:20;;;;;;-1:-1:-1;;;;;5537:20:4;5578:10;:19;;;;;:59;;-1:-1:-1;;;;;;5602:23:4;;;;;;:16;:23;;;;;;;;5626:10;5602:35;;;;;;;;;;5601:36;5578:59;5574:121;;;5665:14;;-1:-1:-1;;;5665:14:4;;;;;;;;;;;5574:121;5711:23;;;;:11;:23;;;;;;;;;:33;;-1:-1:-1;;;;;;5711:33:4;-1:-1:-1;;;;;5711:33:4;;;;;;;;;5766:36;;1838:25:5;;;5766:36:4;;;;;;1811:18:5;5766:36:4;;;;;;;5506:308;5462:491;;;5845:10;5835:21;;;;:9;:21;;;;;;;;-1:-1:-1;;;;;5835:30:4;;;;;;;;;;;;:43;;;5900:41;1838:25:5;;;5835:30:4;;5845:10;5900:41;;1811:18:5;5900:41:4;;;;;;;5462:491;-1:-1:-1;5972:4:4;5342:642;;;;;:::o;409:98:3:-;325:5:4;;-1:-1:-1;;;;;325:5:4;311:10;:19;307:46;;339:14;;-1:-1:-1;;;339:14:4;;;;;;;;;;;307:46;481:7:3::1;:18;491:8:::0;481:7;:18:::1;:::i;:::-;;409:98:::0;:::o;6391:1716:4:-;6537:6;;6523:10;:20;6519:1581;;6572:20;;;;:8;:20;;;;;;-1:-1:-1;;;;;6564:28:4;;;6572:20;;6564:28;6560:91;;6620:15;;-1:-1:-1;;;6620:15:4;;;;;;;;;;;6560:91;-1:-1:-1;;;;;6671:16:4;;6667:82;;6715:18;;-1:-1:-1;;;6715:18:4;;;;;;;;;;;6667:82;6787:10;-1:-1:-1;;;;;6787:18:4;;;;;;:74;;-1:-1:-1;;;;;;6827:22:4;;;;;;:16;:22;;;;;;;;6850:10;6827:34;;;;;;;;;;6826:35;6787:74;:132;;;;-1:-1:-1;6896:23:4;;;;:11;:23;;;;;;-1:-1:-1;;;;;6896:23:4;6882:10;:37;;6787:132;6765:226;;;6961:14;;-1:-1:-1;;;6961:14:4;;;;;;;;;;;6765:226;7026:10;:8;:10::i;:::-;-1:-1:-1;;;;;7007:15:4;;;;;;:9;:15;;;;;:29;;:15;;;:29;;;;;:::i;:::-;;;;-1:-1:-1;7099:10:4;;-1:-1:-1;7099:8:4;:10::i;:::-;-1:-1:-1;;;;;7082:13:4;;;;;;;:9;:13;;;;;;;;:27;;;;;;;;7141:20;;;:8;:20;;;;;:25;;-1:-1:-1;;;;;;7141:25:4;;;;;;;;7188:11;:23;;;;;7181:30;;;;;;;;7289:12;;;;;:6;:12;;;;;7302:19;;:23;;-1:-1:-1;;7302:23:4;:::i;:::-;7289:37;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;7341:12:4;;;;:6;:12;;;;;;7354:23;;;:11;:23;;;;;;;7341:37;;7289;;-1:-1:-1;7289:37:4;;7341;;;;;;:::i;:::-;;;;;;;;;;;;:49;;;;-1:-1:-1;;;;;7425:12:4;;;;:6;:12;;;;;;:18;;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;7425:18:4;;;;;;;;;;;;7529:23;;;:11;:23;;;;;;;7504:22;;;;;;:48;-1:-1:-1;;;;;7606:10:4;;;;;:6;:10;;;;;:27;;7425:18;7606:27;;;;;;;;;;;;;;;7716:10;;:17;;:21;;7425:18;7716:21;:::i;:::-;7690:23;;;;:11;:23;;;;;;:47;;;;7759:30;;7702:10;;-1:-1:-1;;;;;7759:30:4;;;;;;;;;;;7829:2;-1:-1:-1;;;;;7809:35:4;7823:4;-1:-1:-1;;;;;7809:35:4;;7833:10;:8;:10::i;:::-;7809:35;;1838:25:5;;;1826:2;1811:18;7809:35:4;;;;;;;6545:1311;6391:1716;;;:::o;6519:1581::-;-1:-1:-1;;;;;7895:15:4;;7877;7895;;;:9;:15;;;;;;;;7911:10;7895:27;;;;;;;;-1:-1:-1;;7943:28:4;;7939:101;;8020:20;8030:10;8020:7;:20;:::i;:::-;-1:-1:-1;;;;;7990:15:4;;;;;;:9;:15;;;;;;;;8006:10;7990:27;;;;;;;:50;7939:101;8057:31;8067:4;8073:2;8077:10;8057:9;:31::i;:::-;;7862:238;6519:1581;6391:1716;;;:::o;797:151::-;325:5;;-1:-1:-1;;;;;325:5:4;311:10;:19;307:46;;339:14;;-1:-1:-1;;;339:14:4;;;;;;;;;;;307:46;876:1:::1;860:18:::0;;-1:-1:-1;;;;;;860:18:4::1;::::0;;896:44:::1;::::0;917:10:::1;::::0;896:44:::1;::::0;876:1;;896:44:::1;797:151::o:0;8403:405::-;8527:26;8540:4;8546:2;8550;8527:12;:26::i;:::-;-1:-1:-1;;;;;8584:14:4;;;:19;;;;:154;;-1:-1:-1;8620:61:4;;-1:-1:-1;;;8620:61:4;;;8656:10;8620:61;;;9162:34:5;-1:-1:-1;;;;;9232:15:5;;;9212:18;;;9205:43;9264:18;;;9257:34;;;9327:3;9307:18;;;9300:31;-1:-1:-1;9347:19:5;;;9340:30;8698:40:4;;8620:35;;;;8698:40;;9387:19:5;;8620:61:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;;8620:118:4;;;8584:154;8566:235;;;8772:17;;-1:-1:-1;;;8772:17:4;;;;;;;;;;;629:158:3;325:5:4;;-1:-1:-1;;;;;325:5:4;311:10;:19;307:46;;339:14;;-1:-1:-1;;;339:14:4;;;;;;;;;;;307:46;749:30:3::1;764:5;771:7;749:14;:30::i;4671:111:4:-:0;325:5;;-1:-1:-1;;;;;325:5:4;311:10;:19;307:46;;339:14;;-1:-1:-1;;;339:14:4;;;;;;;;;;;307:46;-1:-1:-1;;;;;4749:17:4;;;::::1;;::::0;;;:9:::1;:17;::::0;;;;:25;;-1:-1:-1;;4749:25:4::1;::::0;::::1;;::::0;;;::::1;::::0;;4671:111::o;4854:193::-;4912:13;4946:12;;;:8;:12;;;;;;-1:-1:-1;;;;;4946:12:4;;4971:69;;5018:10;;-1:-1:-1;;;5018:10:4;;;;;;;;;;;4971:69;4854:193;;;:::o;2854:20::-;;;;;;;:::i;6035:207::-;6138:10;6121:28;;;;:16;:28;;;;;;;;-1:-1:-1;;;;;6121:38:4;;;;;;;;;;;;:49;;-1:-1:-1;;6121:49:4;;;;;;;;;;6188:46;;1640:41:5;;;6121:38:4;;6138:10;6188:46;;1613:18:5;6188:46:4;;;;;;;6035:207;;:::o;8166:160::-;8261:4;8285:33;8295:10;8307:2;8311:6;8285:9;:33::i;:::-;8278:40;8166:160;-1:-1:-1;;;8166:160:4:o;8903:437::-;9057:26;9070:4;9076:2;9080;9057:12;:26::i;:::-;-1:-1:-1;;;;;9114:14:4;;;:19;;;;:156;;-1:-1:-1;9150:63:4;;-1:-1:-1;;;9150:63:4;;;9230:40;-1:-1:-1;;;;;9150:35:4;;;9230:40;;9150:63;;9186:10;;9198:4;;9204:2;;9208:4;;;;9150:63;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;;9150:120:4;;;9114:156;9096:237;;;9304:17;;-1:-1:-1;;;9304:17:4;;;;;;;;;;;795:2432:3;855:13;914:1;891:12;885:26;;;;;:::i;:::-;;;:30;881:2339;;;953:12;967:20;984:2;967:16;:20::i;:::-;939:49;;;;;;;;;:::i;:::-;;;;;;;;;;;;;932:56;;795:2432;;;:::o;881:2339::-;1021:10;1074:2;1057:20;;;;;;11534:19:5;;11578:2;11569:12;;11405:182;1057:20:3;;;;;;;;;;;;;1047:31;;;;;;1034:46;;1021:59;;1095:19;1129;1177:3;1169:4;:11;;;1165:1060;;1201:15;;;;;;;;;;;;;-1:-1:-1;;;1201:15:3;;;;;1235;;;;;;;;;;;;;-1:-1:-1;;;1235:15:3;;;;;1165:1060;;;1284:3;1276:4;:11;;;1272:953;;1308:15;;;;;;;;;;;;;-1:-1:-1;;;1308:15:3;;;;;1342:14;;;;;;;;;;;;;-1:-1:-1;;;1342:14:3;;;;;1272:953;;;1390:3;1382:4;:11;;;1378:847;;1414:15;;;;;;;;;;;;;-1:-1:-1;;;1414:15:3;;;;;1448:16;;;;;;;;;;;;;-1:-1:-1;;;1448:16:3;;;;;1378:847;;;1498:3;1490:4;:11;;;1486:739;;1522:15;;;;;;;;;;;;;-1:-1:-1;;;1522:15:3;;;;;1556:16;;;;;;;;;;;;;-1:-1:-1;;;1556:16:3;;;;;1486:739;;;1606:3;1598:4;:11;;;1594:631;;1630:15;;;;;;;;;;;;;-1:-1:-1;;;1630:15:3;;;;;1664:13;;;;;;;;;;;;;-1:-1:-1;;;1664:13:3;;;;;1594:631;;;1710:3;1702:4;:11;;;1698:527;;1734:15;;;;;;;;;;;;;-1:-1:-1;;;1734:15:3;;;;;1768;;;;;;;;;;;;;-1:-1:-1;;;1768:15:3;;;;;1698:527;;;1816:3;1808:4;:11;;;1804:421;;1840:15;;;;;;;;;;;;;-1:-1:-1;;;1840:15:3;;;;;1874;;;;;;;;;;;;;-1:-1:-1;;;1874:15:3;;;;;1804:421;;;1922:3;1914:4;:11;;;1910:315;;1946:15;;;;;;;;;;;;;-1:-1:-1;;;1946:15:3;;;;;1980:14;;;;;;;;;;;;;-1:-1:-1;;;1980:14:3;;;;;1910:315;;;2027:3;2019:4;:11;;;2015:210;;2051:15;;;;;;;;;;;;;-1:-1:-1;;;2051:15:3;;;;;2085:16;;;;;;;;;;;;;-1:-1:-1;;;2085:16:3;;;;;2015:210;;;2134:3;2126:4;:11;;;2122:103;;2158:16;;;;;;;;;;;;;-1:-1:-1;;;2158:16:3;;;;;2193;;;;;;;;;;;;;-1:-1:-1;;;2193:16:3;;;;;2122:103;2255:26;2393:20;2410:2;2393:16;:20::i;:::-;2352:62;;;;;;;;:::i;:::-;;;;-1:-1:-1;;2352:62:3;;;;;;;;;;2316:318;;2352:62;2316:318;;:::i;:::-;;;;;;;;;;;;;2667:7;2676:5;2653:29;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;2653:29:3;;;;;;;;;;2284:413;;;2653:29;2284:413;;:::i;:::-;;;;;;;;;;;;;2255:442;;2712:27;2842:5;2742:120;;;;;;;;:::i;:::-;;;;-1:-1:-1;;2742:120:3;;;;;;2877:37;;;;;;;;-1:-1:-1;;;2742:120:3;2877:37;;;;;;;3083:42;;2742:120;;-1:-1:-1;3083:42:3;;3097:12;;2742:120;;3083:42;;:::i;:::-;;;;-1:-1:-1;;3083:42:3;;;;;;;;;;3043:146;;3152:14;;3083:42;3043:146;;:::i;:::-;;;;-1:-1:-1;;3043:146:3;;;;;;;;;;2955:253;;3043:146;2955:253;;:::i;:::-;;;;;;;;;;;;;2931:277;;;;;;;;795:2432;;;:::o;211:26::-;;;;;;;:::i;515:106::-;325:5:4;;-1:-1:-1;;;;;325:5:4;311:10;:19;307:46;;339:14;;-1:-1:-1;;;339:14:4;;;;;;;;;;;307:46;589:12:3::1;:24;604:9:::0;589:12;:24:::1;:::i;183:21::-:0;;;;;;;:::i;570:219:4:-;325:5;;-1:-1:-1;;;;;325:5:4;311:10;:19;307:46;;339:14;;-1:-1:-1;;;339:14:4;;;;;;;;;;;307:46;-1:-1:-1;;;;;653:20:4;::::1;649:47;;682:14;;-1:-1:-1::0;;;682:14:4::1;;;;;;;;;;;649:47;709:5;:14:::0;;-1:-1:-1;;;;;;709:14:4::1;-1:-1:-1::0;;;;;709:14:4;::::1;::::0;;::::1;::::0;;741:40:::1;::::0;709:14;;762:10:::1;::::0;741:40:::1;::::0;709:5;741:40:::1;570:219:::0;:::o;10540:92::-;10583:7;10610:14;10616:8;10610:2;:14;:::i;:::-;10603:21;;10540:92;:::o;9408:1093::-;9521:4;9538:12;9553:10;:8;:10::i;:::-;-1:-1:-1;;;;;9604:15:4;;;9574:27;9604:15;;;:9;:15;;;;;;;;9662:13;;;;;;;;;9688:15;;;9538:25;;-1:-1:-1;9604:15:4;;9662:13;;9707:6;;9604:15;9688:25;9707:6;9604:15;9688:25;:::i;:::-;;;;-1:-1:-1;;;;;;;9751:13:4;;;;;;;:9;:13;;;;;;;;:23;;;;;;9859:15;;;;;:9;:15;;;;;;9854:251;;-1:-1:-1;;;;;9965:15:4;;9891:22;9965:15;;;:9;:15;;;;;;:22;;9983:4;;9965:22;:::i;:::-;9917:26;9939:4;9917:19;:26;:::i;:::-;9916:72;;;;:::i;:::-;9891:97;;10008:9;10003:91;10027:14;10023:1;:18;10003:91;;;10067:11;10073:4;10067:5;:11::i;:::-;10043:3;;10003:91;;;;9876:229;9854:251;-1:-1:-1;;;;;10181:13:4;;;;;;:9;:13;;;;;;;;10176:247;;10211:22;10279:28;10303:4;10279:21;:28;:::i;:::-;-1:-1:-1;;;;;10237:13:4;;;;;;:9;:13;;;;;;:20;;10253:4;;10237:20;:::i;:::-;10236:72;;;;:::i;:::-;10211:97;;10328:9;10323:89;10347:14;10343:1;:18;10323:89;;;10387:9;10393:2;10387:5;:9::i;:::-;10363:3;;10323:89;;;;10196:227;10176:247;10460:2;-1:-1:-1;;;;;10440:31:4;10454:4;-1:-1:-1;;;;;10440:31:4;;10464:6;10440:31;;;;1838:25:5;;1826:2;1811:18;;1692:177;10440:31:4;;;;;;;;-1:-1:-1;10489:4:4;;9408:1093;-1:-1:-1;;;;;;9408:1093:4:o;11503:160::-;11616:4;:12;11623:5;11616:4;:12;:::i;:::-;-1:-1:-1;11639:6:4;:16;11648:7;11639:6;:16;:::i;637:698:0:-;693:13;742:14;759:17;770:5;759:10;:17::i;:::-;779:1;759:21;742:38;;794:20;828:6;817:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;817:18:0;-1:-1:-1;794:41:0;-1:-1:-1;955:28:0;;;971:2;955:28;1010:282;-1:-1:-1;;1041:5:0;-1:-1:-1;;;1175:2:0;1164:14;;1159:32;1041:5;1146:46;1236:2;1227:11;;;-1:-1:-1;1256:21:0;1010:282;1256:21;-1:-1:-1;1312:6:0;637:698;-1:-1:-1;;;637:698:0:o;11122:373:4:-;-1:-1:-1;;;;;11183:18:4;;11179:73;;11225:15;;-1:-1:-1;;;11225:15:4;;;;;;;;;;;11179:73;-1:-1:-1;;;;;11277:12:4;;11264:10;11277:12;;;:6;:12;;;;;11290:19;;:23;;11312:1;;11290:23;:::i;:::-;11277:37;;;;;;;;:::i;:::-;;;;;;;;;11264:50;;11325:6;:12;11332:4;-1:-1:-1;;;;;11325:12:4;-1:-1:-1;;;;;11325:12:4;;;;;;;;;;;;:18;;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;11325:18:4;;;;;;;;;;;;11361:15;;;:11;:15;;;;;;11354:22;;;11394:8;:12;;;;;11387:19;;-1:-1:-1;;;;;;11387:19:4;;;;;;11424:11;:15;;;;;;11417:22;;;;;;;;11457:30;11373:2;;11325:18;-1:-1:-1;;;;;11457:30:4;;;;;11325:18;;11457:30;11168:327;11122:373;:::o;10640:474::-;-1:-1:-1;;;;;10699:16:4;;10695:74;;10739:18;;-1:-1:-1;;;10739:18:4;;;;;;;;;;;10695:74;10806:6;:8;;;;;;;;:6;10874:12;;;:8;:12;;;;;;-1:-1:-1;;;;;10874:12:4;:26;10870:81;;10924:15;;-1:-1:-1;;;10924:15:4;;;;;;;;;;;10870:81;10963:12;;;;:8;:12;;;;;;;;:17;;-1:-1:-1;;;;;;10963:17:4;-1:-1:-1;;;;;10963:17:4;;;;;;;;10991:10;;;:6;:10;;;;;:19;;-1:-1:-1;10991:19:4;;;;;;;;;;;;;;;11039:10;;:17;;:21;;-1:-1:-1;11039:21:4;:::i;:::-;11021:15;;;;:11;:15;;;;;;:39;;;;11078:28;;11033:2;;-1:-1:-1;;;;;11078:28:4;;;;;11021:15;;11078:28;10684:430;10640:474;:::o;12214:916:1:-;12267:7;;-1:-1:-1;;;12342:17:1;;12338:103;;-1:-1:-1;;;12379:17:1;;;-1:-1:-1;12424:2:1;12414:12;12338:103;12467:8;12458:5;:17;12454:103;;12504:8;12495:17;;;-1:-1:-1;12540:2:1;12530:12;12454:103;12583:8;12574:5;:17;12570:103;;12620:8;12611:17;;;-1:-1:-1;12656:2:1;12646:12;12570:103;12699:7;12690:5;:16;12686:100;;12735:7;12726:16;;;-1:-1:-1;12770:1:1;12760:11;12686:100;12812:7;12803:5;:16;12799:100;;12848:7;12839:16;;;-1:-1:-1;12883:1:1;12873:11;12799:100;12925:7;12916:5;:16;12912:100;;12961:7;12952:16;;;-1:-1:-1;12996:1:1;12986:11;12912:100;13038:7;13029:5;:16;13025:66;;13075:1;13065:11;13117:6;12214:916;-1:-1:-1;;12214:916:1:o;14:250:5:-;99:1;109:113;123:6;120:1;117:13;109:113;;;199:11;;;193:18;180:11;;;173:39;145:2;138:10;109:113;;;-1:-1:-1;;256:1:5;238:16;;231:27;14:250::o;269:396::-;418:2;407:9;400:21;381:4;450:6;444:13;493:6;488:2;477:9;473:18;466:34;509:79;581:6;576:2;565:9;561:18;556:2;548:6;544:15;509:79;:::i;:::-;649:2;628:15;-1:-1:-1;;624:29:5;609:45;;;;656:2;605:54;;269:396;-1:-1:-1;;269:396:5:o;670:180::-;729:6;782:2;770:9;761:7;757:23;753:32;750:52;;;798:1;795;788:12;750:52;-1:-1:-1;821:23:5;;670:180;-1:-1:-1;670:180:5:o;1063:173::-;1131:20;;-1:-1:-1;;;;;1180:31:5;;1170:42;;1160:70;;1226:1;1223;1216:12;1241:254;1309:6;1317;1370:2;1358:9;1349:7;1345:23;1341:32;1338:52;;;1386:1;1383;1376:12;1338:52;1409:29;1428:9;1409:29;:::i;:::-;1399:39;1485:2;1470:18;;;;1457:32;;-1:-1:-1;;;1241:254:5:o;1874:127::-;1935:10;1930:3;1926:20;1923:1;1916:31;1966:4;1963:1;1956:15;1990:4;1987:1;1980:15;2006:719;2049:5;2102:3;2095:4;2087:6;2083:17;2079:27;2069:55;;2120:1;2117;2110:12;2069:55;2156:6;2143:20;2182:18;2219:2;2215;2212:10;2209:36;;;2225:18;;:::i;:::-;2300:2;2294:9;2268:2;2354:13;;-1:-1:-1;;2350:22:5;;;2374:2;2346:31;2342:40;2330:53;;;2398:18;;;2418:22;;;2395:46;2392:72;;;2444:18;;:::i;:::-;2484:10;2480:2;2473:22;2519:2;2511:6;2504:18;2565:3;2558:4;2553:2;2545:6;2541:15;2537:26;2534:35;2531:55;;;2582:1;2579;2572:12;2531:55;2646:2;2639:4;2631:6;2627:17;2620:4;2612:6;2608:17;2595:54;2693:1;2686:4;2681:2;2673:6;2669:15;2665:26;2658:37;2713:6;2704:15;;;;;;2006:719;;;;:::o;2730:322::-;2799:6;2852:2;2840:9;2831:7;2827:23;2823:32;2820:52;;;2868:1;2865;2858:12;2820:52;2908:9;2895:23;2941:18;2933:6;2930:30;2927:50;;;2973:1;2970;2963:12;2927:50;2996;3038:7;3029:6;3018:9;3014:22;2996:50;:::i;:::-;2986:60;2730:322;-1:-1:-1;;;;2730:322:5:o;3057:328::-;3134:6;3142;3150;3203:2;3191:9;3182:7;3178:23;3174:32;3171:52;;;3219:1;3216;3209:12;3171:52;3242:29;3261:9;3242:29;:::i;:::-;3232:39;;3290:38;3324:2;3313:9;3309:18;3290:38;:::i;:::-;3280:48;;3375:2;3364:9;3360:18;3347:32;3337:42;;3057:328;;;;;:::o;3579:543::-;3667:6;3675;3728:2;3716:9;3707:7;3703:23;3699:32;3696:52;;;3744:1;3741;3734:12;3696:52;3784:9;3771:23;3813:18;3854:2;3846:6;3843:14;3840:34;;;3870:1;3867;3860:12;3840:34;3893:50;3935:7;3926:6;3915:9;3911:22;3893:50;:::i;:::-;3883:60;;3996:2;3985:9;3981:18;3968:32;3952:48;;4025:2;4015:8;4012:16;4009:36;;;4041:1;4038;4031:12;4009:36;;4064:52;4108:7;4097:8;4086:9;4082:24;4064:52;:::i;:::-;4054:62;;;3579:543;;;;;:::o;4127:347::-;4192:6;4200;4253:2;4241:9;4232:7;4228:23;4224:32;4221:52;;;4269:1;4266;4259:12;4221:52;4292:29;4311:9;4292:29;:::i;:::-;4282:39;;4371:2;4360:9;4356:18;4343:32;4418:5;4411:13;4404:21;4397:5;4394:32;4384:60;;4440:1;4437;4430:12;4384:60;4463:5;4453:15;;;4127:347;;;;;:::o;4479:186::-;4538:6;4591:2;4579:9;4570:7;4566:23;4562:32;4559:52;;;4607:1;4604;4597:12;4559:52;4630:29;4649:9;4630:29;:::i;4670:808::-;4767:6;4775;4783;4791;4799;4852:3;4840:9;4831:7;4827:23;4823:33;4820:53;;;4869:1;4866;4859:12;4820:53;4892:29;4911:9;4892:29;:::i;:::-;4882:39;;4940:38;4974:2;4963:9;4959:18;4940:38;:::i;:::-;4930:48;;5025:2;5014:9;5010:18;4997:32;4987:42;;5080:2;5069:9;5065:18;5052:32;5103:18;5144:2;5136:6;5133:14;5130:34;;;5160:1;5157;5150:12;5130:34;5198:6;5187:9;5183:22;5173:32;;5243:7;5236:4;5232:2;5228:13;5224:27;5214:55;;5265:1;5262;5255:12;5214:55;5305:2;5292:16;5331:2;5323:6;5320:14;5317:34;;;5347:1;5344;5337:12;5317:34;5392:7;5387:2;5378:6;5374:2;5370:15;5366:24;5363:37;5360:57;;;5413:1;5410;5403:12;5360:57;4670:808;;;;-1:-1:-1;4670:808:5;;-1:-1:-1;5444:2:5;5436:11;;5466:6;4670:808;-1:-1:-1;;;4670:808:5:o;5483:260::-;5551:6;5559;5612:2;5600:9;5591:7;5587:23;5583:32;5580:52;;;5628:1;5625;5618:12;5580:52;5651:29;5670:9;5651:29;:::i;:::-;5641:39;;5699:38;5733:2;5722:9;5718:18;5699:38;:::i;:::-;5689:48;;5483:260;;;;;:::o;5748:380::-;5827:1;5823:12;;;;5870;;;5891:61;;5945:4;5937:6;5933:17;5923:27;;5891:61;5998:2;5990:6;5987:14;5967:18;5964:38;5961:161;;6044:10;6039:3;6035:20;6032:1;6025:31;6079:4;6076:1;6069:15;6107:4;6104:1;6097:15;5961:161;;5748:380;;;:::o;6259:543::-;6361:2;6356:3;6353:11;6350:446;;;6397:1;6421:5;6418:1;6411:16;6465:4;6462:1;6452:18;6535:2;6523:10;6519:19;6516:1;6512:27;6506:4;6502:38;6571:4;6559:10;6556:20;6553:47;;;-1:-1:-1;6594:4:5;6553:47;6649:2;6644:3;6640:12;6637:1;6633:20;6627:4;6623:31;6613:41;;6704:82;6722:2;6715:5;6712:13;6704:82;;;6767:17;;;6748:1;6737:13;6704:82;;;6708:3;;;6259:543;;;:::o;6978:1345::-;7104:3;7098:10;7131:18;7123:6;7120:30;7117:56;;;7153:18;;:::i;:::-;7182:97;7272:6;7232:38;7264:4;7258:11;7232:38;:::i;:::-;7226:4;7182:97;:::i;:::-;7334:4;;7391:2;7380:14;;7408:1;7403:663;;;;8110:1;8127:6;8124:89;;;-1:-1:-1;8179:19:5;;;8173:26;8124:89;-1:-1:-1;;6935:1:5;6931:11;;;6927:24;6923:29;6913:40;6959:1;6955:11;;;6910:57;8226:81;;7373:944;;7403:663;6206:1;6199:14;;;6243:4;6230:18;;-1:-1:-1;;7439:20:5;;;7557:236;7571:7;7568:1;7565:14;7557:236;;;7660:19;;;7654:26;7639:42;;7752:27;;;;7720:1;7708:14;;;;7587:19;;7557:236;;;7561:3;7821:6;7812:7;7809:19;7806:201;;;7882:19;;;7876:26;-1:-1:-1;;7965:1:5;7961:14;;;7977:3;7957:24;7953:37;7949:42;7934:58;7919:74;;7806:201;-1:-1:-1;;;;;8053:1:5;8037:14;;;8033:22;8020:36;;-1:-1:-1;6978:1345:5:o;8328:127::-;8389:10;8384:3;8380:20;8377:1;8370:31;8420:4;8417:1;8410:15;8444:4;8441:1;8434:15;8460:128;8527:9;;;8548:11;;;8545:37;;;8562:18;;:::i;8593:127::-;8654:10;8649:3;8645:20;8642:1;8635:31;8685:4;8682:1;8675:15;8709:4;8706:1;8699:15;8725:127;8786:10;8781:3;8777:20;8774:1;8767:31;8817:4;8814:1;8807:15;8841:4;8838:1;8831:15;9417:290;9486:6;9539:2;9527:9;9518:7;9514:23;9510:32;9507:52;;;9555:1;9552;9545:12;9507:52;9581:16;;-1:-1:-1;;;;;;9626:32:5;;9616:43;;9606:71;;9673:1;9670;9663:12;9712:662;-1:-1:-1;;;;;9991:15:5;;;9973:34;;10043:15;;10038:2;10023:18;;10016:43;10090:2;10075:18;;10068:34;;;10138:3;10133:2;10118:18;;10111:31;;;10158:19;;10151:35;;;9916:4;10179:6;10229;9953:3;10208:19;;10195:49;10294:1;10288:3;10279:6;10268:9;10264:22;10260:32;10253:43;10364:3;10357:2;10353:7;10348:2;10340:6;10336:15;10332:29;10321:9;10317:45;10313:55;10305:63;;9712:662;;;;;;;;:::o;10379:1021::-;10555:3;10584:1;10617:6;10611:13;10647:36;10673:9;10647:36;:::i;:::-;10702:1;10719:17;;;10745:133;;;;10892:1;10887:358;;;;10712:533;;10745:133;-1:-1:-1;;10778:24:5;;10766:37;;10851:14;;10844:22;10832:35;;10823:45;;;-1:-1:-1;10745:133:5;;10887:358;10918:6;10915:1;10908:17;10948:4;10993;10990:1;10980:18;11020:1;11034:165;11048:6;11045:1;11042:13;11034:165;;;11126:14;;11113:11;;;11106:35;11169:16;;;;11063:10;;11034:165;;;11038:3;;;11228:6;11223:3;11219:16;11212:23;;10712:533;;;;;11276:6;11270:13;11292:68;11351:8;11346:3;11339:4;11331:6;11327:17;11292:68;:::i;:::-;11376:18;;10379:1021;-1:-1:-1;;;;10379:1021:5:o;11592:486::-;11844:66;11839:3;11832:79;11814:3;11940:6;11934:13;11956:75;12024:6;12019:2;12014:3;12010:12;12003:4;11995:6;11991:17;11956:75;:::i;:::-;12051:16;;;;12069:2;12047:25;;11592:486;-1:-1:-1;;11592:486:5:o;12083:930::-;12315:3;12353:6;12347:13;12369:66;12428:6;12423:3;12416:4;12408:6;12404:17;12369:66;:::i;:::-;12496;12457:16;;12482:81;;;-1:-1:-1;12597:34:5;12590:4;12579:16;;12572:60;12664:34;12659:2;12648:14;;12641:58;12731:66;12726:2;12715:14;;12708:90;12831:66;12825:3;12814:15;;12807:91;-1:-1:-1;;;12925:3:5;12914:15;;12907:69;13003:3;12992:15;;12083:930;-1:-1:-1;12083:930:5:o;13018:496::-;13197:3;13235:6;13229:13;13251:66;13310:6;13305:3;13298:4;13290:6;13286:17;13251:66;:::i;:::-;13380:13;;13339:16;;;;13402:70;13380:13;13339:16;13449:4;13437:17;;13402:70;:::i;13519:567::-;13781:66;13776:3;13769:79;13887:32;13882:3;13878:42;13873:2;13868:3;13864:12;13857:64;13751:3;13950:6;13944:13;13966:73;14032:6;14027:2;14022:3;14018:12;14013:2;14005:6;14001:15;13966:73;:::i;:::-;14059:16;;;;14077:2;14055:25;;13519:567;-1:-1:-1;;13519:567:5:o;14091:449::-;14343:29;14338:3;14331:42;14313:3;14402:6;14396:13;14418:75;14486:6;14481:2;14476:3;14472:12;14465:4;14457:6;14453:17;14418:75;:::i;:::-;14513:16;;;;14531:2;14509:25;;14091:449;-1:-1:-1;;14091:449:5:o;14545:416::-;14634:1;14671:5;14634:1;14685:270;14706:7;14696:8;14693:21;14685:270;;;14765:4;14761:1;14757:6;14753:17;14747:4;14744:27;14741:53;;;14774:18;;:::i;:::-;14824:7;14814:8;14810:22;14807:55;;;14844:16;;;;14807:55;14923:22;;;;14883:15;;;;14685:270;;;14689:3;14545:416;;;;;:::o;14966:806::-;15015:5;15045:8;15035:80;;-1:-1:-1;15086:1:5;15100:5;;15035:80;15134:4;15124:76;;-1:-1:-1;15171:1:5;15185:5;;15124:76;15216:4;15234:1;15229:59;;;;15302:1;15297:130;;;;15209:218;;15229:59;15259:1;15250:10;;15273:5;;;15297:130;15334:3;15324:8;15321:17;15318:43;;;15341:18;;:::i;:::-;-1:-1:-1;;15397:1:5;15383:16;;15412:5;;15209:218;;15511:2;15501:8;15498:16;15492:3;15486:4;15483:13;15479:36;15473:2;15463:8;15460:16;15455:2;15449:4;15446:12;15442:35;15439:77;15436:159;;;-1:-1:-1;15548:19:5;;;15580:5;;15436:159;15627:34;15652:8;15646:4;15627:34;:::i;:::-;15697:6;15693:1;15689:6;15685:19;15676:7;15673:32;15670:58;;;15708:18;;:::i;:::-;15746:20;;14966:806;-1:-1:-1;;;14966:806:5:o;15777:140::-;15835:5;15864:47;15905:4;15895:8;15891:19;15885:4;15864:47;:::i;16054:217::-;16094:1;16120;16110:132;;16164:10;16159:3;16155:20;16152:1;16145:31;16199:4;16196:1;16189:15;16227:4;16224:1;16217:15;16110:132;-1:-1:-1;16256:9:5;;16054:217::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1735000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "33307",
								"balanceOf(address)": "2565",
								"baseTokenURI()": "infinite",
								"dataURI()": "infinite",
								"decimals()": "infinite",
								"getApproved(uint256)": "2523",
								"isApprovedForAll(address,address)": "infinite",
								"minted()": "2340",
								"name()": "infinite",
								"owner()": "2405",
								"ownerOf(uint256)": "2622",
								"revokeOwnership()": "28083",
								"safeTransferFrom(address,address,uint256)": "infinite",
								"safeTransferFrom(address,address,uint256,bytes)": "infinite",
								"setApprovalForAll(address,bool)": "26652",
								"setDataURI(string)": "infinite",
								"setNameSymbol(string,string)": "infinite",
								"setTokenURI(string)": "infinite",
								"setWhitelist(address,bool)": "26923",
								"symbol()": "infinite",
								"tokenURI(uint256)": "infinite",
								"totalSupply()": "infinite",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "28375",
								"whitelist(address)": "2576"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 145,
									"end": 3230,
									"name": "PUSH",
									"source": 3,
									"value": "C0"
								},
								{
									"begin": 145,
									"end": 3230,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 145,
									"end": 3230,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 246,
									"end": 401,
									"name": "CALLVALUE",
									"source": 3
								},
								{
									"begin": 246,
									"end": 401,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 246,
									"end": 401,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 246,
									"end": 401,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 246,
									"end": 401,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 246,
									"end": 401,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 246,
									"end": 401,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 246,
									"end": 401,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 246,
									"end": 401,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 246,
									"end": 401,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 246,
									"end": 401,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 246,
									"end": 401,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 246,
									"end": 401,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 246,
									"end": 401,
									"name": "PUSHSIZE",
									"source": 3
								},
								{
									"begin": 246,
									"end": 401,
									"name": "CODESIZE",
									"source": 3
								},
								{
									"begin": 246,
									"end": 401,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 246,
									"end": 401,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 246,
									"end": 401,
									"name": "PUSHSIZE",
									"source": 3
								},
								{
									"begin": 246,
									"end": 401,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 246,
									"end": 401,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 246,
									"end": 401,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 246,
									"end": 401,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 246,
									"end": 401,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 246,
									"end": 401,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 246,
									"end": 401,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 246,
									"end": 401,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 246,
									"end": 401,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 246,
									"end": 401,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 246,
									"end": 401,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 246,
									"end": 401,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 246,
									"end": 401,
									"name": "tag",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 246,
									"end": 401,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 4192,
									"end": 4528,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 4192,
									"end": 4528,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 4192,
									"end": 4528,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 4192,
									"end": 4528,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 4192,
									"end": 4528,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 4192,
									"end": 4528,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 4192,
									"end": 4528,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 4192,
									"end": 4528,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 4192,
									"end": 4528,
									"name": "PUSH",
									"source": 4,
									"value": "B"
								},
								{
									"begin": 4192,
									"end": 4528,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 4192,
									"end": 4528,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 4192,
									"end": 4528,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 4192,
									"end": 4528,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "20B0BB32A3B437B9BA32B9"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A9"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 4192,
									"end": 4528,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 4192,
									"end": 4528,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 4192,
									"end": 4528,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 4192,
									"end": 4528,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 4192,
									"end": 4528,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 4192,
									"end": 4528,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 4192,
									"end": 4528,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 4192,
									"end": 4528,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 4192,
									"end": 4528,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 4192,
									"end": 4528,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 4192,
									"end": 4528,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 4192,
									"end": 4528,
									"name": "PUSH",
									"source": 4,
									"value": "B"
								},
								{
									"begin": 4192,
									"end": 4528,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 4192,
									"end": 4528,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 4192,
									"end": 4528,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 4192,
									"end": 4528,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "20A0AB22A3A427A9AA22A9"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A9"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 4192,
									"end": 4528,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 4192,
									"end": 4528,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 4192,
									"end": 4528,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 327,
									"end": 329,
									"name": "PUSH",
									"source": 3,
									"value": "12"
								},
								{
									"begin": 331,
									"end": 336,
									"name": "PUSH",
									"source": 3,
									"value": "3A98"
								},
								{
									"begin": 338,
									"end": 344,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 4369,
									"end": 4375,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 444,
									"end": 445,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 426,
									"end": 446,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 426,
									"end": 432,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 426,
									"end": 446,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 426,
									"end": 446,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 422,
									"end": 469,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "8"
								},
								{
									"begin": 422,
									"end": 469,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 455,
									"end": 469,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 455,
									"end": 469,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "49E27CFF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 455,
									"end": 469,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 455,
									"end": 469,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 455,
									"end": 469,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 455,
									"end": 469,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 455,
									"end": 469,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 455,
									"end": 469,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 455,
									"end": 469,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 455,
									"end": 469,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 455,
									"end": 469,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 455,
									"end": 469,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 455,
									"end": 469,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 422,
									"end": 469,
									"name": "tag",
									"source": 4,
									"value": "8"
								},
								{
									"begin": 422,
									"end": 469,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 482,
									"end": 487,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 496,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 482,
									"end": 496,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 482,
									"end": 496,
									"name": "AND",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 482,
									"end": 496,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 482,
									"end": 496,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 482,
									"end": 496,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 482,
									"end": 496,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 482,
									"end": 496,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 482,
									"end": 496,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 482,
									"end": 496,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 514,
									"end": 554,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 514,
									"end": 554,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 482,
									"end": 496,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 482,
									"end": 496,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 482,
									"end": 487,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 514,
									"end": 554,
									"name": "PUSH",
									"source": 4,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 514,
									"end": 554,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 482,
									"end": 487,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 482,
									"end": 487,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 514,
									"end": 554,
									"name": "LOG3",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 4388,
									"end": 4392,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 4388,
									"end": 4400,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "10"
								},
								{
									"begin": 4395,
									"end": 4400,
									"name": "DUP7",
									"source": 4
								},
								{
									"begin": 4388,
									"end": 4392,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 4388,
									"end": 4400,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "11"
								},
								{
									"begin": 4388,
									"end": 4400,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 4388,
									"end": 4400,
									"modifierDepth": 1,
									"name": "tag",
									"source": 4,
									"value": "10"
								},
								{
									"begin": 4388,
									"end": 4400,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 4411,
									"end": 4417,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 4411,
									"end": 4427,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "12"
								},
								{
									"begin": 4420,
									"end": 4427,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 4411,
									"end": 4417,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 4411,
									"end": 4427,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "11"
								},
								{
									"begin": 4411,
									"end": 4427,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 4411,
									"end": 4427,
									"modifierDepth": 1,
									"name": "tag",
									"source": 4,
									"value": "12"
								},
								{
									"begin": 4411,
									"end": 4427,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 4438,
									"end": 4458,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 4,
									"value": "FF"
								},
								{
									"begin": 4438,
									"end": 4458,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 4438,
									"end": 4458,
									"modifierDepth": 1,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 4438,
									"end": 4458,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 4,
									"value": "80"
								},
								{
									"begin": 4438,
									"end": 4458,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 4438,
									"end": 4458,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 4438,
									"end": 4458,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 4505,
									"end": 4519,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "13"
								},
								{
									"begin": 4505,
									"end": 4519,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 4505,
									"end": 4507,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 4,
									"value": "A"
								},
								{
									"begin": 4505,
									"end": 4519,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "14"
								},
								{
									"begin": 4505,
									"end": 4519,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 4505,
									"end": 4519,
									"modifierDepth": 1,
									"name": "tag",
									"source": 4,
									"value": "13"
								},
								{
									"begin": 4505,
									"end": 4519,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 4483,
									"end": 4520,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "15"
								},
								{
									"begin": 4483,
									"end": 4520,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 4483,
									"end": 4501,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 4483,
									"end": 4520,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "16"
								},
								{
									"begin": 4483,
									"end": 4520,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 4483,
									"end": 4520,
									"modifierDepth": 1,
									"name": "tag",
									"source": 4,
									"value": "15"
								},
								{
									"begin": 4483,
									"end": 4520,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 4469,
									"end": 4520,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 4,
									"value": "A0"
								},
								{
									"begin": 4469,
									"end": 4520,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 357,
									"end": 374,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 357,
									"end": 374,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 357,
									"end": 374,
									"modifierDepth": 1,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 357,
									"end": 374,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 357,
									"end": 374,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 357,
									"end": 374,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 357,
									"end": 374,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 357,
									"end": 366,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 357,
									"end": 374,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 357,
									"end": 374,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 357,
									"end": 374,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 357,
									"end": 374,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 357,
									"end": 374,
									"name": "KECCAK256",
									"source": 3
								},
								{
									"begin": 377,
									"end": 393,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "32D26D12E980B600000"
								},
								{
									"begin": 357,
									"end": 393,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 357,
									"end": 393,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 145,
									"end": 3230,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "27"
								},
								{
									"begin": 145,
									"end": 3230,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 145,
									"end": 3230,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 14,
									"end": 304,
									"name": "tag",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 14,
									"end": 304,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 84,
									"end": 90,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 137,
									"end": 139,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 125,
									"end": 134,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 116,
									"end": 123,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 112,
									"end": 135,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 108,
									"end": 140,
									"name": "SLT",
									"source": 5
								},
								{
									"begin": 105,
									"end": 157,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 105,
									"end": 157,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "29"
								},
								{
									"begin": 105,
									"end": 157,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 153,
									"end": 154,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 150,
									"end": 151,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 143,
									"end": 155,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 105,
									"end": 157,
									"name": "tag",
									"source": 5,
									"value": "29"
								},
								{
									"begin": 105,
									"end": 157,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 179,
									"end": 195,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 179,
									"end": 195,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 224,
									"end": 255,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 224,
									"end": 255,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 214,
									"end": 256,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 214,
									"end": 256,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 204,
									"end": 274,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "30"
								},
								{
									"begin": 204,
									"end": 274,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 270,
									"end": 271,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 267,
									"end": 268,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 260,
									"end": 272,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 204,
									"end": 274,
									"name": "tag",
									"source": 5,
									"value": "30"
								},
								{
									"begin": 204,
									"end": 274,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 293,
									"end": 298,
									"name": "SWAP4",
									"source": 5
								},
								{
									"begin": 14,
									"end": 304,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 14,
									"end": 304,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 309,
									"end": 436,
									"name": "tag",
									"source": 5,
									"value": "19"
								},
								{
									"begin": 309,
									"end": 436,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 370,
									"end": 380,
									"name": "PUSH",
									"source": 5,
									"value": "4E487B71"
								},
								{
									"begin": 365,
									"end": 368,
									"name": "PUSH",
									"source": 5,
									"value": "E0"
								},
								{
									"begin": 361,
									"end": 381,
									"name": "SHL",
									"source": 5
								},
								{
									"begin": 358,
									"end": 359,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 351,
									"end": 382,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 401,
									"end": 405,
									"name": "PUSH",
									"source": 5,
									"value": "41"
								},
								{
									"begin": 398,
									"end": 399,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 391,
									"end": 406,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 425,
									"end": 429,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 422,
									"end": 423,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 415,
									"end": 430,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 441,
									"end": 821,
									"name": "tag",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 441,
									"end": 821,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 520,
									"end": 521,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 516,
									"end": 528,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 516,
									"end": 528,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 516,
									"end": 528,
									"name": "SHR",
									"source": 5
								},
								{
									"begin": 516,
									"end": 528,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 563,
									"end": 575,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 563,
									"end": 575,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 563,
									"end": 575,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 584,
									"end": 645,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "33"
								},
								{
									"begin": 584,
									"end": 645,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 638,
									"end": 642,
									"name": "PUSH",
									"source": 5,
									"value": "7F"
								},
								{
									"begin": 630,
									"end": 636,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 626,
									"end": 643,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 616,
									"end": 643,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 616,
									"end": 643,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 584,
									"end": 645,
									"name": "tag",
									"source": 5,
									"value": "33"
								},
								{
									"begin": 584,
									"end": 645,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 691,
									"end": 693,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 683,
									"end": 689,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 680,
									"end": 694,
									"name": "LT",
									"source": 5
								},
								{
									"begin": 660,
									"end": 678,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 657,
									"end": 695,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 654,
									"end": 815,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "34"
								},
								{
									"begin": 654,
									"end": 815,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 737,
									"end": 747,
									"name": "PUSH",
									"source": 5,
									"value": "4E487B71"
								},
								{
									"begin": 732,
									"end": 735,
									"name": "PUSH",
									"source": 5,
									"value": "E0"
								},
								{
									"begin": 728,
									"end": 748,
									"name": "SHL",
									"source": 5
								},
								{
									"begin": 725,
									"end": 726,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 718,
									"end": 749,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 772,
									"end": 776,
									"name": "PUSH",
									"source": 5,
									"value": "22"
								},
								{
									"begin": 769,
									"end": 770,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 762,
									"end": 777,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 800,
									"end": 804,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 797,
									"end": 798,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 790,
									"end": 805,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 654,
									"end": 815,
									"name": "tag",
									"source": 5,
									"value": "34"
								},
								{
									"begin": 654,
									"end": 815,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 654,
									"end": 815,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 441,
									"end": 821,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 441,
									"end": 821,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 441,
									"end": 821,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 441,
									"end": 821,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 952,
									"end": 1495,
									"name": "tag",
									"source": 5,
									"value": "22"
								},
								{
									"begin": 952,
									"end": 1495,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1054,
									"end": 1056,
									"name": "PUSH",
									"source": 5,
									"value": "1F"
								},
								{
									"begin": 1049,
									"end": 1052,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1046,
									"end": 1057,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 1043,
									"end": 1489,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 1043,
									"end": 1489,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "37"
								},
								{
									"begin": 1043,
									"end": 1489,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1090,
									"end": 1091,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1114,
									"end": 1119,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1111,
									"end": 1112,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1104,
									"end": 1120,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1158,
									"end": 1162,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 1155,
									"end": 1156,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1145,
									"end": 1163,
									"name": "KECCAK256",
									"source": 5
								},
								{
									"begin": 1228,
									"end": 1230,
									"name": "PUSH",
									"source": 5,
									"value": "1F"
								},
								{
									"begin": 1216,
									"end": 1226,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 1212,
									"end": 1231,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1209,
									"end": 1210,
									"name": "PUSH",
									"source": 5,
									"value": "5"
								},
								{
									"begin": 1205,
									"end": 1232,
									"name": "SHR",
									"source": 5
								},
								{
									"begin": 1199,
									"end": 1203,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1195,
									"end": 1233,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1264,
									"end": 1268,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 1252,
									"end": 1262,
									"name": "DUP7",
									"source": 5
								},
								{
									"begin": 1249,
									"end": 1269,
									"name": "LT",
									"source": 5
								},
								{
									"begin": 1246,
									"end": 1293,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 1246,
									"end": 1293,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "38"
								},
								{
									"begin": 1246,
									"end": 1293,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1287,
									"end": 1291,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1246,
									"end": 1293,
									"name": "tag",
									"source": 5,
									"value": "38"
								},
								{
									"begin": 1246,
									"end": 1293,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1342,
									"end": 1344,
									"name": "PUSH",
									"source": 5,
									"value": "1F"
								},
								{
									"begin": 1337,
									"end": 1340,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 1333,
									"end": 1345,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1330,
									"end": 1331,
									"name": "PUSH",
									"source": 5,
									"value": "5"
								},
								{
									"begin": 1326,
									"end": 1346,
									"name": "SHR",
									"source": 5
								},
								{
									"begin": 1320,
									"end": 1324,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1316,
									"end": 1347,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1306,
									"end": 1347,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1306,
									"end": 1347,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1397,
									"end": 1479,
									"name": "tag",
									"source": 5,
									"value": "39"
								},
								{
									"begin": 1397,
									"end": 1479,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1415,
									"end": 1417,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1408,
									"end": 1413,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1405,
									"end": 1418,
									"name": "LT",
									"source": 5
								},
								{
									"begin": 1397,
									"end": 1479,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 1397,
									"end": 1479,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "41"
								},
								{
									"begin": 1397,
									"end": 1479,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1460,
									"end": 1477,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1460,
									"end": 1477,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1460,
									"end": 1477,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 1441,
									"end": 1442,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 1430,
									"end": 1443,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1397,
									"end": 1479,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "39"
								},
								{
									"begin": 1397,
									"end": 1479,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1397,
									"end": 1479,
									"name": "tag",
									"source": 5,
									"value": "41"
								},
								{
									"begin": 1397,
									"end": 1479,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1401,
									"end": 1404,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1401,
									"end": 1404,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1401,
									"end": 1404,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1043,
									"end": 1489,
									"name": "tag",
									"source": 5,
									"value": "37"
								},
								{
									"begin": 1043,
									"end": 1489,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 952,
									"end": 1495,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 952,
									"end": 1495,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 952,
									"end": 1495,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 952,
									"end": 1495,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1671,
									"end": 3016,
									"name": "tag",
									"source": 5,
									"value": "11"
								},
								{
									"begin": 1671,
									"end": 3016,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1791,
									"end": 1801,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1791,
									"end": 1801,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1813,
									"end": 1843,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1813,
									"end": 1843,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 1810,
									"end": 1866,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 1810,
									"end": 1866,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "45"
								},
								{
									"begin": 1810,
									"end": 1866,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1846,
									"end": 1864,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "45"
								},
								{
									"begin": 1846,
									"end": 1864,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "19"
								},
								{
									"begin": 1846,
									"end": 1864,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1846,
									"end": 1864,
									"name": "tag",
									"source": 5,
									"value": "45"
								},
								{
									"begin": 1846,
									"end": 1864,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1875,
									"end": 1972,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "46"
								},
								{
									"begin": 1965,
									"end": 1971,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1925,
									"end": 1963,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "47"
								},
								{
									"begin": 1957,
									"end": 1961,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 1951,
									"end": 1962,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": 1925,
									"end": 1963,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 1925,
									"end": 1963,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1925,
									"end": 1963,
									"name": "tag",
									"source": 5,
									"value": "47"
								},
								{
									"begin": 1925,
									"end": 1963,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1919,
									"end": 1923,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 1875,
									"end": 1972,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "22"
								},
								{
									"begin": 1875,
									"end": 1972,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1875,
									"end": 1972,
									"name": "tag",
									"source": 5,
									"value": "46"
								},
								{
									"begin": 1875,
									"end": 1972,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2027,
									"end": 2031,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 2027,
									"end": 2031,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 2084,
									"end": 2086,
									"name": "PUSH",
									"source": 5,
									"value": "1F"
								},
								{
									"begin": 2073,
									"end": 2087,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 2073,
									"end": 2087,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 2101,
									"end": 2102,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 2096,
									"end": 2759,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2096,
									"end": 2759,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 2096,
									"end": 2759,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "49"
								},
								{
									"begin": 2096,
									"end": 2759,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 2803,
									"end": 2804,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 2820,
									"end": 2826,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 2817,
									"end": 2906,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 2817,
									"end": 2906,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "50"
								},
								{
									"begin": 2817,
									"end": 2906,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2872,
									"end": 2891,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 2872,
									"end": 2891,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 2872,
									"end": 2891,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 2866,
									"end": 2892,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 2817,
									"end": 2906,
									"name": "tag",
									"source": 5,
									"value": "50"
								},
								{
									"begin": 2817,
									"end": 2906,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1628,
									"end": 1629,
									"name": "PUSH",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 1624,
									"end": 1635,
									"name": "DUP7",
									"source": 5
								},
								{
									"begin": 1624,
									"end": 1635,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1624,
									"end": 1635,
									"name": "SHL",
									"source": 5
								},
								{
									"begin": 1620,
									"end": 1644,
									"name": "SHR",
									"source": 5
								},
								{
									"begin": 1616,
									"end": 1645,
									"name": "NOT",
									"source": 5
								},
								{
									"begin": 1606,
									"end": 1646,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 1652,
									"end": 1653,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 1648,
									"end": 1659,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 1648,
									"end": 1659,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1648,
									"end": 1659,
									"name": "SHL",
									"source": 5
								},
								{
									"begin": 1603,
									"end": 1660,
									"name": "OR",
									"source": 5
								},
								{
									"begin": 2919,
									"end": 3000,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 2919,
									"end": 3000,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 2066,
									"end": 3010,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "41"
								},
								{
									"begin": 2066,
									"end": 3010,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 2096,
									"end": 2759,
									"name": "tag",
									"source": 5,
									"value": "49"
								},
								{
									"begin": 2096,
									"end": 2759,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 899,
									"end": 900,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 892,
									"end": 906,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 892,
									"end": 906,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 892,
									"end": 906,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 936,
									"end": 940,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 923,
									"end": 941,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 923,
									"end": 941,
									"name": "KECCAK256",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2132,
									"end": 2152,
									"name": "DUP7",
									"source": 5
								},
								{
									"begin": 2132,
									"end": 2152,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 2132,
									"end": 2152,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 2250,
									"end": 2486,
									"name": "tag",
									"source": 5,
									"value": "53"
								},
								{
									"begin": 2250,
									"end": 2486,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2264,
									"end": 2271,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 2261,
									"end": 2262,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2258,
									"end": 2272,
									"name": "LT",
									"source": 5
								},
								{
									"begin": 2250,
									"end": 2486,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 2250,
									"end": 2486,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "55"
								},
								{
									"begin": 2250,
									"end": 2486,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 2353,
									"end": 2372,
									"name": "DUP9",
									"source": 5
								},
								{
									"begin": 2353,
									"end": 2372,
									"name": "DUP7",
									"source": 5
								},
								{
									"begin": 2353,
									"end": 2372,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 2347,
									"end": 2373,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 2332,
									"end": 2374,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 2332,
									"end": 2374,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 2445,
									"end": 2472,
									"name": "SWAP5",
									"source": 5
								},
								{
									"begin": 2445,
									"end": 2472,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 2445,
									"end": 2472,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 2445,
									"end": 2472,
									"name": "SWAP5",
									"source": 5
								},
								{
									"begin": 2413,
									"end": 2414,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 2401,
									"end": 2415,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 2401,
									"end": 2415,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 2401,
									"end": 2415,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 2401,
									"end": 2415,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 2280,
									"end": 2299,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 2280,
									"end": 2299,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 2250,
									"end": 2486,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "53"
								},
								{
									"begin": 2250,
									"end": 2486,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 2250,
									"end": 2486,
									"name": "tag",
									"source": 5,
									"value": "55"
								},
								{
									"begin": 2250,
									"end": 2486,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2254,
									"end": 2257,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2514,
									"end": 2520,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 2505,
									"end": 2512,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 2502,
									"end": 2521,
									"name": "LT",
									"source": 5
								},
								{
									"begin": 2499,
									"end": 2700,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 2499,
									"end": 2700,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "56"
								},
								{
									"begin": 2499,
									"end": 2700,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 2575,
									"end": 2594,
									"name": "DUP8",
									"source": 5
								},
								{
									"begin": 2575,
									"end": 2594,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 2575,
									"end": 2594,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 2569,
									"end": 2595,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2658,
									"end": 2659,
									"name": "PUSH",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 2654,
									"end": 2668,
									"name": "DUP9",
									"source": 5
								},
								{
									"begin": 2654,
									"end": 2668,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 2654,
									"end": 2668,
									"name": "SHL",
									"source": 5
								},
								{
									"begin": 2670,
									"end": 2673,
									"name": "PUSH",
									"source": 5,
									"value": "F8"
								},
								{
									"begin": 2650,
									"end": 2674,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 2646,
									"end": 2683,
									"name": "SHR",
									"source": 5
								},
								{
									"begin": 2642,
									"end": 2684,
									"name": "NOT",
									"source": 5
								},
								{
									"begin": 2627,
									"end": 2685,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 2612,
									"end": 2686,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2612,
									"end": 2686,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 2499,
									"end": 2700,
									"name": "tag",
									"source": 5,
									"value": "56"
								},
								{
									"begin": 2499,
									"end": 2700,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2746,
									"end": 2747,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 2730,
									"end": 2744,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 2730,
									"end": 2744,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2730,
									"end": 2744,
									"name": "SHL",
									"source": 5
								},
								{
									"begin": 2726,
									"end": 2748,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 2713,
									"end": 2749,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 2713,
									"end": 2749,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1671,
									"end": 3016,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 3021,
									"end": 3148,
									"name": "tag",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 3021,
									"end": 3148,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 3082,
									"end": 3092,
									"name": "PUSH",
									"source": 5,
									"value": "4E487B71"
								},
								{
									"begin": 3077,
									"end": 3080,
									"name": "PUSH",
									"source": 5,
									"value": "E0"
								},
								{
									"begin": 3073,
									"end": 3093,
									"name": "SHL",
									"source": 5
								},
								{
									"begin": 3070,
									"end": 3071,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 3063,
									"end": 3094,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 3113,
									"end": 3117,
									"name": "PUSH",
									"source": 5,
									"value": "11"
								},
								{
									"begin": 3110,
									"end": 3111,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 3103,
									"end": 3118,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 3137,
									"end": 3141,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 3134,
									"end": 3135,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 3127,
									"end": 3142,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 3153,
									"end": 3569,
									"name": "tag",
									"source": 5,
									"value": "25"
								},
								{
									"begin": 3153,
									"end": 3569,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 3242,
									"end": 3243,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 3279,
									"end": 3284,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 3242,
									"end": 3243,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 3293,
									"end": 3563,
									"name": "tag",
									"source": 5,
									"value": "59"
								},
								{
									"begin": 3293,
									"end": 3563,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 3314,
									"end": 3321,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 3304,
									"end": 3312,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 3301,
									"end": 3322,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 3293,
									"end": 3563,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 3293,
									"end": 3563,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "61"
								},
								{
									"begin": 3293,
									"end": 3563,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 3373,
									"end": 3377,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 3369,
									"end": 3370,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 3365,
									"end": 3371,
									"name": "NOT",
									"source": 5
								},
								{
									"begin": 3361,
									"end": 3378,
									"name": "DIV",
									"source": 5
								},
								{
									"begin": 3355,
									"end": 3359,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 3352,
									"end": 3379,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 3349,
									"end": 3402,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 3349,
									"end": 3402,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "63"
								},
								{
									"begin": 3349,
									"end": 3402,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 3382,
									"end": 3400,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "63"
								},
								{
									"begin": 3382,
									"end": 3400,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 3382,
									"end": 3400,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 3382,
									"end": 3400,
									"name": "tag",
									"source": 5,
									"value": "63"
								},
								{
									"begin": 3382,
									"end": 3400,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 3432,
									"end": 3439,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 3422,
									"end": 3430,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 3418,
									"end": 3440,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 3415,
									"end": 3470,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 3415,
									"end": 3470,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "64"
								},
								{
									"begin": 3415,
									"end": 3470,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 3452,
									"end": 3468,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 3452,
									"end": 3468,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 3452,
									"end": 3468,
									"name": "MUL",
									"source": 5
								},
								{
									"begin": 3452,
									"end": 3468,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 3415,
									"end": 3470,
									"name": "tag",
									"source": 5,
									"value": "64"
								},
								{
									"begin": 3415,
									"end": 3470,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 3531,
									"end": 3553,
									"name": "SWAP4",
									"source": 5
								},
								{
									"begin": 3531,
									"end": 3553,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 3531,
									"end": 3553,
									"name": "SHR",
									"source": 5
								},
								{
									"begin": 3531,
									"end": 3553,
									"name": "SWAP4",
									"source": 5
								},
								{
									"begin": 3491,
									"end": 3506,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 3491,
									"end": 3506,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 3491,
									"end": 3506,
									"name": "MUL",
									"source": 5
								},
								{
									"begin": 3491,
									"end": 3506,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 3293,
									"end": 3563,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "59"
								},
								{
									"begin": 3293,
									"end": 3563,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 3293,
									"end": 3563,
									"name": "tag",
									"source": 5,
									"value": "61"
								},
								{
									"begin": 3293,
									"end": 3563,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 3297,
									"end": 3300,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 3153,
									"end": 3569,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 3153,
									"end": 3569,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 3153,
									"end": 3569,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 3153,
									"end": 3569,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 3153,
									"end": 3569,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 3153,
									"end": 3569,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 3574,
									"end": 4380,
									"name": "tag",
									"source": 5,
									"value": "26"
								},
								{
									"begin": 3574,
									"end": 4380,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 3623,
									"end": 3628,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 3653,
									"end": 3661,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 3643,
									"end": 3723,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "66"
								},
								{
									"begin": 3643,
									"end": 3723,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3694,
									"end": 3695,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 3708,
									"end": 3713,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "65"
								},
								{
									"begin": 3708,
									"end": 3713,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 3643,
									"end": 3723,
									"name": "tag",
									"source": 5,
									"value": "66"
								},
								{
									"begin": 3643,
									"end": 3723,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 3742,
									"end": 3746,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 3732,
									"end": 3808,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "67"
								},
								{
									"begin": 3732,
									"end": 3808,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3779,
									"end": 3780,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 3793,
									"end": 3798,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "65"
								},
								{
									"begin": 3793,
									"end": 3798,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 3732,
									"end": 3808,
									"name": "tag",
									"source": 5,
									"value": "67"
								},
								{
									"begin": 3732,
									"end": 3808,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 3824,
									"end": 3828,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 3842,
									"end": 3843,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 3837,
									"end": 3896,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 3837,
									"end": 3896,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 3837,
									"end": 3896,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "69"
								},
								{
									"begin": 3837,
									"end": 3896,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 3910,
									"end": 3911,
									"name": "PUSH",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 3905,
									"end": 4035,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 3905,
									"end": 4035,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 3905,
									"end": 4035,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "70"
								},
								{
									"begin": 3905,
									"end": 4035,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 3817,
									"end": 4035,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "68"
								},
								{
									"begin": 3817,
									"end": 4035,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 3837,
									"end": 3896,
									"name": "tag",
									"source": 5,
									"value": "69"
								},
								{
									"begin": 3837,
									"end": 3896,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 3867,
									"end": 3868,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 3858,
									"end": 3868,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 3858,
									"end": 3868,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 3881,
									"end": 3886,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 3881,
									"end": 3886,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "65"
								},
								{
									"begin": 3881,
									"end": 3886,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 3905,
									"end": 4035,
									"name": "tag",
									"source": 5,
									"value": "70"
								},
								{
									"begin": 3905,
									"end": 4035,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 3942,
									"end": 3945,
									"name": "PUSH",
									"source": 5,
									"value": "FF"
								},
								{
									"begin": 3932,
									"end": 3940,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 3929,
									"end": 3946,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 3926,
									"end": 3969,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 3926,
									"end": 3969,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "72"
								},
								{
									"begin": 3926,
									"end": 3969,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 3949,
									"end": 3967,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "72"
								},
								{
									"begin": 3949,
									"end": 3967,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 3949,
									"end": 3967,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 3949,
									"end": 3967,
									"name": "tag",
									"source": 5,
									"value": "72"
								},
								{
									"begin": 3949,
									"end": 3967,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 4005,
									"end": 4006,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 3991,
									"end": 4007,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 3991,
									"end": 4007,
									"name": "SHL",
									"source": 5
								},
								{
									"begin": 4020,
									"end": 4025,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "65"
								},
								{
									"begin": 4020,
									"end": 4025,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 3817,
									"end": 4035,
									"name": "tag",
									"source": 5,
									"value": "68"
								},
								{
									"begin": 3817,
									"end": 4035,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 3817,
									"end": 4035,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 4119,
									"end": 4121,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 4109,
									"end": 4117,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 4106,
									"end": 4122,
									"name": "LT",
									"source": 5
								},
								{
									"begin": 4100,
									"end": 4103,
									"name": "PUSH",
									"source": 5,
									"value": "133"
								},
								{
									"begin": 4094,
									"end": 4098,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 4091,
									"end": 4104,
									"name": "LT",
									"source": 5
								},
								{
									"begin": 4087,
									"end": 4123,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 4081,
									"end": 4083,
									"name": "PUSH",
									"source": 5,
									"value": "4E"
								},
								{
									"begin": 4071,
									"end": 4079,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 4068,
									"end": 4084,
									"name": "LT",
									"source": 5
								},
								{
									"begin": 4063,
									"end": 4065,
									"name": "PUSH",
									"source": 5,
									"value": "B"
								},
								{
									"begin": 4057,
									"end": 4061,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 4054,
									"end": 4066,
									"name": "LT",
									"source": 5
								},
								{
									"begin": 4050,
									"end": 4085,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 4047,
									"end": 4124,
									"name": "OR",
									"source": 5
								},
								{
									"begin": 4044,
									"end": 4203,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 4044,
									"end": 4203,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 4044,
									"end": 4203,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 4156,
									"end": 4175,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 4156,
									"end": 4175,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 4156,
									"end": 4175,
									"name": "EXP",
									"source": 5
								},
								{
									"begin": 4188,
									"end": 4193,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "65"
								},
								{
									"begin": 4188,
									"end": 4193,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 4044,
									"end": 4203,
									"name": "tag",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 4044,
									"end": 4203,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 4235,
									"end": 4269,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "74"
								},
								{
									"begin": 4260,
									"end": 4268,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 4254,
									"end": 4258,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 4235,
									"end": 4269,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "25"
								},
								{
									"begin": 4235,
									"end": 4269,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 4235,
									"end": 4269,
									"name": "tag",
									"source": 5,
									"value": "74"
								},
								{
									"begin": 4235,
									"end": 4269,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 4305,
									"end": 4311,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 4301,
									"end": 4302,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 4297,
									"end": 4303,
									"name": "NOT",
									"source": 5
								},
								{
									"begin": 4293,
									"end": 4312,
									"name": "DIV",
									"source": 5
								},
								{
									"begin": 4284,
									"end": 4291,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 4281,
									"end": 4313,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 4278,
									"end": 4336,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 4278,
									"end": 4336,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "76"
								},
								{
									"begin": 4278,
									"end": 4336,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 4316,
									"end": 4334,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "76"
								},
								{
									"begin": 4316,
									"end": 4334,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 4316,
									"end": 4334,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 4316,
									"end": 4334,
									"name": "tag",
									"source": 5,
									"value": "76"
								},
								{
									"begin": 4316,
									"end": 4334,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 4354,
									"end": 4374,
									"name": "MUL",
									"source": 5
								},
								{
									"begin": 4354,
									"end": 4374,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3574,
									"end": 4380,
									"name": "tag",
									"source": 5,
									"value": "65"
								},
								{
									"begin": 3574,
									"end": 4380,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 3574,
									"end": 4380,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 3574,
									"end": 4380,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 3574,
									"end": 4380,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 3574,
									"end": 4380,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 3574,
									"end": 4380,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 4385,
									"end": 4525,
									"name": "tag",
									"source": 5,
									"value": "14"
								},
								{
									"begin": 4385,
									"end": 4525,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 4443,
									"end": 4448,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 4472,
									"end": 4519,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "30"
								},
								{
									"begin": 4513,
									"end": 4517,
									"name": "PUSH",
									"source": 5,
									"value": "FF"
								},
								{
									"begin": 4503,
									"end": 4511,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 4499,
									"end": 4518,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 4493,
									"end": 4497,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 4472,
									"end": 4519,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "26"
								},
								{
									"begin": 4472,
									"end": 4519,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 4530,
									"end": 4698,
									"name": "tag",
									"source": 5,
									"value": "16"
								},
								{
									"begin": 4530,
									"end": 4698,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 4603,
									"end": 4612,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 4603,
									"end": 4612,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 4603,
									"end": 4612,
									"name": "MUL",
									"source": 5
								},
								{
									"begin": 4634,
									"end": 4643,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 4634,
									"end": 4643,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 4651,
									"end": 4666,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 4651,
									"end": 4666,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 4651,
									"end": 4666,
									"name": "DIV",
									"source": 5
								},
								{
									"begin": 4645,
									"end": 4667,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 4645,
									"end": 4667,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 4631,
									"end": 4668,
									"name": "OR",
									"source": 5
								},
								{
									"begin": 4621,
									"end": 4692,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "65"
								},
								{
									"begin": 4621,
									"end": 4692,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 4672,
									"end": 4690,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "65"
								},
								{
									"begin": 4672,
									"end": 4690,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 4672,
									"end": 4690,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 4530,
									"end": 4698,
									"name": "tag",
									"source": 5,
									"value": "27"
								},
								{
									"begin": 4530,
									"end": 4698,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 145,
									"end": 3230,
									"name": "PUSH",
									"source": 3,
									"value": "80"
								},
								{
									"begin": 145,
									"end": 3230,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 145,
									"end": 3230,
									"name": "PUSH",
									"source": 3,
									"value": "A0"
								},
								{
									"begin": 145,
									"end": 3230,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 145,
									"end": 3230,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 145,
									"end": 3230,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 145,
									"end": 3230,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 145,
									"end": 3230,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 145,
									"end": 3230,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 145,
									"end": 3230,
									"name": "ASSIGNIMMUTABLE",
									"source": 3,
									"value": "1912"
								},
								{
									"begin": 145,
									"end": 3230,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 145,
									"end": 3230,
									"name": "ASSIGNIMMUTABLE",
									"source": 3,
									"value": "1909"
								},
								{
									"begin": 145,
									"end": 3230,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 145,
									"end": 3230,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 145,
									"end": 3230,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212207f01dbcaf3bd65a9463b6c991d65c78cf5ebad17478d717dd482a4dbfc9f1dff64736f6c63430008180033",
									".code": [
										{
											"begin": 145,
											"end": 3230,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 145,
											"end": 3230,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 145,
											"end": 3230,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 145,
											"end": 3230,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 145,
											"end": 3230,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 145,
											"end": 3230,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 145,
											"end": 3230,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 145,
											"end": 3230,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 145,
											"end": 3230,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 145,
											"end": 3230,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 145,
											"end": 3230,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 145,
											"end": 3230,
											"name": "tag",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 145,
											"end": 3230,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 145,
											"end": 3230,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 145,
											"end": 3230,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 145,
											"end": 3230,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 145,
											"end": 3230,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 145,
											"end": 3230,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 145,
											"end": 3230,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 145,
											"end": 3230,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 145,
											"end": 3230,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 145,
											"end": 3230,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 145,
											"end": 3230,
											"name": "SHR",
											"source": 3
										},
										{
											"begin": 145,
											"end": 3230,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 145,
											"end": 3230,
											"name": "PUSH",
											"source": 3,
											"value": "70A08231"
										},
										{
											"begin": 145,
											"end": 3230,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 145,
											"end": 3230,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 145,
											"end": 3230,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 145,
											"end": 3230,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 145,
											"end": 3230,
											"name": "PUSH",
											"source": 3,
											"value": "C87B56DD"
										},
										{
											"begin": 145,
											"end": 3230,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 145,
											"end": 3230,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 145,
											"end": 3230,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 145,
											"end": 3230,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 145,
											"end": 3230,
											"name": "PUSH",
											"source": 3,
											"value": "E0DF5B6F"
										},
										{
											"begin": 145,
											"end": 3230,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 145,
											"end": 3230,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 145,
											"end": 3230,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 145,
											"end": 3230,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 145,
											"end": 3230,
											"name": "PUSH",
											"source": 3,
											"value": "E0DF5B6F"
										},
										{
											"begin": 145,
											"end": 3230,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 145,
											"end": 3230,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 145,
											"end": 3230,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 145,
											"end": 3230,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 145,
											"end": 3230,
											"name": "PUSH",
											"source": 3,
											"value": "E985E9C5"
										},
										{
											"begin": 145,
											"end": 3230,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 145,
											"end": 3230,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 145,
											"end": 3230,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 145,
											"end": 3230,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 145,
											"end": 3230,
											"name": "PUSH",
											"source": 3,
											"value": "F28CA1DD"
										},
										{
											"begin": 145,
											"end": 3230,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 145,
											"end": 3230,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 145,
											"end": 3230,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 145,
											"end": 3230,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 145,
											"end": 3230,
											"name": "PUSH",
											"source": 3,
											"value": "F2FDE38B"
										},
										{
											"begin": 145,
											"end": 3230,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 145,
											"end": 3230,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 145,
											"end": 3230,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 145,
											"end": 3230,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 145,
											"end": 3230,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 145,
											"end": 3230,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 145,
											"end": 3230,
											"name": "tag",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 145,
											"end": 3230,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 145,
											"end": 3230,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 145,
											"end": 3230,
											"name": "PUSH",
											"source": 3,
											"value": "C87B56DD"
										},
										{
											"begin": 145,
											"end": 3230,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 145,
											"end": 3230,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 145,
											"end": 3230,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 145,
											"end": 3230,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 145,
											"end": 3230,
											"name": "PUSH",
											"source": 3,
											"value": "D547CFB7"
										},
										{
											"begin": 145,
											"end": 3230,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 145,
											"end": 3230,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 145,
											"end": 3230,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 145,
											"end": 3230,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 145,
											"end": 3230,
											"name": "PUSH",
											"source": 3,
											"value": "DD62ED3E"
										},
										{
											"begin": 145,
											"end": 3230,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 145,
											"end": 3230,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 145,
											"end": 3230,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 145,
											"end": 3230,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 145,
											"end": 3230,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 145,
											"end": 3230,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 145,
											"end": 3230,
											"name": "tag",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 145,
											"end": 3230,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 145,
											"end": 3230,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 145,
											"end": 3230,
											"name": "PUSH",
											"source": 3,
											"value": "9B19251A"
										},
										{
											"begin": 145,
											"end": 3230,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 145,
											"end": 3230,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 145,
											"end": 3230,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 145,
											"end": 3230,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 145,
											"end": 3230,
											"name": "PUSH",
											"source": 3,
											"value": "9B19251A"
										},
										{
											"begin": 145,
											"end": 3230,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 145,
											"end": 3230,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 145,
											"end": 3230,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 145,
											"end": 3230,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 145,
											"end": 3230,
											"name": "PUSH",
											"source": 3,
											"value": "A22CB465"
										},
										{
											"begin": 145,
											"end": 3230,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 145,
											"end": 3230,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 145,
											"end": 3230,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 145,
											"end": 3230,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 145,
											"end": 3230,
											"name": "PUSH",
											"source": 3,
											"value": "A9059CBB"
										},
										{
											"begin": 145,
											"end": 3230,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 145,
											"end": 3230,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 145,
											"end": 3230,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 145,
											"end": 3230,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 145,
											"end": 3230,
											"name": "PUSH",
											"source": 3,
											"value": "B88D4FDE"
										},
										{
											"begin": 145,
											"end": 3230,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 145,
											"end": 3230,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 145,
											"end": 3230,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 145,
											"end": 3230,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 145,
											"end": 3230,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 145,
											"end": 3230,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 145,
											"end": 3230,
											"name": "tag",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 145,
											"end": 3230,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 145,
											"end": 3230,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 145,
											"end": 3230,
											"name": "PUSH",
											"source": 3,
											"value": "70A08231"
										},
										{
											"begin": 145,
											"end": 3230,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 145,
											"end": 3230,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 145,
											"end": 3230,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 145,
											"end": 3230,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 145,
											"end": 3230,
											"name": "PUSH",
											"source": 3,
											"value": "8DA5CB5B"
										},
										{
											"begin": 145,
											"end": 3230,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 145,
											"end": 3230,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 145,
											"end": 3230,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 145,
											"end": 3230,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 145,
											"end": 3230,
											"name": "PUSH",
											"source": 3,
											"value": "95D89B41"
										},
										{
											"begin": 145,
											"end": 3230,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 145,
											"end": 3230,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 145,
											"end": 3230,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 145,
											"end": 3230,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 145,
											"end": 3230,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 145,
											"end": 3230,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 145,
											"end": 3230,
											"name": "tag",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 145,
											"end": 3230,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 145,
											"end": 3230,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 145,
											"end": 3230,
											"name": "PUSH",
											"source": 3,
											"value": "2B968958"
										},
										{
											"begin": 145,
											"end": 3230,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 145,
											"end": 3230,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 145,
											"end": 3230,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 145,
											"end": 3230,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 145,
											"end": 3230,
											"name": "PUSH",
											"source": 3,
											"value": "4F02C420"
										},
										{
											"begin": 145,
											"end": 3230,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 145,
											"end": 3230,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 145,
											"end": 3230,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 145,
											"end": 3230,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 145,
											"end": 3230,
											"name": "PUSH",
											"source": 3,
											"value": "4F02C420"
										},
										{
											"begin": 145,
											"end": 3230,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 145,
											"end": 3230,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 145,
											"end": 3230,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 145,
											"end": 3230,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 145,
											"end": 3230,
											"name": "PUSH",
											"source": 3,
											"value": "504334C2"
										},
										{
											"begin": 145,
											"end": 3230,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 145,
											"end": 3230,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 145,
											"end": 3230,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 145,
											"end": 3230,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 145,
											"end": 3230,
											"name": "PUSH",
											"source": 3,
											"value": "53D6FD59"
										},
										{
											"begin": 145,
											"end": 3230,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 145,
											"end": 3230,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 145,
											"end": 3230,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 145,
											"end": 3230,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 145,
											"end": 3230,
											"name": "PUSH",
											"source": 3,
											"value": "6352211E"
										},
										{
											"begin": 145,
											"end": 3230,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 145,
											"end": 3230,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 145,
											"end": 3230,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 145,
											"end": 3230,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 145,
											"end": 3230,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 145,
											"end": 3230,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 145,
											"end": 3230,
											"name": "tag",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 145,
											"end": 3230,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 145,
											"end": 3230,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 145,
											"end": 3230,
											"name": "PUSH",
											"source": 3,
											"value": "2B968958"
										},
										{
											"begin": 145,
											"end": 3230,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 145,
											"end": 3230,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 145,
											"end": 3230,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 145,
											"end": 3230,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 145,
											"end": 3230,
											"name": "PUSH",
											"source": 3,
											"value": "313CE567"
										},
										{
											"begin": 145,
											"end": 3230,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 145,
											"end": 3230,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 145,
											"end": 3230,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 145,
											"end": 3230,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 145,
											"end": 3230,
											"name": "PUSH",
											"source": 3,
											"value": "42842E0E"
										},
										{
											"begin": 145,
											"end": 3230,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 145,
											"end": 3230,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 145,
											"end": 3230,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 145,
											"end": 3230,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 145,
											"end": 3230,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 145,
											"end": 3230,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 145,
											"end": 3230,
											"name": "tag",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 145,
											"end": 3230,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 145,
											"end": 3230,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 145,
											"end": 3230,
											"name": "PUSH",
											"source": 3,
											"value": "6FDDE03"
										},
										{
											"begin": 145,
											"end": 3230,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 145,
											"end": 3230,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 145,
											"end": 3230,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 145,
											"end": 3230,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 145,
											"end": 3230,
											"name": "PUSH",
											"source": 3,
											"value": "81812FC"
										},
										{
											"begin": 145,
											"end": 3230,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 145,
											"end": 3230,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 145,
											"end": 3230,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 145,
											"end": 3230,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 145,
											"end": 3230,
											"name": "PUSH",
											"source": 3,
											"value": "95EA7B3"
										},
										{
											"begin": 145,
											"end": 3230,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 145,
											"end": 3230,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 145,
											"end": 3230,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 145,
											"end": 3230,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 145,
											"end": 3230,
											"name": "PUSH",
											"source": 3,
											"value": "18160DDD"
										},
										{
											"begin": 145,
											"end": 3230,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 145,
											"end": 3230,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 145,
											"end": 3230,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 145,
											"end": 3230,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 145,
											"end": 3230,
											"name": "PUSH",
											"source": 3,
											"value": "18D217C3"
										},
										{
											"begin": 145,
											"end": 3230,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 145,
											"end": 3230,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 145,
											"end": 3230,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 145,
											"end": 3230,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 145,
											"end": 3230,
											"name": "PUSH",
											"source": 3,
											"value": "23B872DD"
										},
										{
											"begin": 145,
											"end": 3230,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 145,
											"end": 3230,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 145,
											"end": 3230,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 145,
											"end": 3230,
											"name": "tag",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 145,
											"end": 3230,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 145,
											"end": 3230,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 145,
											"end": 3230,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 145,
											"end": 3230,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2800,
											"end": 2818,
											"name": "tag",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 2800,
											"end": 2818,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2800,
											"end": 2818,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 2800,
											"end": 2818,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 2800,
											"end": 2818,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2800,
											"end": 2818,
											"name": "tag",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 2800,
											"end": 2818,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2800,
											"end": 2818,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2800,
											"end": 2818,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2800,
											"end": 2818,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 2800,
											"end": 2818,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2800,
											"end": 2818,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2800,
											"end": 2818,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 2800,
											"end": 2818,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2800,
											"end": 2818,
											"name": "tag",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 2800,
											"end": 2818,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2800,
											"end": 2818,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2800,
											"end": 2818,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2800,
											"end": 2818,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2800,
											"end": 2818,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2800,
											"end": 2818,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2800,
											"end": 2818,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2800,
											"end": 2818,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 3511,
											"end": 3557,
											"name": "tag",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3511,
											"end": 3557,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3511,
											"end": 3557,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3511,
											"end": 3557,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 3511,
											"end": 3557,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 3511,
											"end": 3557,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3511,
											"end": 3557,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 3511,
											"end": 3557,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3511,
											"end": 3557,
											"name": "tag",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 3511,
											"end": 3557,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3511,
											"end": 3557,
											"name": "PUSH",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 3511,
											"end": 3557,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3511,
											"end": 3557,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3511,
											"end": 3557,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3511,
											"end": 3557,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3511,
											"end": 3557,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3511,
											"end": 3557,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3511,
											"end": 3557,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3511,
											"end": 3557,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3511,
											"end": 3557,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 3511,
											"end": 3557,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3511,
											"end": 3557,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3511,
											"end": 3557,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3511,
											"end": 3557,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3511,
											"end": 3557,
											"name": "tag",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3511,
											"end": 3557,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3511,
											"end": 3557,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3511,
											"end": 3557,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1019,
											"end": 1051,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1019,
											"end": 1051,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1019,
											"end": 1051,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1001,
											"end": 1052,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1001,
											"end": 1052,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 989,
											"end": 991,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 974,
											"end": 992,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3511,
											"end": 3557,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 855,
											"end": 1058,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5342,
											"end": 5984,
											"name": "tag",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 5342,
											"end": 5984,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5342,
											"end": 5984,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 5342,
											"end": 5984,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 5342,
											"end": 5984,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 5342,
											"end": 5984,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5342,
											"end": 5984,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 5342,
											"end": 5984,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5342,
											"end": 5984,
											"name": "tag",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 5342,
											"end": 5984,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5342,
											"end": 5984,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "49"
										},
										{
											"begin": 5342,
											"end": 5984,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5342,
											"end": 5984,
											"name": "tag",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 5342,
											"end": 5984,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5342,
											"end": 5984,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5342,
											"end": 5984,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1665,
											"end": 1679,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1665,
											"end": 1679,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1658,
											"end": 1680,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1640,
											"end": 1681,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1640,
											"end": 1681,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1628,
											"end": 1630,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1613,
											"end": 1631,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5342,
											"end": 5984,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 1500,
											"end": 1687,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3036,
											"end": 3072,
											"name": "tag",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 3036,
											"end": 3072,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3036,
											"end": 3072,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 3036,
											"end": 3072,
											"name": "PUSHIMMUTABLE",
											"source": 4,
											"value": "1912"
										},
										{
											"begin": 3036,
											"end": 3072,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3036,
											"end": 3072,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3036,
											"end": 3072,
											"name": "tag",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 3036,
											"end": 3072,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3036,
											"end": 3072,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3036,
											"end": 3072,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1838,
											"end": 1863,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1838,
											"end": 1863,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1838,
											"end": 1863,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1826,
											"end": 1828,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1811,
											"end": 1829,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3036,
											"end": 3072,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 1692,
											"end": 1869,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 409,
											"end": 507,
											"name": "tag",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 409,
											"end": 507,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 409,
											"end": 507,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 409,
											"end": 507,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 409,
											"end": 507,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 409,
											"end": 507,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 409,
											"end": 507,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "58"
										},
										{
											"begin": 409,
											"end": 507,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 409,
											"end": 507,
											"name": "tag",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 409,
											"end": 507,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 409,
											"end": 507,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 409,
											"end": 507,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 409,
											"end": 507,
											"name": "tag",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 409,
											"end": 507,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 409,
											"end": 507,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 6391,
											"end": 8107,
											"name": "tag",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 6391,
											"end": 8107,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6391,
											"end": 8107,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 6391,
											"end": 8107,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 6391,
											"end": 8107,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 6391,
											"end": 8107,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 6391,
											"end": 8107,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "62"
										},
										{
											"begin": 6391,
											"end": 8107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6391,
											"end": 8107,
											"name": "tag",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 6391,
											"end": 8107,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6391,
											"end": 8107,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "63"
										},
										{
											"begin": 6391,
											"end": 8107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 797,
											"end": 948,
											"name": "tag",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 797,
											"end": 948,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 797,
											"end": 948,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 797,
											"end": 948,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 797,
											"end": 948,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2936,
											"end": 2967,
											"name": "tag",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 2936,
											"end": 2967,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2936,
											"end": 2967,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 2936,
											"end": 2967,
											"name": "PUSHIMMUTABLE",
											"source": 4,
											"value": "1909"
										},
										{
											"begin": 2936,
											"end": 2967,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2936,
											"end": 2967,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2936,
											"end": 2967,
											"name": "tag",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 2936,
											"end": 2967,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2936,
											"end": 2967,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2936,
											"end": 2967,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3562,
											"end": 3566,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 3550,
											"end": 3567,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3550,
											"end": 3567,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3550,
											"end": 3567,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3532,
											"end": 3568,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3532,
											"end": 3568,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3520,
											"end": 3522,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3505,
											"end": 3523,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2936,
											"end": 2967,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 3390,
											"end": 3574,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8403,
											"end": 8808,
											"name": "tag",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 8403,
											"end": 8808,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8403,
											"end": 8808,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 8403,
											"end": 8808,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 8403,
											"end": 8808,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 8403,
											"end": 8808,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 8403,
											"end": 8808,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "62"
										},
										{
											"begin": 8403,
											"end": 8808,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8403,
											"end": 8808,
											"name": "tag",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 8403,
											"end": 8808,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8403,
											"end": 8808,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "72"
										},
										{
											"begin": 8403,
											"end": 8808,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3171,
											"end": 3192,
											"name": "tag",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 3171,
											"end": 3192,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3171,
											"end": 3192,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 3171,
											"end": 3192,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 3171,
											"end": 3192,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3171,
											"end": 3192,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3171,
											"end": 3192,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 629,
											"end": 787,
											"name": "tag",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 629,
											"end": 787,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 629,
											"end": 787,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 629,
											"end": 787,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "77"
										},
										{
											"begin": 629,
											"end": 787,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 629,
											"end": 787,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 629,
											"end": 787,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 629,
											"end": 787,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 629,
											"end": 787,
											"name": "tag",
											"source": 3,
											"value": "77"
										},
										{
											"begin": 629,
											"end": 787,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 629,
											"end": 787,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 629,
											"end": 787,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4671,
											"end": 4782,
											"name": "tag",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 4671,
											"end": 4782,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4671,
											"end": 4782,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 4671,
											"end": 4782,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "81"
										},
										{
											"begin": 4671,
											"end": 4782,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 4671,
											"end": 4782,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4671,
											"end": 4782,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 4671,
											"end": 4782,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4671,
											"end": 4782,
											"name": "tag",
											"source": 4,
											"value": "81"
										},
										{
											"begin": 4671,
											"end": 4782,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4671,
											"end": 4782,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "83"
										},
										{
											"begin": 4671,
											"end": 4782,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4854,
											"end": 5047,
											"name": "tag",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 4854,
											"end": 5047,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4854,
											"end": 5047,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4854,
											"end": 5047,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "85"
										},
										{
											"begin": 4854,
											"end": 5047,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 4854,
											"end": 5047,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4854,
											"end": 5047,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 4854,
											"end": 5047,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4854,
											"end": 5047,
											"name": "tag",
											"source": 4,
											"value": "85"
										},
										{
											"begin": 4854,
											"end": 5047,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4854,
											"end": 5047,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "86"
										},
										{
											"begin": 4854,
											"end": 5047,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3277,
											"end": 3321,
											"name": "tag",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 3277,
											"end": 3321,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3277,
											"end": 3321,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 3277,
											"end": 3321,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 3277,
											"end": 3321,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 3277,
											"end": 3321,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3277,
											"end": 3321,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "90"
										},
										{
											"begin": 3277,
											"end": 3321,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3277,
											"end": 3321,
											"name": "tag",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 3277,
											"end": 3321,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3277,
											"end": 3321,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3277,
											"end": 3321,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3277,
											"end": 3321,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3277,
											"end": 3321,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3277,
											"end": 3321,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3277,
											"end": 3321,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3277,
											"end": 3321,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3277,
											"end": 3321,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3277,
											"end": 3321,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3277,
											"end": 3321,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 3277,
											"end": 3321,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3277,
											"end": 3321,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3277,
											"end": 3321,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 238,
											"end": 258,
											"name": "tag",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 238,
											"end": 258,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 238,
											"end": 258,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 238,
											"end": 258,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 238,
											"end": 258,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 238,
											"end": 258,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 238,
											"end": 258,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 238,
											"end": 258,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 238,
											"end": 258,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2854,
											"end": 2874,
											"name": "tag",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 2854,
											"end": 2874,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2854,
											"end": 2874,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 2854,
											"end": 2874,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "97"
										},
										{
											"begin": 2854,
											"end": 2874,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4122,
											"end": 4163,
											"name": "tag",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 4122,
											"end": 4163,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4122,
											"end": 4163,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 4122,
											"end": 4163,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 4122,
											"end": 4163,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 4122,
											"end": 4163,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4122,
											"end": 4163,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "90"
										},
										{
											"begin": 4122,
											"end": 4163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4122,
											"end": 4163,
											"name": "tag",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 4122,
											"end": 4163,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4122,
											"end": 4163,
											"name": "PUSH",
											"source": 4,
											"value": "B"
										},
										{
											"begin": 4122,
											"end": 4163,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4122,
											"end": 4163,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4122,
											"end": 4163,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4122,
											"end": 4163,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4122,
											"end": 4163,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4122,
											"end": 4163,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4122,
											"end": 4163,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4122,
											"end": 4163,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4122,
											"end": 4163,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 4122,
											"end": 4163,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4122,
											"end": 4163,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 4122,
											"end": 4163,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4122,
											"end": 4163,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4122,
											"end": 4163,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6035,
											"end": 6242,
											"name": "tag",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6035,
											"end": 6242,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6035,
											"end": 6242,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 6035,
											"end": 6242,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "104"
										},
										{
											"begin": 6035,
											"end": 6242,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 6035,
											"end": 6242,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 6035,
											"end": 6242,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 6035,
											"end": 6242,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6035,
											"end": 6242,
											"name": "tag",
											"source": 4,
											"value": "104"
										},
										{
											"begin": 6035,
											"end": 6242,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6035,
											"end": 6242,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "105"
										},
										{
											"begin": 6035,
											"end": 6242,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8166,
											"end": 8326,
											"name": "tag",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 8166,
											"end": 8326,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8166,
											"end": 8326,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 8166,
											"end": 8326,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "107"
										},
										{
											"begin": 8166,
											"end": 8326,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 8166,
											"end": 8326,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 8166,
											"end": 8326,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 8166,
											"end": 8326,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8166,
											"end": 8326,
											"name": "tag",
											"source": 4,
											"value": "107"
										},
										{
											"begin": 8166,
											"end": 8326,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8166,
											"end": 8326,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "108"
										},
										{
											"begin": 8166,
											"end": 8326,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8903,
											"end": 9340,
											"name": "tag",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 8903,
											"end": 9340,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8903,
											"end": 9340,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 8903,
											"end": 9340,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "111"
										},
										{
											"begin": 8903,
											"end": 9340,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 8903,
											"end": 9340,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 8903,
											"end": 9340,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 8903,
											"end": 9340,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8903,
											"end": 9340,
											"name": "tag",
											"source": 4,
											"value": "111"
										},
										{
											"begin": 8903,
											"end": 9340,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8903,
											"end": 9340,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 8903,
											"end": 9340,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 795,
											"end": 3227,
											"name": "tag",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 795,
											"end": 3227,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 795,
											"end": 3227,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 795,
											"end": 3227,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "115"
										},
										{
											"begin": 795,
											"end": 3227,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 795,
											"end": 3227,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 795,
											"end": 3227,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 795,
											"end": 3227,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 795,
											"end": 3227,
											"name": "tag",
											"source": 3,
											"value": "115"
										},
										{
											"begin": 795,
											"end": 3227,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 795,
											"end": 3227,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "116"
										},
										{
											"begin": 795,
											"end": 3227,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 211,
											"end": 237,
											"name": "tag",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 211,
											"end": 237,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 211,
											"end": 237,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 211,
											"end": 237,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "119"
										},
										{
											"begin": 211,
											"end": 237,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3391,
											"end": 3455,
											"name": "tag",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 3391,
											"end": 3455,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3391,
											"end": 3455,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 3391,
											"end": 3455,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "122"
										},
										{
											"begin": 3391,
											"end": 3455,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 3391,
											"end": 3455,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3391,
											"end": 3455,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "123"
										},
										{
											"begin": 3391,
											"end": 3455,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3391,
											"end": 3455,
											"name": "tag",
											"source": 4,
											"value": "122"
										},
										{
											"begin": 3391,
											"end": 3455,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3391,
											"end": 3455,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 3391,
											"end": 3455,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3391,
											"end": 3455,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3391,
											"end": 3455,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3391,
											"end": 3455,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3391,
											"end": 3455,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3391,
											"end": 3455,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3391,
											"end": 3455,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3391,
											"end": 3455,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3391,
											"end": 3455,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3391,
											"end": 3455,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3391,
											"end": 3455,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3391,
											"end": 3455,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 3391,
											"end": 3455,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3391,
											"end": 3455,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3391,
											"end": 3455,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3391,
											"end": 3455,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3391,
											"end": 3455,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3391,
											"end": 3455,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3391,
											"end": 3455,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3391,
											"end": 3455,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 3391,
											"end": 3455,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3391,
											"end": 3455,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3391,
											"end": 3455,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 515,
											"end": 621,
											"name": "tag",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 515,
											"end": 621,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 515,
											"end": 621,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 515,
											"end": 621,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "127"
										},
										{
											"begin": 515,
											"end": 621,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 515,
											"end": 621,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 515,
											"end": 621,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "58"
										},
										{
											"begin": 515,
											"end": 621,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 515,
											"end": 621,
											"name": "tag",
											"source": 3,
											"value": "127"
										},
										{
											"begin": 515,
											"end": 621,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 515,
											"end": 621,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "128"
										},
										{
											"begin": 515,
											"end": 621,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3622,
											"end": 3690,
											"name": "tag",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 3622,
											"end": 3690,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3622,
											"end": 3690,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 3622,
											"end": 3690,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "130"
										},
										{
											"begin": 3622,
											"end": 3690,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 3622,
											"end": 3690,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3622,
											"end": 3690,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "123"
										},
										{
											"begin": 3622,
											"end": 3690,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3622,
											"end": 3690,
											"name": "tag",
											"source": 4,
											"value": "130"
										},
										{
											"begin": 3622,
											"end": 3690,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3622,
											"end": 3690,
											"name": "PUSH",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 3622,
											"end": 3690,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3622,
											"end": 3690,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3622,
											"end": 3690,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3622,
											"end": 3690,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3622,
											"end": 3690,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3622,
											"end": 3690,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3622,
											"end": 3690,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3622,
											"end": 3690,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3622,
											"end": 3690,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3622,
											"end": 3690,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3622,
											"end": 3690,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3622,
											"end": 3690,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 3622,
											"end": 3690,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3622,
											"end": 3690,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3622,
											"end": 3690,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3622,
											"end": 3690,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3622,
											"end": 3690,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3622,
											"end": 3690,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3622,
											"end": 3690,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3622,
											"end": 3690,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 3622,
											"end": 3690,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3622,
											"end": 3690,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 3622,
											"end": 3690,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3622,
											"end": 3690,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3622,
											"end": 3690,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 183,
											"end": 204,
											"name": "tag",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 183,
											"end": 204,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 183,
											"end": 204,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 183,
											"end": 204,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "134"
										},
										{
											"begin": 183,
											"end": 204,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 570,
											"end": 789,
											"name": "tag",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 570,
											"end": 789,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 570,
											"end": 789,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 570,
											"end": 789,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "137"
										},
										{
											"begin": 570,
											"end": 789,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 570,
											"end": 789,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 570,
											"end": 789,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "90"
										},
										{
											"begin": 570,
											"end": 789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 570,
											"end": 789,
											"name": "tag",
											"source": 4,
											"value": "137"
										},
										{
											"begin": 570,
											"end": 789,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 570,
											"end": 789,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "138"
										},
										{
											"begin": 570,
											"end": 789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2800,
											"end": 2818,
											"name": "tag",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 2800,
											"end": 2818,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2800,
											"end": 2818,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2800,
											"end": 2818,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2800,
											"end": 2818,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2800,
											"end": 2818,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "139"
										},
										{
											"begin": 2800,
											"end": 2818,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2800,
											"end": 2818,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "140"
										},
										{
											"begin": 2800,
											"end": 2818,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2800,
											"end": 2818,
											"name": "tag",
											"source": 4,
											"value": "139"
										},
										{
											"begin": 2800,
											"end": 2818,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2800,
											"end": 2818,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2800,
											"end": 2818,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2800,
											"end": 2818,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2800,
											"end": 2818,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2800,
											"end": 2818,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2800,
											"end": 2818,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2800,
											"end": 2818,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2800,
											"end": 2818,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2800,
											"end": 2818,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2800,
											"end": 2818,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2800,
											"end": 2818,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2800,
											"end": 2818,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2800,
											"end": 2818,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2800,
											"end": 2818,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2800,
											"end": 2818,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2800,
											"end": 2818,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2800,
											"end": 2818,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2800,
											"end": 2818,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2800,
											"end": 2818,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2800,
											"end": 2818,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2800,
											"end": 2818,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2800,
											"end": 2818,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2800,
											"end": 2818,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2800,
											"end": 2818,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2800,
											"end": 2818,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2800,
											"end": 2818,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2800,
											"end": 2818,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2800,
											"end": 2818,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2800,
											"end": 2818,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2800,
											"end": 2818,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "141"
										},
										{
											"begin": 2800,
											"end": 2818,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2800,
											"end": 2818,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "140"
										},
										{
											"begin": 2800,
											"end": 2818,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2800,
											"end": 2818,
											"name": "tag",
											"source": 4,
											"value": "141"
										},
										{
											"begin": 2800,
											"end": 2818,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2800,
											"end": 2818,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2800,
											"end": 2818,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2800,
											"end": 2818,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "142"
										},
										{
											"begin": 2800,
											"end": 2818,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2800,
											"end": 2818,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2800,
											"end": 2818,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2800,
											"end": 2818,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 2800,
											"end": 2818,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "143"
										},
										{
											"begin": 2800,
											"end": 2818,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2800,
											"end": 2818,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2800,
											"end": 2818,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2800,
											"end": 2818,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2800,
											"end": 2818,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2800,
											"end": 2818,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2800,
											"end": 2818,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2800,
											"end": 2818,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2800,
											"end": 2818,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2800,
											"end": 2818,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2800,
											"end": 2818,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2800,
											"end": 2818,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2800,
											"end": 2818,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2800,
											"end": 2818,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "142"
										},
										{
											"begin": 2800,
											"end": 2818,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2800,
											"end": 2818,
											"name": "tag",
											"source": 4,
											"value": "143"
										},
										{
											"begin": 2800,
											"end": 2818,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2800,
											"end": 2818,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2800,
											"end": 2818,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2800,
											"end": 2818,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2800,
											"end": 2818,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2800,
											"end": 2818,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2800,
											"end": 2818,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2800,
											"end": 2818,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2800,
											"end": 2818,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2800,
											"end": 2818,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2800,
											"end": 2818,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2800,
											"end": 2818,
											"name": "tag",
											"source": 4,
											"value": "144"
										},
										{
											"begin": 2800,
											"end": 2818,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2800,
											"end": 2818,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2800,
											"end": 2818,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2800,
											"end": 2818,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2800,
											"end": 2818,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2800,
											"end": 2818,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2800,
											"end": 2818,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2800,
											"end": 2818,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2800,
											"end": 2818,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2800,
											"end": 2818,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2800,
											"end": 2818,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2800,
											"end": 2818,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2800,
											"end": 2818,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2800,
											"end": 2818,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 2800,
											"end": 2818,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "144"
										},
										{
											"begin": 2800,
											"end": 2818,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2800,
											"end": 2818,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2800,
											"end": 2818,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2800,
											"end": 2818,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2800,
											"end": 2818,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2800,
											"end": 2818,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2800,
											"end": 2818,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2800,
											"end": 2818,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2800,
											"end": 2818,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2800,
											"end": 2818,
											"name": "tag",
											"source": 4,
											"value": "142"
										},
										{
											"begin": 2800,
											"end": 2818,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2800,
											"end": 2818,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2800,
											"end": 2818,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2800,
											"end": 2818,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2800,
											"end": 2818,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2800,
											"end": 2818,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2800,
											"end": 2818,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2800,
											"end": 2818,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5342,
											"end": 5984,
											"name": "tag",
											"source": 4,
											"value": "49"
										},
										{
											"begin": 5342,
											"end": 5984,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5445,
											"end": 5449,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5480,
											"end": 5486,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 5480,
											"end": 5486,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 5466,
											"end": 5476,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5466,
											"end": 5486,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 5466,
											"end": 5486,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5466,
											"end": 5504,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5466,
											"end": 5504,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5466,
											"end": 5504,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "146"
										},
										{
											"begin": 5466,
											"end": 5504,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5466,
											"end": 5504,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5503,
											"end": 5504,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5490,
											"end": 5500,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5490,
											"end": 5504,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 5466,
											"end": 5504,
											"name": "tag",
											"source": 4,
											"value": "146"
										},
										{
											"begin": 5466,
											"end": 5504,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5462,
											"end": 5953,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5462,
											"end": 5953,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "147"
										},
										{
											"begin": 5462,
											"end": 5953,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5521,
											"end": 5534,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5537,
											"end": 5557,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5537,
											"end": 5557,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5537,
											"end": 5557,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5537,
											"end": 5545,
											"name": "PUSH",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 5537,
											"end": 5557,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5537,
											"end": 5557,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5537,
											"end": 5557,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5537,
											"end": 5557,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5537,
											"end": 5557,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 5537,
											"end": 5557,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5537,
											"end": 5557,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5578,
											"end": 5588,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 5578,
											"end": 5597,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5578,
											"end": 5597,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 5578,
											"end": 5597,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5578,
											"end": 5597,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5578,
											"end": 5597,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5578,
											"end": 5637,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "148"
										},
										{
											"begin": 5578,
											"end": 5637,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5602,
											"end": 5625,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5602,
											"end": 5625,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5602,
											"end": 5625,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5602,
											"end": 5625,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5602,
											"end": 5625,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5602,
											"end": 5625,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5602,
											"end": 5618,
											"name": "PUSH",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 5602,
											"end": 5625,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5602,
											"end": 5625,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5602,
											"end": 5625,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5602,
											"end": 5625,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5602,
											"end": 5625,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5602,
											"end": 5625,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5602,
											"end": 5625,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5602,
											"end": 5625,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 5626,
											"end": 5636,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 5602,
											"end": 5637,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5602,
											"end": 5637,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5602,
											"end": 5637,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5602,
											"end": 5637,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5602,
											"end": 5637,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5602,
											"end": 5637,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5602,
											"end": 5637,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 5602,
											"end": 5637,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 5602,
											"end": 5637,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 5602,
											"end": 5637,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5601,
											"end": 5637,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5578,
											"end": 5637,
											"name": "tag",
											"source": 4,
											"value": "148"
										},
										{
											"begin": 5578,
											"end": 5637,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5574,
											"end": 5695,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5574,
											"end": 5695,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "149"
										},
										{
											"begin": 5574,
											"end": 5695,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5665,
											"end": 5679,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5665,
											"end": 5679,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "82B429"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5665,
											"end": 5679,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5665,
											"end": 5679,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5665,
											"end": 5679,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5665,
											"end": 5679,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5665,
											"end": 5679,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5665,
											"end": 5679,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5665,
											"end": 5679,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5665,
											"end": 5679,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5665,
											"end": 5679,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5665,
											"end": 5679,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5665,
											"end": 5679,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 5574,
											"end": 5695,
											"name": "tag",
											"source": 4,
											"value": "149"
										},
										{
											"begin": 5574,
											"end": 5695,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5711,
											"end": 5734,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5711,
											"end": 5734,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5711,
											"end": 5734,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5711,
											"end": 5734,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5711,
											"end": 5722,
											"name": "PUSH",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 5711,
											"end": 5734,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5711,
											"end": 5734,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5711,
											"end": 5734,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5711,
											"end": 5734,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5711,
											"end": 5734,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5711,
											"end": 5734,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5711,
											"end": 5734,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5711,
											"end": 5734,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5711,
											"end": 5734,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 5711,
											"end": 5744,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5711,
											"end": 5744,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5711,
											"end": 5744,
											"name": "AND",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5711,
											"end": 5744,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 5711,
											"end": 5744,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5711,
											"end": 5744,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5711,
											"end": 5744,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5711,
											"end": 5744,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5711,
											"end": 5744,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 5711,
											"end": 5744,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5711,
											"end": 5744,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 5711,
											"end": 5744,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 5766,
											"end": 5802,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 5766,
											"end": 5802,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1838,
											"end": 1863,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 1838,
											"end": 1863,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1838,
											"end": 1863,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5766,
											"end": 5802,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5766,
											"end": 5802,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5766,
											"end": 5802,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5766,
											"end": 5802,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5766,
											"end": 5802,
											"name": "PUSH",
											"source": 4,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 5766,
											"end": 5802,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1811,
											"end": 1829,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5766,
											"end": 5802,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5766,
											"end": 5802,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5766,
											"end": 5802,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5766,
											"end": 5802,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5766,
											"end": 5802,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5766,
											"end": 5802,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5766,
											"end": 5802,
											"name": "LOG3",
											"source": 4
										},
										{
											"begin": 5506,
											"end": 5814,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5462,
											"end": 5953,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "151"
										},
										{
											"begin": 5462,
											"end": 5953,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5462,
											"end": 5953,
											"name": "tag",
											"source": 4,
											"value": "147"
										},
										{
											"begin": 5462,
											"end": 5953,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5845,
											"end": 5855,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 5835,
											"end": 5856,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5835,
											"end": 5856,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5835,
											"end": 5856,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5835,
											"end": 5856,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5835,
											"end": 5844,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 5835,
											"end": 5856,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5835,
											"end": 5856,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5835,
											"end": 5856,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5835,
											"end": 5856,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5835,
											"end": 5856,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5835,
											"end": 5856,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5835,
											"end": 5856,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5835,
											"end": 5856,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5835,
											"end": 5865,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 5835,
											"end": 5865,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5835,
											"end": 5865,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5835,
											"end": 5865,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5835,
											"end": 5865,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5835,
											"end": 5865,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5835,
											"end": 5865,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5835,
											"end": 5865,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5835,
											"end": 5865,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 5835,
											"end": 5865,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5835,
											"end": 5865,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5835,
											"end": 5865,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 5835,
											"end": 5878,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 5835,
											"end": 5878,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5835,
											"end": 5878,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 5900,
											"end": 5941,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1838,
											"end": 1863,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1838,
											"end": 1863,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1838,
											"end": 1863,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5835,
											"end": 5865,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5835,
											"end": 5865,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 5845,
											"end": 5855,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5900,
											"end": 5941,
											"name": "PUSH",
											"source": 4,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 5900,
											"end": 5941,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1811,
											"end": 1829,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5900,
											"end": 5941,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5900,
											"end": 5941,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5900,
											"end": 5941,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5900,
											"end": 5941,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5900,
											"end": 5941,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5900,
											"end": 5941,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5900,
											"end": 5941,
											"name": "LOG3",
											"source": 4
										},
										{
											"begin": 5462,
											"end": 5953,
											"name": "tag",
											"source": 4,
											"value": "151"
										},
										{
											"begin": 5462,
											"end": 5953,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5972,
											"end": 5976,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 5342,
											"end": 5984,
											"name": "tag",
											"source": 4,
											"value": "145"
										},
										{
											"begin": 5342,
											"end": 5984,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5342,
											"end": 5984,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 5342,
											"end": 5984,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5342,
											"end": 5984,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5342,
											"end": 5984,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5342,
											"end": 5984,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 409,
											"end": 507,
											"name": "tag",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 409,
											"end": 507,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 325,
											"end": 330,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 325,
											"end": 330,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 325,
											"end": 330,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 311,
											"end": 321,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 311,
											"end": 330,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 307,
											"end": 353,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "154"
										},
										{
											"begin": 307,
											"end": 353,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 339,
											"end": 353,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 339,
											"end": 353,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "82B429"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 339,
											"end": 353,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 339,
											"end": 353,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 339,
											"end": 353,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 339,
											"end": 353,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 339,
											"end": 353,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 339,
											"end": 353,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 339,
											"end": 353,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 339,
											"end": 353,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 339,
											"end": 353,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 339,
											"end": 353,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 339,
											"end": 353,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 307,
											"end": 353,
											"name": "tag",
											"source": 4,
											"value": "154"
										},
										{
											"begin": 307,
											"end": 353,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 481,
											"end": 488,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "C"
										},
										{
											"begin": 481,
											"end": 499,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "156"
										},
										{
											"begin": 491,
											"end": 499,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 481,
											"end": 488,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 481,
											"end": 499,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "157"
										},
										{
											"begin": 481,
											"end": 499,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 481,
											"end": 499,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "156"
										},
										{
											"begin": 481,
											"end": 499,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 481,
											"end": 499,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 409,
											"end": 507,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 409,
											"end": 507,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6391,
											"end": 8107,
											"name": "tag",
											"source": 4,
											"value": "63"
										},
										{
											"begin": 6391,
											"end": 8107,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6537,
											"end": 6543,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 6537,
											"end": 6543,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 6523,
											"end": 6533,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6523,
											"end": 6543,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 6519,
											"end": 8100,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "159"
										},
										{
											"begin": 6519,
											"end": 8100,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6572,
											"end": 6592,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6572,
											"end": 6592,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6572,
											"end": 6592,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6572,
											"end": 6592,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6572,
											"end": 6580,
											"name": "PUSH",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 6572,
											"end": 6592,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6572,
											"end": 6592,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6572,
											"end": 6592,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6572,
											"end": 6592,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6572,
											"end": 6592,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 6572,
											"end": 6592,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6564,
											"end": 6592,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 6564,
											"end": 6592,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6564,
											"end": 6592,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6572,
											"end": 6592,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6572,
											"end": 6592,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6564,
											"end": 6592,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 6560,
											"end": 6651,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "160"
										},
										{
											"begin": 6560,
											"end": 6651,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6620,
											"end": 6635,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6620,
											"end": 6635,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6EDAEF2F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6620,
											"end": 6635,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6620,
											"end": 6635,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6620,
											"end": 6635,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 6620,
											"end": 6635,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6620,
											"end": 6635,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6620,
											"end": 6635,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6620,
											"end": 6635,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6620,
											"end": 6635,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6620,
											"end": 6635,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6620,
											"end": 6635,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6620,
											"end": 6635,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 6560,
											"end": 6651,
											"name": "tag",
											"source": 4,
											"value": "160"
										},
										{
											"begin": 6560,
											"end": 6651,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6671,
											"end": 6687,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6671,
											"end": 6687,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6667,
											"end": 6749,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "161"
										},
										{
											"begin": 6667,
											"end": 6749,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6715,
											"end": 6733,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6715,
											"end": 6733,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E469669"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6715,
											"end": 6733,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6715,
											"end": 6733,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6715,
											"end": 6733,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 6715,
											"end": 6733,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6715,
											"end": 6733,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6715,
											"end": 6733,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6715,
											"end": 6733,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6715,
											"end": 6733,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6715,
											"end": 6733,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6715,
											"end": 6733,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6715,
											"end": 6733,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 6667,
											"end": 6749,
											"name": "tag",
											"source": 4,
											"value": "161"
										},
										{
											"begin": 6667,
											"end": 6749,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6787,
											"end": 6797,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6787,
											"end": 6805,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 6787,
											"end": 6805,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6787,
											"end": 6805,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 6787,
											"end": 6805,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6787,
											"end": 6805,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 6787,
											"end": 6805,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6787,
											"end": 6861,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "162"
										},
										{
											"begin": 6787,
											"end": 6861,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6827,
											"end": 6849,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6827,
											"end": 6849,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6827,
											"end": 6849,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6827,
											"end": 6849,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6827,
											"end": 6849,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6827,
											"end": 6849,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6827,
											"end": 6843,
											"name": "PUSH",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 6827,
											"end": 6849,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6827,
											"end": 6849,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6827,
											"end": 6849,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6827,
											"end": 6849,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6827,
											"end": 6849,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6827,
											"end": 6849,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6827,
											"end": 6849,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6827,
											"end": 6849,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 6850,
											"end": 6860,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 6827,
											"end": 6861,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 6827,
											"end": 6861,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6827,
											"end": 6861,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6827,
											"end": 6861,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6827,
											"end": 6861,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6827,
											"end": 6861,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6827,
											"end": 6861,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 6827,
											"end": 6861,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 6827,
											"end": 6861,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 6827,
											"end": 6861,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6826,
											"end": 6861,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 6787,
											"end": 6861,
											"name": "tag",
											"source": 4,
											"value": "162"
										},
										{
											"begin": 6787,
											"end": 6861,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6787,
											"end": 6919,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6787,
											"end": 6919,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 6787,
											"end": 6919,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "163"
										},
										{
											"begin": 6787,
											"end": 6919,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6896,
											"end": 6919,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6896,
											"end": 6919,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6896,
											"end": 6919,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6896,
											"end": 6919,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6896,
											"end": 6907,
											"name": "PUSH",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 6896,
											"end": 6919,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6896,
											"end": 6919,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6896,
											"end": 6919,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6896,
											"end": 6919,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6896,
											"end": 6919,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 6896,
											"end": 6919,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6896,
											"end": 6919,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6882,
											"end": 6892,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 6882,
											"end": 6919,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 6882,
											"end": 6919,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 6787,
											"end": 6919,
											"name": "tag",
											"source": 4,
											"value": "163"
										},
										{
											"begin": 6787,
											"end": 6919,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6765,
											"end": 6991,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 6765,
											"end": 6991,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "164"
										},
										{
											"begin": 6765,
											"end": 6991,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6961,
											"end": 6975,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6961,
											"end": 6975,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "82B429"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6961,
											"end": 6975,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6961,
											"end": 6975,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6961,
											"end": 6975,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 6961,
											"end": 6975,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6961,
											"end": 6975,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6961,
											"end": 6975,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6961,
											"end": 6975,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6961,
											"end": 6975,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6961,
											"end": 6975,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6961,
											"end": 6975,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6961,
											"end": 6975,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 6765,
											"end": 6991,
											"name": "tag",
											"source": 4,
											"value": "164"
										},
										{
											"begin": 6765,
											"end": 6991,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7026,
											"end": 7036,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "165"
										},
										{
											"begin": 7026,
											"end": 7034,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "166"
										},
										{
											"begin": 7026,
											"end": 7036,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7026,
											"end": 7036,
											"name": "tag",
											"source": 4,
											"value": "165"
										},
										{
											"begin": 7026,
											"end": 7036,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7007,
											"end": 7022,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 7007,
											"end": 7022,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7007,
											"end": 7022,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7007,
											"end": 7022,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7007,
											"end": 7022,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7007,
											"end": 7022,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7007,
											"end": 7016,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 7007,
											"end": 7022,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7007,
											"end": 7022,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7007,
											"end": 7022,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7007,
											"end": 7022,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7007,
											"end": 7022,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 7007,
											"end": 7036,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7007,
											"end": 7036,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 7007,
											"end": 7022,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7007,
											"end": 7022,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7007,
											"end": 7022,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7007,
											"end": 7036,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "167"
										},
										{
											"begin": 7007,
											"end": 7036,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7007,
											"end": 7036,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 7007,
											"end": 7036,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7007,
											"end": 7036,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "168"
										},
										{
											"begin": 7007,
											"end": 7036,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7007,
											"end": 7036,
											"name": "tag",
											"source": 4,
											"value": "167"
										},
										{
											"begin": 7007,
											"end": 7036,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7007,
											"end": 7036,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7007,
											"end": 7036,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7007,
											"end": 7036,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7099,
											"end": 7109,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "169"
										},
										{
											"begin": 7099,
											"end": 7109,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7099,
											"end": 7107,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "166"
										},
										{
											"begin": 7099,
											"end": 7109,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7099,
											"end": 7109,
											"name": "tag",
											"source": 4,
											"value": "169"
										},
										{
											"begin": 7099,
											"end": 7109,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7082,
											"end": 7095,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7082,
											"end": 7095,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 7082,
											"end": 7095,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7082,
											"end": 7095,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7082,
											"end": 7095,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7082,
											"end": 7095,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7082,
											"end": 7095,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7082,
											"end": 7091,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 7082,
											"end": 7095,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7082,
											"end": 7095,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7082,
											"end": 7095,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7082,
											"end": 7095,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7082,
											"end": 7095,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7082,
											"end": 7095,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7082,
											"end": 7095,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7082,
											"end": 7095,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 7082,
											"end": 7109,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7082,
											"end": 7109,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 7082,
											"end": 7109,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7082,
											"end": 7109,
											"name": "SWAP7",
											"source": 4
										},
										{
											"begin": 7082,
											"end": 7109,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7082,
											"end": 7109,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7082,
											"end": 7109,
											"name": "SWAP6",
											"source": 4
										},
										{
											"begin": 7082,
											"end": 7109,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 7141,
											"end": 7161,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 7141,
											"end": 7161,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7141,
											"end": 7161,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7141,
											"end": 7149,
											"name": "PUSH",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 7141,
											"end": 7161,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7141,
											"end": 7161,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7141,
											"end": 7161,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 7141,
											"end": 7161,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7141,
											"end": 7161,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 7141,
											"end": 7166,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7141,
											"end": 7166,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 7141,
											"end": 7166,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7141,
											"end": 7166,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7141,
											"end": 7166,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7141,
											"end": 7166,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7141,
											"end": 7166,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 7141,
											"end": 7166,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 7141,
											"end": 7166,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7141,
											"end": 7166,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 7188,
											"end": 7199,
											"name": "PUSH",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 7188,
											"end": 7211,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7188,
											"end": 7211,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7188,
											"end": 7211,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 7188,
											"end": 7211,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7188,
											"end": 7211,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 7181,
											"end": 7211,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7181,
											"end": 7211,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 7181,
											"end": 7211,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7181,
											"end": 7211,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 7181,
											"end": 7211,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7181,
											"end": 7211,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7181,
											"end": 7211,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 7181,
											"end": 7211,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 7289,
											"end": 7301,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7289,
											"end": 7301,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 7289,
											"end": 7301,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7289,
											"end": 7301,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7289,
											"end": 7301,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7289,
											"end": 7295,
											"name": "PUSH",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 7289,
											"end": 7301,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7289,
											"end": 7301,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7289,
											"end": 7301,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7289,
											"end": 7301,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7289,
											"end": 7301,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 7302,
											"end": 7321,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7302,
											"end": 7321,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 7302,
											"end": 7325,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "170"
										},
										{
											"begin": 7302,
											"end": 7325,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 7302,
											"end": 7325,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "168"
										},
										{
											"begin": 7302,
											"end": 7325,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7302,
											"end": 7325,
											"name": "tag",
											"source": 4,
											"value": "170"
										},
										{
											"begin": 7302,
											"end": 7325,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7289,
											"end": 7326,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7289,
											"end": 7326,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 7289,
											"end": 7326,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7289,
											"end": 7326,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 7289,
											"end": 7326,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "172"
										},
										{
											"begin": 7289,
											"end": 7326,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7289,
											"end": 7326,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "172"
										},
										{
											"begin": 7289,
											"end": 7326,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "173"
										},
										{
											"begin": 7289,
											"end": 7326,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7289,
											"end": 7326,
											"name": "tag",
											"source": 4,
											"value": "172"
										},
										{
											"begin": 7289,
											"end": 7326,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7289,
											"end": 7326,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7289,
											"end": 7326,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7289,
											"end": 7326,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7289,
											"end": 7326,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7289,
											"end": 7326,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7289,
											"end": 7326,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7289,
											"end": 7326,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7289,
											"end": 7326,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 7289,
											"end": 7326,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7289,
											"end": 7326,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7289,
											"end": 7326,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7289,
											"end": 7326,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7341,
											"end": 7353,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 7341,
											"end": 7353,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7341,
											"end": 7353,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7341,
											"end": 7353,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7341,
											"end": 7347,
											"name": "PUSH",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 7341,
											"end": 7353,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7341,
											"end": 7353,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7341,
											"end": 7353,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7341,
											"end": 7353,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7341,
											"end": 7353,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 7341,
											"end": 7353,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 7354,
											"end": 7377,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 7354,
											"end": 7377,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 7354,
											"end": 7377,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7354,
											"end": 7365,
											"name": "PUSH",
											"source": 4,
											"value": "A"
										},
										{
											"begin": 7354,
											"end": 7377,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7354,
											"end": 7377,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 7354,
											"end": 7377,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7354,
											"end": 7377,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7354,
											"end": 7377,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 7354,
											"end": 7377,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 7354,
											"end": 7377,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 7341,
											"end": 7378,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7341,
											"end": 7378,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 7289,
											"end": 7326,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 7289,
											"end": 7326,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7289,
											"end": 7326,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7289,
											"end": 7326,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 7341,
											"end": 7378,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7341,
											"end": 7378,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 7341,
											"end": 7378,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "176"
										},
										{
											"begin": 7341,
											"end": 7378,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7341,
											"end": 7378,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "176"
										},
										{
											"begin": 7341,
											"end": 7378,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "173"
										},
										{
											"begin": 7341,
											"end": 7378,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7341,
											"end": 7378,
											"name": "tag",
											"source": 4,
											"value": "176"
										},
										{
											"begin": 7341,
											"end": 7378,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7341,
											"end": 7378,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7341,
											"end": 7378,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7341,
											"end": 7378,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7341,
											"end": 7378,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7341,
											"end": 7378,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7341,
											"end": 7378,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7341,
											"end": 7378,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7341,
											"end": 7378,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 7341,
											"end": 7378,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7341,
											"end": 7378,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7341,
											"end": 7378,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7341,
											"end": 7390,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 7341,
											"end": 7390,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7341,
											"end": 7390,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 7341,
											"end": 7390,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7425,
											"end": 7437,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 7425,
											"end": 7437,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7425,
											"end": 7437,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7425,
											"end": 7437,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7425,
											"end": 7431,
											"name": "PUSH",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 7425,
											"end": 7437,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7425,
											"end": 7437,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7425,
											"end": 7437,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7425,
											"end": 7437,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7425,
											"end": 7437,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7425,
											"end": 7437,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 7425,
											"end": 7443,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7425,
											"end": 7443,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 7425,
											"end": 7443,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7425,
											"end": 7443,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "179"
										},
										{
											"begin": 7425,
											"end": 7443,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7425,
											"end": 7443,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "179"
										},
										{
											"begin": 7425,
											"end": 7443,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "180"
										},
										{
											"begin": 7425,
											"end": 7443,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7425,
											"end": 7443,
											"name": "tag",
											"source": 4,
											"value": "179"
										},
										{
											"begin": 7425,
											"end": 7443,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7425,
											"end": 7443,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7425,
											"end": 7443,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7425,
											"end": 7443,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7425,
											"end": 7443,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7425,
											"end": 7443,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7425,
											"end": 7443,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7425,
											"end": 7443,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7425,
											"end": 7443,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 7425,
											"end": 7443,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7425,
											"end": 7443,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 7425,
											"end": 7443,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7425,
											"end": 7443,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7425,
											"end": 7443,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7425,
											"end": 7443,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7425,
											"end": 7443,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7425,
											"end": 7443,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 7425,
											"end": 7443,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7425,
											"end": 7443,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 7425,
											"end": 7443,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7425,
											"end": 7443,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7425,
											"end": 7443,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 7425,
											"end": 7443,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 7529,
											"end": 7552,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7529,
											"end": 7552,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7529,
											"end": 7552,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7529,
											"end": 7540,
											"name": "PUSH",
											"source": 4,
											"value": "A"
										},
										{
											"begin": 7529,
											"end": 7552,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7529,
											"end": 7552,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7529,
											"end": 7552,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7529,
											"end": 7552,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7529,
											"end": 7552,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7529,
											"end": 7552,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 7529,
											"end": 7552,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 7504,
											"end": 7526,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 7504,
											"end": 7526,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 7504,
											"end": 7526,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7504,
											"end": 7526,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7504,
											"end": 7526,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 7504,
											"end": 7526,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 7504,
											"end": 7552,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7606,
											"end": 7616,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 7606,
											"end": 7616,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7606,
											"end": 7616,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7606,
											"end": 7616,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 7606,
											"end": 7616,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7606,
											"end": 7612,
											"name": "PUSH",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 7606,
											"end": 7616,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7606,
											"end": 7616,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7606,
											"end": 7616,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7606,
											"end": 7616,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7606,
											"end": 7616,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 7606,
											"end": 7633,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7606,
											"end": 7633,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 7425,
											"end": 7443,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 7606,
											"end": 7633,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7606,
											"end": 7633,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7606,
											"end": 7633,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7606,
											"end": 7633,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7606,
											"end": 7633,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 7606,
											"end": 7633,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7606,
											"end": 7633,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 7606,
											"end": 7633,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7606,
											"end": 7633,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 7606,
											"end": 7633,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 7606,
											"end": 7633,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 7606,
											"end": 7633,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7606,
											"end": 7633,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 7606,
											"end": 7633,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7606,
											"end": 7633,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 7716,
											"end": 7726,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 7716,
											"end": 7726,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7716,
											"end": 7733,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7716,
											"end": 7733,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 7716,
											"end": 7737,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "183"
										},
										{
											"begin": 7716,
											"end": 7737,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7425,
											"end": 7443,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7716,
											"end": 7737,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "168"
										},
										{
											"begin": 7716,
											"end": 7737,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7716,
											"end": 7737,
											"name": "tag",
											"source": 4,
											"value": "183"
										},
										{
											"begin": 7716,
											"end": 7737,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7690,
											"end": 7713,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7690,
											"end": 7713,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7690,
											"end": 7713,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7690,
											"end": 7713,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7690,
											"end": 7701,
											"name": "PUSH",
											"source": 4,
											"value": "A"
										},
										{
											"begin": 7690,
											"end": 7713,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7690,
											"end": 7713,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7690,
											"end": 7713,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7690,
											"end": 7713,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7690,
											"end": 7713,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7690,
											"end": 7713,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 7690,
											"end": 7737,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 7690,
											"end": 7737,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7690,
											"end": 7737,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 7690,
											"end": 7737,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 7759,
											"end": 7789,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7759,
											"end": 7789,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7702,
											"end": 7712,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7702,
											"end": 7712,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7759,
											"end": 7789,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7759,
											"end": 7789,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 7759,
											"end": 7789,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7759,
											"end": 7789,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 7759,
											"end": 7789,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7759,
											"end": 7789,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 7759,
											"end": 7789,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7759,
											"end": 7789,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7759,
											"end": 7789,
											"name": "PUSH",
											"source": 4,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7759,
											"end": 7789,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7759,
											"end": 7789,
											"name": "LOG4",
											"source": 4
										},
										{
											"begin": 7829,
											"end": 7831,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7809,
											"end": 7844,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7823,
											"end": 7827,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7809,
											"end": 7844,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7809,
											"end": 7844,
											"name": "PUSH",
											"source": 4,
											"value": "E59FDD36D0D223C0C7D996DB7AD796880F45E1936CB0BB7AC102E7082E031487"
										},
										{
											"begin": 7833,
											"end": 7843,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "184"
										},
										{
											"begin": 7833,
											"end": 7841,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "166"
										},
										{
											"begin": 7833,
											"end": 7843,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7833,
											"end": 7843,
											"name": "tag",
											"source": 4,
											"value": "184"
										},
										{
											"begin": 7833,
											"end": 7843,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7809,
											"end": 7844,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7809,
											"end": 7844,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1838,
											"end": 1863,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1838,
											"end": 1863,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1838,
											"end": 1863,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1826,
											"end": 1828,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1811,
											"end": 1829,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7809,
											"end": 7844,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7809,
											"end": 7844,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7809,
											"end": 7844,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7809,
											"end": 7844,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7809,
											"end": 7844,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7809,
											"end": 7844,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7809,
											"end": 7844,
											"name": "LOG3",
											"source": 4
										},
										{
											"begin": 6545,
											"end": 7856,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6391,
											"end": 8107,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6391,
											"end": 8107,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6391,
											"end": 8107,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6391,
											"end": 8107,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6519,
											"end": 8100,
											"name": "tag",
											"source": 4,
											"value": "159"
										},
										{
											"begin": 6519,
											"end": 8100,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7895,
											"end": 7910,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7895,
											"end": 7910,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7877,
											"end": 7892,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7895,
											"end": 7910,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7895,
											"end": 7910,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7895,
											"end": 7910,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7895,
											"end": 7904,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 7895,
											"end": 7910,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7895,
											"end": 7910,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7895,
											"end": 7910,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7895,
											"end": 7910,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7895,
											"end": 7910,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7895,
											"end": 7910,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7895,
											"end": 7910,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7895,
											"end": 7910,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 7911,
											"end": 7921,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 7895,
											"end": 7922,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 7895,
											"end": 7922,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7895,
											"end": 7922,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7895,
											"end": 7922,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7895,
											"end": 7922,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7895,
											"end": 7922,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7895,
											"end": 7922,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 7895,
											"end": 7922,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 7943,
											"end": 7971,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7943,
											"end": 7971,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 7939,
											"end": 8040,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "187"
										},
										{
											"begin": 7939,
											"end": 8040,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 8020,
											"end": 8040,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "188"
										},
										{
											"begin": 8030,
											"end": 8040,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8020,
											"end": 8027,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8020,
											"end": 8040,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "168"
										},
										{
											"begin": 8020,
											"end": 8040,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8020,
											"end": 8040,
											"name": "tag",
											"source": 4,
											"value": "188"
										},
										{
											"begin": 8020,
											"end": 8040,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7990,
											"end": 8005,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 7990,
											"end": 8005,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7990,
											"end": 8005,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7990,
											"end": 8005,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7990,
											"end": 8005,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7990,
											"end": 8005,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7990,
											"end": 7999,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 7990,
											"end": 8005,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7990,
											"end": 8005,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7990,
											"end": 8005,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7990,
											"end": 8005,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7990,
											"end": 8005,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7990,
											"end": 8005,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7990,
											"end": 8005,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7990,
											"end": 8005,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 8006,
											"end": 8016,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 7990,
											"end": 8017,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 7990,
											"end": 8017,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7990,
											"end": 8017,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7990,
											"end": 8017,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7990,
											"end": 8017,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7990,
											"end": 8017,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7990,
											"end": 8017,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 7990,
											"end": 8040,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 7939,
											"end": 8040,
											"name": "tag",
											"source": 4,
											"value": "187"
										},
										{
											"begin": 7939,
											"end": 8040,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8057,
											"end": 8088,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "189"
										},
										{
											"begin": 8067,
											"end": 8071,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 8073,
											"end": 8075,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 8077,
											"end": 8087,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 8057,
											"end": 8066,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "190"
										},
										{
											"begin": 8057,
											"end": 8088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8057,
											"end": 8088,
											"name": "tag",
											"source": 4,
											"value": "189"
										},
										{
											"begin": 8057,
											"end": 8088,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8057,
											"end": 8088,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7862,
											"end": 8100,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6519,
											"end": 8100,
											"name": "tag",
											"source": 4,
											"value": "186"
										},
										{
											"begin": 6519,
											"end": 8100,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6391,
											"end": 8107,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6391,
											"end": 8107,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6391,
											"end": 8107,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6391,
											"end": 8107,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 797,
											"end": 948,
											"name": "tag",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 797,
											"end": 948,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 325,
											"end": 330,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 325,
											"end": 330,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 325,
											"end": 330,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 311,
											"end": 321,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 311,
											"end": 330,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 307,
											"end": 353,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "192"
										},
										{
											"begin": 307,
											"end": 353,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 339,
											"end": 353,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 339,
											"end": 353,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "82B429"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 339,
											"end": 353,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 339,
											"end": 353,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 339,
											"end": 353,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 339,
											"end": 353,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 339,
											"end": 353,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 339,
											"end": 353,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 339,
											"end": 353,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 339,
											"end": 353,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 339,
											"end": 353,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 339,
											"end": 353,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 339,
											"end": 353,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 307,
											"end": 353,
											"name": "tag",
											"source": 4,
											"value": "192"
										},
										{
											"begin": 307,
											"end": 353,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 876,
											"end": 877,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 860,
											"end": 878,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 860,
											"end": 878,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 860,
											"end": 878,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 860,
											"end": 878,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 860,
											"end": 878,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 896,
											"end": 940,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 896,
											"end": 940,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 917,
											"end": 927,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 917,
											"end": 927,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 896,
											"end": 940,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 896,
											"end": 940,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 876,
											"end": 877,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 876,
											"end": 877,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 896,
											"end": 940,
											"modifierDepth": 1,
											"name": "LOG3",
											"source": 4
										},
										{
											"begin": 797,
											"end": 948,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8403,
											"end": 8808,
											"name": "tag",
											"source": 4,
											"value": "72"
										},
										{
											"begin": 8403,
											"end": 8808,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8527,
											"end": 8553,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "195"
										},
										{
											"begin": 8540,
											"end": 8544,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8546,
											"end": 8548,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8550,
											"end": 8552,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8527,
											"end": 8539,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "63"
										},
										{
											"begin": 8527,
											"end": 8553,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8527,
											"end": 8553,
											"name": "tag",
											"source": 4,
											"value": "195"
										},
										{
											"begin": 8527,
											"end": 8553,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8584,
											"end": 8598,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8584,
											"end": 8598,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8584,
											"end": 8598,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 8584,
											"end": 8603,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 8584,
											"end": 8603,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8584,
											"end": 8603,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 8584,
											"end": 8603,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8584,
											"end": 8738,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "196"
										},
										{
											"begin": 8584,
											"end": 8738,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8620,
											"end": 8681,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8620,
											"end": 8681,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A85BD01"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8620,
											"end": 8681,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8620,
											"end": 8681,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8620,
											"end": 8681,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8656,
											"end": 8666,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 8620,
											"end": 8681,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 8620,
											"end": 8681,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8620,
											"end": 8681,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9162,
											"end": 9196,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9232,
											"end": 9247,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 9232,
											"end": 9247,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9232,
											"end": 9247,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9212,
											"end": 9230,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 9212,
											"end": 9230,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 9212,
											"end": 9230,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9205,
											"end": 9248,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9264,
											"end": 9282,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 9264,
											"end": 9282,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 9264,
											"end": 9282,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9257,
											"end": 9291,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 9257,
											"end": 9291,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9257,
											"end": 9291,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9327,
											"end": 9330,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 9307,
											"end": 9325,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 9307,
											"end": 9325,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 9307,
											"end": 9325,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9300,
											"end": 9331,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 9347,
											"end": 9366,
											"name": "PUSH",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 9347,
											"end": 9366,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 9347,
											"end": 9366,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9340,
											"end": 9370,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8698,
											"end": 8738,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8698,
											"end": 8738,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8620,
											"end": 8655,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8620,
											"end": 8655,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 8620,
											"end": 8655,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8620,
											"end": 8655,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8698,
											"end": 8738,
											"name": "PUSH",
											"source": 4,
											"value": "150B7A02"
										},
										{
											"begin": 8698,
											"end": 8738,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9387,
											"end": 9406,
											"name": "PUSH",
											"source": 5,
											"value": "A4"
										},
										{
											"begin": 9387,
											"end": 9406,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8620,
											"end": 8681,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 8620,
											"end": 8681,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8620,
											"end": 8681,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 8620,
											"end": 8681,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8620,
											"end": 8681,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8620,
											"end": 8681,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 8620,
											"end": 8681,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8620,
											"end": 8681,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8620,
											"end": 8681,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 8620,
											"end": 8681,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 8620,
											"end": 8681,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 8620,
											"end": 8681,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 8620,
											"end": 8681,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8620,
											"end": 8681,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 8620,
											"end": 8681,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "200"
										},
										{
											"begin": 8620,
											"end": 8681,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 8620,
											"end": 8681,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 8620,
											"end": 8681,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8620,
											"end": 8681,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8620,
											"end": 8681,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 8620,
											"end": 8681,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 8620,
											"end": 8681,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8620,
											"end": 8681,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 8620,
											"end": 8681,
											"name": "tag",
											"source": 4,
											"value": "200"
										},
										{
											"begin": 8620,
											"end": 8681,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8620,
											"end": 8681,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8620,
											"end": 8681,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8620,
											"end": 8681,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8620,
											"end": 8681,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8620,
											"end": 8681,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8620,
											"end": 8681,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 8620,
											"end": 8681,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 8620,
											"end": 8681,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 8620,
											"end": 8681,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 8620,
											"end": 8681,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 8620,
											"end": 8681,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8620,
											"end": 8681,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8620,
											"end": 8681,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8620,
											"end": 8681,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8620,
											"end": 8681,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8620,
											"end": 8681,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8620,
											"end": 8681,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8620,
											"end": 8681,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8620,
											"end": 8681,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8620,
											"end": 8681,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8620,
											"end": 8681,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8620,
											"end": 8681,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8620,
											"end": 8681,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "201"
										},
										{
											"begin": 8620,
											"end": 8681,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8620,
											"end": 8681,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8620,
											"end": 8681,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "202"
										},
										{
											"begin": 8620,
											"end": 8681,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8620,
											"end": 8681,
											"name": "tag",
											"source": 4,
											"value": "201"
										},
										{
											"begin": 8620,
											"end": 8681,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 8620,
											"end": 8738,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8620,
											"end": 8738,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 8620,
											"end": 8738,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 8584,
											"end": 8738,
											"name": "tag",
											"source": 4,
											"value": "196"
										},
										{
											"begin": 8584,
											"end": 8738,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8566,
											"end": 8801,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 8566,
											"end": 8801,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "186"
										},
										{
											"begin": 8566,
											"end": 8801,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 8772,
											"end": 8789,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8772,
											"end": 8789,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3DA63931"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8772,
											"end": 8789,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8772,
											"end": 8789,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8772,
											"end": 8789,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 8772,
											"end": 8789,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8772,
											"end": 8789,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8772,
											"end": 8789,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 8772,
											"end": 8789,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8772,
											"end": 8789,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8772,
											"end": 8789,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 8772,
											"end": 8789,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8772,
											"end": 8789,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 629,
											"end": 787,
											"name": "tag",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 629,
											"end": 787,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 325,
											"end": 330,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 325,
											"end": 330,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 325,
											"end": 330,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 311,
											"end": 321,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 311,
											"end": 330,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 307,
											"end": 353,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "205"
										},
										{
											"begin": 307,
											"end": 353,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 339,
											"end": 353,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 339,
											"end": 353,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "82B429"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 339,
											"end": 353,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 339,
											"end": 353,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 339,
											"end": 353,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 339,
											"end": 353,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 339,
											"end": 353,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 339,
											"end": 353,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 339,
											"end": 353,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 339,
											"end": 353,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 339,
											"end": 353,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 339,
											"end": 353,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 339,
											"end": 353,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 307,
											"end": 353,
											"name": "tag",
											"source": 4,
											"value": "205"
										},
										{
											"begin": 307,
											"end": 353,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 749,
											"end": 779,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "156"
										},
										{
											"begin": 764,
											"end": 769,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 771,
											"end": 778,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 749,
											"end": 763,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "208"
										},
										{
											"begin": 749,
											"end": 779,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4671,
											"end": 4782,
											"name": "tag",
											"source": 4,
											"value": "83"
										},
										{
											"begin": 4671,
											"end": 4782,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 325,
											"end": 330,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 325,
											"end": 330,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 325,
											"end": 330,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 311,
											"end": 321,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 311,
											"end": 330,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 307,
											"end": 353,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "210"
										},
										{
											"begin": 307,
											"end": 353,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 339,
											"end": 353,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 339,
											"end": 353,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "82B429"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 339,
											"end": 353,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 339,
											"end": 353,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 339,
											"end": 353,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 339,
											"end": 353,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 339,
											"end": 353,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 339,
											"end": 353,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 339,
											"end": 353,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 339,
											"end": 353,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 339,
											"end": 353,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 339,
											"end": 353,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 339,
											"end": 353,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 307,
											"end": 353,
											"name": "tag",
											"source": 4,
											"value": "210"
										},
										{
											"begin": 307,
											"end": 353,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4749,
											"end": 4766,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4749,
											"end": 4766,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4749,
											"end": 4766,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4749,
											"end": 4766,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4749,
											"end": 4766,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4749,
											"end": 4766,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4749,
											"end": 4766,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4749,
											"end": 4766,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4749,
											"end": 4758,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "B"
										},
										{
											"begin": 4749,
											"end": 4766,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4749,
											"end": 4766,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4749,
											"end": 4766,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4749,
											"end": 4766,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4749,
											"end": 4766,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 4749,
											"end": 4774,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4749,
											"end": 4774,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4749,
											"end": 4774,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4749,
											"end": 4774,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4749,
											"end": 4774,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4749,
											"end": 4774,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4749,
											"end": 4774,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4749,
											"end": 4774,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4749,
											"end": 4774,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4749,
											"end": 4774,
											"modifierDepth": 1,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 4749,
											"end": 4774,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4749,
											"end": 4774,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 4671,
											"end": 4782,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4854,
											"end": 5047,
											"name": "tag",
											"source": 4,
											"value": "86"
										},
										{
											"begin": 4854,
											"end": 5047,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4912,
											"end": 4925,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4946,
											"end": 4958,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4946,
											"end": 4958,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4946,
											"end": 4958,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4946,
											"end": 4954,
											"name": "PUSH",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 4946,
											"end": 4958,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4946,
											"end": 4958,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4946,
											"end": 4958,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4946,
											"end": 4958,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4946,
											"end": 4958,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 4946,
											"end": 4958,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4946,
											"end": 4958,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4946,
											"end": 4958,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4971,
											"end": 5040,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "213"
										},
										{
											"begin": 4971,
											"end": 5040,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5018,
											"end": 5028,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5018,
											"end": 5028,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C5723B51"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5018,
											"end": 5028,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5018,
											"end": 5028,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5018,
											"end": 5028,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5018,
											"end": 5028,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5018,
											"end": 5028,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5018,
											"end": 5028,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5018,
											"end": 5028,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5018,
											"end": 5028,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5018,
											"end": 5028,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5018,
											"end": 5028,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5018,
											"end": 5028,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 4971,
											"end": 5040,
											"name": "tag",
											"source": 4,
											"value": "213"
										},
										{
											"begin": 4971,
											"end": 5040,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4854,
											"end": 5047,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4854,
											"end": 5047,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4854,
											"end": 5047,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4854,
											"end": 5047,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2854,
											"end": 2874,
											"name": "tag",
											"source": 4,
											"value": "97"
										},
										{
											"begin": 2854,
											"end": 2874,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2854,
											"end": 2874,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 2854,
											"end": 2874,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2854,
											"end": 2874,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2854,
											"end": 2874,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "139"
										},
										{
											"begin": 2854,
											"end": 2874,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2854,
											"end": 2874,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "140"
										},
										{
											"begin": 2854,
											"end": 2874,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6035,
											"end": 6242,
											"name": "tag",
											"source": 4,
											"value": "105"
										},
										{
											"begin": 6035,
											"end": 6242,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6138,
											"end": 6148,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 6121,
											"end": 6149,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6121,
											"end": 6149,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6121,
											"end": 6149,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6121,
											"end": 6149,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6121,
											"end": 6137,
											"name": "PUSH",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 6121,
											"end": 6149,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6121,
											"end": 6149,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6121,
											"end": 6149,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6121,
											"end": 6149,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6121,
											"end": 6149,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6121,
											"end": 6149,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6121,
											"end": 6149,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6121,
											"end": 6149,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6121,
											"end": 6159,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 6121,
											"end": 6159,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6121,
											"end": 6159,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6121,
											"end": 6159,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 6121,
											"end": 6159,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6121,
											"end": 6159,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6121,
											"end": 6159,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6121,
											"end": 6159,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6121,
											"end": 6159,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 6121,
											"end": 6159,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6121,
											"end": 6159,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6121,
											"end": 6159,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 6121,
											"end": 6170,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6121,
											"end": 6170,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6121,
											"end": 6170,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6121,
											"end": 6170,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 6121,
											"end": 6170,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 6121,
											"end": 6170,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 6121,
											"end": 6170,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6121,
											"end": 6170,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6121,
											"end": 6170,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 6121,
											"end": 6170,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6121,
											"end": 6170,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6121,
											"end": 6170,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 6188,
											"end": 6234,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6188,
											"end": 6234,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1640,
											"end": 1681,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1640,
											"end": 1681,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1640,
											"end": 1681,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6121,
											"end": 6159,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6121,
											"end": 6159,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 6138,
											"end": 6148,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6188,
											"end": 6234,
											"name": "PUSH",
											"source": 4,
											"value": "17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
										},
										{
											"begin": 6188,
											"end": 6234,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1613,
											"end": 1631,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6188,
											"end": 6234,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6188,
											"end": 6234,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6188,
											"end": 6234,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6188,
											"end": 6234,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6188,
											"end": 6234,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6188,
											"end": 6234,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6188,
											"end": 6234,
											"name": "LOG3",
											"source": 4
										},
										{
											"begin": 6035,
											"end": 6242,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6035,
											"end": 6242,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6035,
											"end": 6242,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8166,
											"end": 8326,
											"name": "tag",
											"source": 4,
											"value": "108"
										},
										{
											"begin": 8166,
											"end": 8326,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8261,
											"end": 8265,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8285,
											"end": 8318,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "222"
										},
										{
											"begin": 8295,
											"end": 8305,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 8307,
											"end": 8309,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 8311,
											"end": 8317,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 8285,
											"end": 8294,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "190"
										},
										{
											"begin": 8285,
											"end": 8318,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8285,
											"end": 8318,
											"name": "tag",
											"source": 4,
											"value": "222"
										},
										{
											"begin": 8285,
											"end": 8318,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8278,
											"end": 8318,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 8166,
											"end": 8326,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8166,
											"end": 8326,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8903,
											"end": 9340,
											"name": "tag",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 8903,
											"end": 9340,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9057,
											"end": 9083,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "224"
										},
										{
											"begin": 9070,
											"end": 9074,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 9076,
											"end": 9078,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 9080,
											"end": 9082,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 9057,
											"end": 9069,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "63"
										},
										{
											"begin": 9057,
											"end": 9083,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9057,
											"end": 9083,
											"name": "tag",
											"source": 4,
											"value": "224"
										},
										{
											"begin": 9057,
											"end": 9083,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9114,
											"end": 9128,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 9114,
											"end": 9128,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9114,
											"end": 9128,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 9114,
											"end": 9133,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 9114,
											"end": 9133,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9114,
											"end": 9133,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 9114,
											"end": 9133,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9114,
											"end": 9270,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "225"
										},
										{
											"begin": 9114,
											"end": 9270,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9150,
											"end": 9213,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9150,
											"end": 9213,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A85BD01"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9150,
											"end": 9213,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9150,
											"end": 9213,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9150,
											"end": 9213,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9230,
											"end": 9270,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9150,
											"end": 9185,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 9150,
											"end": 9185,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9150,
											"end": 9185,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9230,
											"end": 9270,
											"name": "PUSH",
											"source": 4,
											"value": "150B7A02"
										},
										{
											"begin": 9230,
											"end": 9270,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9150,
											"end": 9213,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "226"
										},
										{
											"begin": 9150,
											"end": 9213,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9186,
											"end": 9196,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 9186,
											"end": 9196,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9198,
											"end": 9202,
											"name": "DUP11",
											"source": 4
										},
										{
											"begin": 9198,
											"end": 9202,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9204,
											"end": 9206,
											"name": "DUP10",
											"source": 4
										},
										{
											"begin": 9204,
											"end": 9206,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9208,
											"end": 9212,
											"name": "DUP10",
											"source": 4
										},
										{
											"begin": 9208,
											"end": 9212,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9208,
											"end": 9212,
											"name": "DUP10",
											"source": 4
										},
										{
											"begin": 9208,
											"end": 9212,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9150,
											"end": 9213,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 9150,
											"end": 9213,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9150,
											"end": 9213,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "227"
										},
										{
											"begin": 9150,
											"end": 9213,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9150,
											"end": 9213,
											"name": "tag",
											"source": 4,
											"value": "226"
										},
										{
											"begin": 9150,
											"end": 9213,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9150,
											"end": 9213,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9150,
											"end": 9213,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9150,
											"end": 9213,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 9150,
											"end": 9213,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9150,
											"end": 9213,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9150,
											"end": 9213,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 9150,
											"end": 9213,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9150,
											"end": 9213,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9150,
											"end": 9213,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 9150,
											"end": 9213,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 9150,
											"end": 9213,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 9150,
											"end": 9213,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 9150,
											"end": 9213,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9150,
											"end": 9213,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 9150,
											"end": 9213,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "229"
										},
										{
											"begin": 9150,
											"end": 9213,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 9150,
											"end": 9213,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 9150,
											"end": 9213,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9150,
											"end": 9213,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9150,
											"end": 9213,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 9150,
											"end": 9213,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 9150,
											"end": 9213,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9150,
											"end": 9213,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 9150,
											"end": 9213,
											"name": "tag",
											"source": 4,
											"value": "229"
										},
										{
											"begin": 9150,
											"end": 9213,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9150,
											"end": 9213,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9150,
											"end": 9213,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9150,
											"end": 9213,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9150,
											"end": 9213,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9150,
											"end": 9213,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9150,
											"end": 9213,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 9150,
											"end": 9213,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 9150,
											"end": 9213,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 9150,
											"end": 9213,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 9150,
											"end": 9213,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 9150,
											"end": 9213,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9150,
											"end": 9213,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9150,
											"end": 9213,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9150,
											"end": 9213,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9150,
											"end": 9213,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9150,
											"end": 9213,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9150,
											"end": 9213,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9150,
											"end": 9213,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9150,
											"end": 9213,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9150,
											"end": 9213,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9150,
											"end": 9213,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9150,
											"end": 9213,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9150,
											"end": 9213,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "230"
										},
										{
											"begin": 9150,
											"end": 9213,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9150,
											"end": 9213,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9150,
											"end": 9213,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "202"
										},
										{
											"begin": 9150,
											"end": 9213,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9150,
											"end": 9213,
											"name": "tag",
											"source": 4,
											"value": "230"
										},
										{
											"begin": 9150,
											"end": 9213,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 9150,
											"end": 9270,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9150,
											"end": 9270,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 9150,
											"end": 9270,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 9114,
											"end": 9270,
											"name": "tag",
											"source": 4,
											"value": "225"
										},
										{
											"begin": 9114,
											"end": 9270,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9096,
											"end": 9333,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 9096,
											"end": 9333,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "189"
										},
										{
											"begin": 9096,
											"end": 9333,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 9304,
											"end": 9321,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9304,
											"end": 9321,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3DA63931"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9304,
											"end": 9321,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9304,
											"end": 9321,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9304,
											"end": 9321,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 9304,
											"end": 9321,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9304,
											"end": 9321,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9304,
											"end": 9321,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 9304,
											"end": 9321,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9304,
											"end": 9321,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9304,
											"end": 9321,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 9304,
											"end": 9321,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9304,
											"end": 9321,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 795,
											"end": 3227,
											"name": "tag",
											"source": 3,
											"value": "116"
										},
										{
											"begin": 795,
											"end": 3227,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 855,
											"end": 868,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 914,
											"end": 915,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 891,
											"end": 903,
											"name": "PUSH",
											"source": 3,
											"value": "D"
										},
										{
											"begin": 885,
											"end": 911,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 885,
											"end": 911,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 885,
											"end": 911,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "233"
										},
										{
											"begin": 885,
											"end": 911,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 885,
											"end": 911,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "140"
										},
										{
											"begin": 885,
											"end": 911,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 885,
											"end": 911,
											"name": "tag",
											"source": 3,
											"value": "233"
										},
										{
											"begin": 885,
											"end": 911,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 885,
											"end": 911,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 885,
											"end": 911,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 885,
											"end": 915,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 881,
											"end": 3220,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 881,
											"end": 3220,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "234"
										},
										{
											"begin": 881,
											"end": 3220,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 953,
											"end": 965,
											"name": "PUSH",
											"source": 3,
											"value": "D"
										},
										{
											"begin": 967,
											"end": 987,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "235"
										},
										{
											"begin": 984,
											"end": 986,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 967,
											"end": 983,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "236"
										},
										{
											"begin": 967,
											"end": 987,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 967,
											"end": 987,
											"name": "tag",
											"source": 3,
											"value": "235"
										},
										{
											"begin": 967,
											"end": 987,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 939,
											"end": 988,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 939,
											"end": 988,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 939,
											"end": 988,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 939,
											"end": 988,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 939,
											"end": 988,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "237"
										},
										{
											"begin": 939,
											"end": 988,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 939,
											"end": 988,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 939,
											"end": 988,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 939,
											"end": 988,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "238"
										},
										{
											"begin": 939,
											"end": 988,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 939,
											"end": 988,
											"name": "tag",
											"source": 3,
											"value": "237"
										},
										{
											"begin": 939,
											"end": 988,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 939,
											"end": 988,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 939,
											"end": 988,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 939,
											"end": 988,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 939,
											"end": 988,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 939,
											"end": 988,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 939,
											"end": 988,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 939,
											"end": 988,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 939,
											"end": 988,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 939,
											"end": 988,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 939,
											"end": 988,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 939,
											"end": 988,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 939,
											"end": 988,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 932,
											"end": 988,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 932,
											"end": 988,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 795,
											"end": 3227,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 795,
											"end": 3227,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 795,
											"end": 3227,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 795,
											"end": 3227,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 881,
											"end": 3220,
											"name": "tag",
											"source": 3,
											"value": "234"
										},
										{
											"begin": 881,
											"end": 3220,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1021,
											"end": 1031,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1074,
											"end": 1076,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1057,
											"end": 1077,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1057,
											"end": 1077,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1057,
											"end": 1077,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1057,
											"end": 1077,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1057,
											"end": 1077,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "240"
										},
										{
											"begin": 1057,
											"end": 1077,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 11534,
											"end": 11553,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 11534,
											"end": 11553,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 11578,
											"end": 11580,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 11569,
											"end": 11581,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 11569,
											"end": 11581,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11405,
											"end": 11587,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1057,
											"end": 1077,
											"name": "tag",
											"source": 3,
											"value": "240"
										},
										{
											"begin": 1057,
											"end": 1077,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1057,
											"end": 1077,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1057,
											"end": 1077,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1057,
											"end": 1077,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1057,
											"end": 1077,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1057,
											"end": 1077,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1057,
											"end": 1077,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1057,
											"end": 1077,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1057,
											"end": 1077,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1057,
											"end": 1077,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1057,
											"end": 1077,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1057,
											"end": 1077,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1057,
											"end": 1077,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1047,
											"end": 1078,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1047,
											"end": 1078,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1047,
											"end": 1078,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1047,
											"end": 1078,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1047,
											"end": 1078,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1047,
											"end": 1078,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 1034,
											"end": 1080,
											"name": "PUSH",
											"source": 3,
											"value": "F8"
										},
										{
											"begin": 1034,
											"end": 1080,
											"name": "SHR",
											"source": 3
										},
										{
											"begin": 1021,
											"end": 1080,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1021,
											"end": 1080,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1095,
											"end": 1114,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 1129,
											"end": 1148,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1177,
											"end": 1180,
											"name": "PUSH",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 1169,
											"end": 1173,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1169,
											"end": 1180,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 1169,
											"end": 1180,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1169,
											"end": 1180,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 1165,
											"end": 2225,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "242"
										},
										{
											"begin": 1165,
											"end": 2225,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1201,
											"end": 1216,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1201,
											"end": 1216,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1201,
											"end": 1216,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1201,
											"end": 1216,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1201,
											"end": 1216,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1201,
											"end": 1216,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1201,
											"end": 1216,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1201,
											"end": 1216,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1201,
											"end": 1216,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 1201,
											"end": 1216,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1201,
											"end": 1216,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1201,
											"end": 1216,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1201,
											"end": 1216,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "312E706E67"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1201,
											"end": 1216,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1201,
											"end": 1216,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1201,
											"end": 1216,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1201,
											"end": 1216,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1201,
											"end": 1216,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1235,
											"end": 1250,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1235,
											"end": 1250,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1235,
											"end": 1250,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1235,
											"end": 1250,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1235,
											"end": 1250,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1235,
											"end": 1250,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1235,
											"end": 1250,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1235,
											"end": 1250,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1235,
											"end": 1250,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 1235,
											"end": 1250,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1235,
											"end": 1250,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1235,
											"end": 1250,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1235,
											"end": 1250,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "23B932B2B7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1235,
											"end": 1250,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1235,
											"end": 1250,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1235,
											"end": 1250,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1235,
											"end": 1250,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1235,
											"end": 1250,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1165,
											"end": 2225,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "260"
										},
										{
											"begin": 1165,
											"end": 2225,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1165,
											"end": 2225,
											"name": "tag",
											"source": 3,
											"value": "242"
										},
										{
											"begin": 1165,
											"end": 2225,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1284,
											"end": 1287,
											"name": "PUSH",
											"source": 3,
											"value": "A0"
										},
										{
											"begin": 1276,
											"end": 1280,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1276,
											"end": 1287,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 1276,
											"end": 1287,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1276,
											"end": 1287,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 1272,
											"end": 2225,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "244"
										},
										{
											"begin": 1272,
											"end": 2225,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1308,
											"end": 1323,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1308,
											"end": 1323,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1308,
											"end": 1323,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1308,
											"end": 1323,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1308,
											"end": 1323,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1308,
											"end": 1323,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1308,
											"end": 1323,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1308,
											"end": 1323,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1308,
											"end": 1323,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 1308,
											"end": 1323,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1308,
											"end": 1323,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1308,
											"end": 1323,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1308,
											"end": 1323,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "322E706E67"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1308,
											"end": 1323,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1308,
											"end": 1323,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1308,
											"end": 1323,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1308,
											"end": 1323,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1308,
											"end": 1323,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1342,
											"end": 1356,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1342,
											"end": 1356,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1342,
											"end": 1356,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1342,
											"end": 1356,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1342,
											"end": 1356,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1342,
											"end": 1356,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1342,
											"end": 1356,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1342,
											"end": 1356,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1342,
											"end": 1356,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1342,
											"end": 1356,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1342,
											"end": 1356,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1342,
											"end": 1356,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1342,
											"end": 1356,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "426C7565"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1342,
											"end": 1356,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1342,
											"end": 1356,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1342,
											"end": 1356,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1342,
											"end": 1356,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1342,
											"end": 1356,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1272,
											"end": 2225,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "260"
										},
										{
											"begin": 1272,
											"end": 2225,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1272,
											"end": 2225,
											"name": "tag",
											"source": 3,
											"value": "244"
										},
										{
											"begin": 1272,
											"end": 2225,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1390,
											"end": 1393,
											"name": "PUSH",
											"source": 3,
											"value": "D2"
										},
										{
											"begin": 1382,
											"end": 1386,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1382,
											"end": 1393,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 1382,
											"end": 1393,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1382,
											"end": 1393,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 1378,
											"end": 2225,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "246"
										},
										{
											"begin": 1378,
											"end": 2225,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1414,
											"end": 1429,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1414,
											"end": 1429,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1414,
											"end": 1429,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1414,
											"end": 1429,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1414,
											"end": 1429,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1414,
											"end": 1429,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1414,
											"end": 1429,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1414,
											"end": 1429,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1414,
											"end": 1429,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 1414,
											"end": 1429,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1414,
											"end": 1429,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1414,
											"end": 1429,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1414,
											"end": 1429,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "332E706E67"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1414,
											"end": 1429,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1414,
											"end": 1429,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1414,
											"end": 1429,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1414,
											"end": 1429,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1414,
											"end": 1429,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1448,
											"end": 1464,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1448,
											"end": 1464,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1448,
											"end": 1464,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1448,
											"end": 1464,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1448,
											"end": 1464,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1448,
											"end": 1464,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1448,
											"end": 1464,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1448,
											"end": 1464,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1448,
											"end": 1464,
											"name": "PUSH",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 1448,
											"end": 1464,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1448,
											"end": 1464,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1448,
											"end": 1464,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1448,
											"end": 1464,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "507572706C65"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1448,
											"end": 1464,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1448,
											"end": 1464,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1448,
											"end": 1464,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1448,
											"end": 1464,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1448,
											"end": 1464,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1378,
											"end": 2225,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "260"
										},
										{
											"begin": 1378,
											"end": 2225,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1378,
											"end": 2225,
											"name": "tag",
											"source": 3,
											"value": "246"
										},
										{
											"begin": 1378,
											"end": 2225,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1498,
											"end": 1501,
											"name": "PUSH",
											"source": 3,
											"value": "F0"
										},
										{
											"begin": 1490,
											"end": 1494,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1490,
											"end": 1501,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 1490,
											"end": 1501,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1490,
											"end": 1501,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 1486,
											"end": 2225,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "248"
										},
										{
											"begin": 1486,
											"end": 2225,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1522,
											"end": 1537,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1522,
											"end": 1537,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1522,
											"end": 1537,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1522,
											"end": 1537,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1522,
											"end": 1537,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1522,
											"end": 1537,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1522,
											"end": 1537,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1522,
											"end": 1537,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1522,
											"end": 1537,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 1522,
											"end": 1537,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1522,
											"end": 1537,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1522,
											"end": 1537,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1522,
											"end": 1537,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "342E706E67"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1522,
											"end": 1537,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1522,
											"end": 1537,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1522,
											"end": 1537,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1522,
											"end": 1537,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1522,
											"end": 1537,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1556,
											"end": 1572,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1556,
											"end": 1572,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1556,
											"end": 1572,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1556,
											"end": 1572,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1556,
											"end": 1572,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1556,
											"end": 1572,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1556,
											"end": 1572,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1556,
											"end": 1572,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1556,
											"end": 1572,
											"name": "PUSH",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 1556,
											"end": 1572,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1556,
											"end": 1572,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1556,
											"end": 1572,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1556,
											"end": 1572,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4F72616E6765"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1556,
											"end": 1572,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1556,
											"end": 1572,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1556,
											"end": 1572,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1556,
											"end": 1572,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1556,
											"end": 1572,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1486,
											"end": 2225,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "260"
										},
										{
											"begin": 1486,
											"end": 2225,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1486,
											"end": 2225,
											"name": "tag",
											"source": 3,
											"value": "248"
										},
										{
											"begin": 1486,
											"end": 2225,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1606,
											"end": 1609,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 1598,
											"end": 1602,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1598,
											"end": 1609,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 1598,
											"end": 1609,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1598,
											"end": 1609,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 1594,
											"end": 2225,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "250"
										},
										{
											"begin": 1594,
											"end": 2225,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1630,
											"end": 1645,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1630,
											"end": 1645,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1630,
											"end": 1645,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1630,
											"end": 1645,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1630,
											"end": 1645,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1630,
											"end": 1645,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1630,
											"end": 1645,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1630,
											"end": 1645,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1630,
											"end": 1645,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 1630,
											"end": 1645,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1630,
											"end": 1645,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1630,
											"end": 1645,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1630,
											"end": 1645,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "352E706E67"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1630,
											"end": 1645,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1630,
											"end": 1645,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1630,
											"end": 1645,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1630,
											"end": 1645,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1630,
											"end": 1645,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1664,
											"end": 1677,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1664,
											"end": 1677,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1664,
											"end": 1677,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1664,
											"end": 1677,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1664,
											"end": 1677,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1664,
											"end": 1677,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1664,
											"end": 1677,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1664,
											"end": 1677,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1664,
											"end": 1677,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 1664,
											"end": 1677,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1664,
											"end": 1677,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1664,
											"end": 1677,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1664,
											"end": 1677,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "149959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "EA"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1664,
											"end": 1677,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1664,
											"end": 1677,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1664,
											"end": 1677,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1664,
											"end": 1677,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1664,
											"end": 1677,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1594,
											"end": 2225,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "260"
										},
										{
											"begin": 1594,
											"end": 2225,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1594,
											"end": 2225,
											"name": "tag",
											"source": 3,
											"value": "250"
										},
										{
											"begin": 1594,
											"end": 2225,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1710,
											"end": 1713,
											"name": "PUSH",
											"source": 3,
											"value": "12C"
										},
										{
											"begin": 1702,
											"end": 1706,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1702,
											"end": 1713,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 1702,
											"end": 1713,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1702,
											"end": 1713,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 1698,
											"end": 2225,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "252"
										},
										{
											"begin": 1698,
											"end": 2225,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1734,
											"end": 1749,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1734,
											"end": 1749,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1734,
											"end": 1749,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1734,
											"end": 1749,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1734,
											"end": 1749,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1734,
											"end": 1749,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1734,
											"end": 1749,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1734,
											"end": 1749,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1734,
											"end": 1749,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 1734,
											"end": 1749,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1734,
											"end": 1749,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1734,
											"end": 1749,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1734,
											"end": 1749,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "362E706E67"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1734,
											"end": 1749,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1734,
											"end": 1749,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1734,
											"end": 1749,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1734,
											"end": 1749,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1734,
											"end": 1749,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1768,
											"end": 1783,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1768,
											"end": 1783,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1768,
											"end": 1783,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1768,
											"end": 1783,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1768,
											"end": 1783,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1768,
											"end": 1783,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1768,
											"end": 1783,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1768,
											"end": 1783,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1768,
											"end": 1783,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 1768,
											"end": 1783,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1768,
											"end": 1783,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1768,
											"end": 1783,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1768,
											"end": 1783,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "5768697465"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1768,
											"end": 1783,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1768,
											"end": 1783,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1768,
											"end": 1783,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1768,
											"end": 1783,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1768,
											"end": 1783,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1698,
											"end": 2225,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "260"
										},
										{
											"begin": 1698,
											"end": 2225,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1698,
											"end": 2225,
											"name": "tag",
											"source": 3,
											"value": "252"
										},
										{
											"begin": 1698,
											"end": 2225,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1816,
											"end": 1819,
											"name": "PUSH",
											"source": 3,
											"value": "168"
										},
										{
											"begin": 1808,
											"end": 1812,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1808,
											"end": 1819,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 1808,
											"end": 1819,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1808,
											"end": 1819,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 1804,
											"end": 2225,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "254"
										},
										{
											"begin": 1804,
											"end": 2225,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1840,
											"end": 1855,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1840,
											"end": 1855,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1840,
											"end": 1855,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1840,
											"end": 1855,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1840,
											"end": 1855,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1840,
											"end": 1855,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1840,
											"end": 1855,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1840,
											"end": 1855,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1840,
											"end": 1855,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 1840,
											"end": 1855,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1840,
											"end": 1855,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1840,
											"end": 1855,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1840,
											"end": 1855,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "372E706E67"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1840,
											"end": 1855,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1840,
											"end": 1855,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1840,
											"end": 1855,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1840,
											"end": 1855,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1840,
											"end": 1855,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1874,
											"end": 1889,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1874,
											"end": 1889,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1874,
											"end": 1889,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1874,
											"end": 1889,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1874,
											"end": 1889,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1874,
											"end": 1889,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1874,
											"end": 1889,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1874,
											"end": 1889,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1874,
											"end": 1889,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 1874,
											"end": 1889,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1874,
											"end": 1889,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1874,
											"end": 1889,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1874,
											"end": 1889,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "426C61636B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1874,
											"end": 1889,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1874,
											"end": 1889,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1874,
											"end": 1889,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1874,
											"end": 1889,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1874,
											"end": 1889,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1804,
											"end": 2225,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "260"
										},
										{
											"begin": 1804,
											"end": 2225,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1804,
											"end": 2225,
											"name": "tag",
											"source": 3,
											"value": "254"
										},
										{
											"begin": 1804,
											"end": 2225,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1922,
											"end": 1925,
											"name": "PUSH",
											"source": 3,
											"value": "19A"
										},
										{
											"begin": 1914,
											"end": 1918,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1914,
											"end": 1925,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 1914,
											"end": 1925,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1914,
											"end": 1925,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 1910,
											"end": 2225,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "256"
										},
										{
											"begin": 1910,
											"end": 2225,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1946,
											"end": 1961,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1946,
											"end": 1961,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1946,
											"end": 1961,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1946,
											"end": 1961,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1946,
											"end": 1961,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1946,
											"end": 1961,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1946,
											"end": 1961,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1946,
											"end": 1961,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1946,
											"end": 1961,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 1946,
											"end": 1961,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1946,
											"end": 1961,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1946,
											"end": 1961,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1946,
											"end": 1961,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "382E706E67"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1946,
											"end": 1961,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1946,
											"end": 1961,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1946,
											"end": 1961,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1946,
											"end": 1961,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1946,
											"end": 1961,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1980,
											"end": 1994,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1980,
											"end": 1994,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1980,
											"end": 1994,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1980,
											"end": 1994,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1980,
											"end": 1994,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1980,
											"end": 1994,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1980,
											"end": 1994,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1980,
											"end": 1994,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1980,
											"end": 1994,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1980,
											"end": 1994,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1980,
											"end": 1994,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1980,
											"end": 1994,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1980,
											"end": 1994,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "50696E6B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1980,
											"end": 1994,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1980,
											"end": 1994,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1980,
											"end": 1994,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1980,
											"end": 1994,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1980,
											"end": 1994,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1910,
											"end": 2225,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "260"
										},
										{
											"begin": 1910,
											"end": 2225,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1910,
											"end": 2225,
											"name": "tag",
											"source": 3,
											"value": "256"
										},
										{
											"begin": 1910,
											"end": 2225,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2027,
											"end": 2030,
											"name": "PUSH",
											"source": 3,
											"value": "1C2"
										},
										{
											"begin": 2019,
											"end": 2023,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2019,
											"end": 2030,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 2019,
											"end": 2030,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2019,
											"end": 2030,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 2015,
											"end": 2225,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "258"
										},
										{
											"begin": 2015,
											"end": 2225,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2051,
											"end": 2066,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2051,
											"end": 2066,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2051,
											"end": 2066,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2051,
											"end": 2066,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2051,
											"end": 2066,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2051,
											"end": 2066,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2051,
											"end": 2066,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2051,
											"end": 2066,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2051,
											"end": 2066,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 2051,
											"end": 2066,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2051,
											"end": 2066,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2051,
											"end": 2066,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2051,
											"end": 2066,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "392E706E67"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2051,
											"end": 2066,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2051,
											"end": 2066,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2051,
											"end": 2066,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2051,
											"end": 2066,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2051,
											"end": 2066,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2085,
											"end": 2101,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2085,
											"end": 2101,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2085,
											"end": 2101,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2085,
											"end": 2101,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2085,
											"end": 2101,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2085,
											"end": 2101,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2085,
											"end": 2101,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2085,
											"end": 2101,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2085,
											"end": 2101,
											"name": "PUSH",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 2085,
											"end": 2101,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2085,
											"end": 2101,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2085,
											"end": 2101,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2085,
											"end": 2101,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "59656C6C6F77"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2085,
											"end": 2101,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2085,
											"end": 2101,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2085,
											"end": 2101,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2085,
											"end": 2101,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2085,
											"end": 2101,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2015,
											"end": 2225,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "260"
										},
										{
											"begin": 2015,
											"end": 2225,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2015,
											"end": 2225,
											"name": "tag",
											"source": 3,
											"value": "258"
										},
										{
											"begin": 2015,
											"end": 2225,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2134,
											"end": 2137,
											"name": "PUSH",
											"source": 3,
											"value": "1FE"
										},
										{
											"begin": 2126,
											"end": 2130,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2126,
											"end": 2137,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 2126,
											"end": 2137,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2126,
											"end": 2137,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 2122,
											"end": 2225,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "260"
										},
										{
											"begin": 2122,
											"end": 2225,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2158,
											"end": 2174,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2158,
											"end": 2174,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2158,
											"end": 2174,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2158,
											"end": 2174,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2158,
											"end": 2174,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2158,
											"end": 2174,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2158,
											"end": 2174,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2158,
											"end": 2174,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2158,
											"end": 2174,
											"name": "PUSH",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 2158,
											"end": 2174,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2158,
											"end": 2174,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2158,
											"end": 2174,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2158,
											"end": 2174,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "31302E706E67"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2158,
											"end": 2174,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2158,
											"end": 2174,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2158,
											"end": 2174,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2158,
											"end": 2174,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2158,
											"end": 2174,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2193,
											"end": 2209,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2193,
											"end": 2209,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2193,
											"end": 2209,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2193,
											"end": 2209,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2193,
											"end": 2209,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2193,
											"end": 2209,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2193,
											"end": 2209,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2193,
											"end": 2209,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2193,
											"end": 2209,
											"name": "PUSH",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 2193,
											"end": 2209,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2193,
											"end": 2209,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2193,
											"end": 2209,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2193,
											"end": 2209,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "159A5BDB195D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2193,
											"end": 2209,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2193,
											"end": 2209,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2193,
											"end": 2209,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2193,
											"end": 2209,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2193,
											"end": 2209,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2122,
											"end": 2225,
											"name": "tag",
											"source": 3,
											"value": "260"
										},
										{
											"begin": 2122,
											"end": 2225,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2255,
											"end": 2281,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2393,
											"end": 2413,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "261"
										},
										{
											"begin": 2410,
											"end": 2412,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 2393,
											"end": 2409,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "236"
										},
										{
											"begin": 2393,
											"end": 2413,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2393,
											"end": 2413,
											"name": "tag",
											"source": 3,
											"value": "261"
										},
										{
											"begin": 2393,
											"end": 2413,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2352,
											"end": 2414,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2352,
											"end": 2414,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2352,
											"end": 2414,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2352,
											"end": 2414,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2352,
											"end": 2414,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "262"
										},
										{
											"begin": 2352,
											"end": 2414,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2352,
											"end": 2414,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2352,
											"end": 2414,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "263"
										},
										{
											"begin": 2352,
											"end": 2414,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2352,
											"end": 2414,
											"name": "tag",
											"source": 3,
											"value": "262"
										},
										{
											"begin": 2352,
											"end": 2414,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2352,
											"end": 2414,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2352,
											"end": 2414,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2352,
											"end": 2414,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2352,
											"end": 2414,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2352,
											"end": 2414,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2352,
											"end": 2414,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2352,
											"end": 2414,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2352,
											"end": 2414,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2352,
											"end": 2414,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2352,
											"end": 2414,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2352,
											"end": 2414,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2352,
											"end": 2414,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2352,
											"end": 2414,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2316,
											"end": 2634,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "264"
										},
										{
											"begin": 2316,
											"end": 2634,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2352,
											"end": 2414,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2316,
											"end": 2634,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2316,
											"end": 2634,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "265"
										},
										{
											"begin": 2316,
											"end": 2634,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2316,
											"end": 2634,
											"name": "tag",
											"source": 3,
											"value": "264"
										},
										{
											"begin": 2316,
											"end": 2634,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2316,
											"end": 2634,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2316,
											"end": 2634,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2316,
											"end": 2634,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2316,
											"end": 2634,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2316,
											"end": 2634,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2316,
											"end": 2634,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2316,
											"end": 2634,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2316,
											"end": 2634,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2316,
											"end": 2634,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2316,
											"end": 2634,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2316,
											"end": 2634,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2316,
											"end": 2634,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2667,
											"end": 2674,
											"name": "PUSH",
											"source": 3,
											"value": "C"
										},
										{
											"begin": 2676,
											"end": 2681,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2653,
											"end": 2682,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2653,
											"end": 2682,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2653,
											"end": 2682,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2653,
											"end": 2682,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2653,
											"end": 2682,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "266"
										},
										{
											"begin": 2653,
											"end": 2682,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2653,
											"end": 2682,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2653,
											"end": 2682,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2653,
											"end": 2682,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "238"
										},
										{
											"begin": 2653,
											"end": 2682,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2653,
											"end": 2682,
											"name": "tag",
											"source": 3,
											"value": "266"
										},
										{
											"begin": 2653,
											"end": 2682,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2653,
											"end": 2682,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2653,
											"end": 2682,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2653,
											"end": 2682,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2653,
											"end": 2682,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2653,
											"end": 2682,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2653,
											"end": 2682,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2653,
											"end": 2682,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2653,
											"end": 2682,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2653,
											"end": 2682,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2653,
											"end": 2682,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2653,
											"end": 2682,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2653,
											"end": 2682,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2653,
											"end": 2682,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2284,
											"end": 2697,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "267"
										},
										{
											"begin": 2284,
											"end": 2697,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2284,
											"end": 2697,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2653,
											"end": 2682,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2284,
											"end": 2697,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2284,
											"end": 2697,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "268"
										},
										{
											"begin": 2284,
											"end": 2697,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2284,
											"end": 2697,
											"name": "tag",
											"source": 3,
											"value": "267"
										},
										{
											"begin": 2284,
											"end": 2697,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2284,
											"end": 2697,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2284,
											"end": 2697,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2284,
											"end": 2697,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2284,
											"end": 2697,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2284,
											"end": 2697,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2284,
											"end": 2697,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2284,
											"end": 2697,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2284,
											"end": 2697,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2284,
											"end": 2697,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2284,
											"end": 2697,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2284,
											"end": 2697,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2284,
											"end": 2697,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2255,
											"end": 2697,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2255,
											"end": 2697,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2712,
											"end": 2739,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2842,
											"end": 2847,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2742,
											"end": 2862,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2742,
											"end": 2862,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2742,
											"end": 2862,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2742,
											"end": 2862,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2742,
											"end": 2862,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "269"
										},
										{
											"begin": 2742,
											"end": 2862,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2742,
											"end": 2862,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2742,
											"end": 2862,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "270"
										},
										{
											"begin": 2742,
											"end": 2862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2742,
											"end": 2862,
											"name": "tag",
											"source": 3,
											"value": "269"
										},
										{
											"begin": 2742,
											"end": 2862,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2742,
											"end": 2862,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2742,
											"end": 2862,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2742,
											"end": 2862,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2742,
											"end": 2862,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2742,
											"end": 2862,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2742,
											"end": 2862,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2742,
											"end": 2862,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2742,
											"end": 2862,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2742,
											"end": 2862,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2877,
											"end": 2914,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2877,
											"end": 2914,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2877,
											"end": 2914,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2877,
											"end": 2914,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2877,
											"end": 2914,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2877,
											"end": 2914,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2877,
											"end": 2914,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2877,
											"end": 2914,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "227D5D7D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2742,
											"end": 2862,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2877,
											"end": 2914,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2877,
											"end": 2914,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2877,
											"end": 2914,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2877,
											"end": 2914,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2877,
											"end": 2914,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2877,
											"end": 2914,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2877,
											"end": 2914,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3083,
											"end": 3125,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3083,
											"end": 3125,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2742,
											"end": 2862,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2742,
											"end": 2862,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3083,
											"end": 3125,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "271"
										},
										{
											"begin": 3083,
											"end": 3125,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3097,
											"end": 3109,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3097,
											"end": 3109,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2742,
											"end": 2862,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 2742,
											"end": 2862,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3083,
											"end": 3125,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3083,
											"end": 3125,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "268"
										},
										{
											"begin": 3083,
											"end": 3125,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3083,
											"end": 3125,
											"name": "tag",
											"source": 3,
											"value": "271"
										},
										{
											"begin": 3083,
											"end": 3125,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3083,
											"end": 3125,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3083,
											"end": 3125,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3083,
											"end": 3125,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3083,
											"end": 3125,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3083,
											"end": 3125,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3083,
											"end": 3125,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3083,
											"end": 3125,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3083,
											"end": 3125,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3083,
											"end": 3125,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3083,
											"end": 3125,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3083,
											"end": 3125,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3083,
											"end": 3125,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3083,
											"end": 3125,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3043,
											"end": 3189,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "272"
										},
										{
											"begin": 3043,
											"end": 3189,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3152,
											"end": 3166,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3152,
											"end": 3166,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3083,
											"end": 3125,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3043,
											"end": 3189,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3043,
											"end": 3189,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "268"
										},
										{
											"begin": 3043,
											"end": 3189,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3043,
											"end": 3189,
											"name": "tag",
											"source": 3,
											"value": "272"
										},
										{
											"begin": 3043,
											"end": 3189,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3043,
											"end": 3189,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3043,
											"end": 3189,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3043,
											"end": 3189,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3043,
											"end": 3189,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3043,
											"end": 3189,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3043,
											"end": 3189,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3043,
											"end": 3189,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3043,
											"end": 3189,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3043,
											"end": 3189,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3043,
											"end": 3189,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3043,
											"end": 3189,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3043,
											"end": 3189,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3043,
											"end": 3189,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2955,
											"end": 3208,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "273"
										},
										{
											"begin": 2955,
											"end": 3208,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3043,
											"end": 3189,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2955,
											"end": 3208,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2955,
											"end": 3208,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "274"
										},
										{
											"begin": 2955,
											"end": 3208,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2955,
											"end": 3208,
											"name": "tag",
											"source": 3,
											"value": "273"
										},
										{
											"begin": 2955,
											"end": 3208,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2955,
											"end": 3208,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2955,
											"end": 3208,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2955,
											"end": 3208,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2955,
											"end": 3208,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2955,
											"end": 3208,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2955,
											"end": 3208,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2955,
											"end": 3208,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2955,
											"end": 3208,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2955,
											"end": 3208,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2955,
											"end": 3208,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2955,
											"end": 3208,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2955,
											"end": 3208,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2931,
											"end": 3208,
											"name": "SWAP7",
											"source": 3
										},
										{
											"begin": 2931,
											"end": 3208,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2931,
											"end": 3208,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2931,
											"end": 3208,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2931,
											"end": 3208,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2931,
											"end": 3208,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2931,
											"end": 3208,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2931,
											"end": 3208,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 795,
											"end": 3227,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 795,
											"end": 3227,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 795,
											"end": 3227,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 795,
											"end": 3227,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 211,
											"end": 237,
											"name": "tag",
											"source": 3,
											"value": "119"
										},
										{
											"begin": 211,
											"end": 237,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 211,
											"end": 237,
											"name": "PUSH",
											"source": 3,
											"value": "D"
										},
										{
											"begin": 211,
											"end": 237,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 211,
											"end": 237,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 211,
											"end": 237,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "139"
										},
										{
											"begin": 211,
											"end": 237,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 211,
											"end": 237,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "140"
										},
										{
											"begin": 211,
											"end": 237,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 515,
											"end": 621,
											"name": "tag",
											"source": 3,
											"value": "128"
										},
										{
											"begin": 515,
											"end": 621,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 325,
											"end": 330,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 325,
											"end": 330,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 325,
											"end": 330,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 311,
											"end": 321,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 311,
											"end": 330,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 307,
											"end": 353,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "281"
										},
										{
											"begin": 307,
											"end": 353,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 339,
											"end": 353,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 339,
											"end": 353,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "82B429"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 339,
											"end": 353,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 339,
											"end": 353,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 339,
											"end": 353,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 339,
											"end": 353,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 339,
											"end": 353,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 339,
											"end": 353,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 339,
											"end": 353,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 339,
											"end": 353,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 339,
											"end": 353,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 339,
											"end": 353,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 339,
											"end": 353,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 307,
											"end": 353,
											"name": "tag",
											"source": 4,
											"value": "281"
										},
										{
											"begin": 307,
											"end": 353,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 589,
											"end": 601,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "D"
										},
										{
											"begin": 589,
											"end": 613,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "156"
										},
										{
											"begin": 604,
											"end": 613,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 589,
											"end": 601,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 589,
											"end": 613,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "157"
										},
										{
											"begin": 589,
											"end": 613,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 183,
											"end": 204,
											"name": "tag",
											"source": 3,
											"value": "134"
										},
										{
											"begin": 183,
											"end": 204,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 183,
											"end": 204,
											"name": "PUSH",
											"source": 3,
											"value": "C"
										},
										{
											"begin": 183,
											"end": 204,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 183,
											"end": 204,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 183,
											"end": 204,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "139"
										},
										{
											"begin": 183,
											"end": 204,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 183,
											"end": 204,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "140"
										},
										{
											"begin": 183,
											"end": 204,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 570,
											"end": 789,
											"name": "tag",
											"source": 4,
											"value": "138"
										},
										{
											"begin": 570,
											"end": 789,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 325,
											"end": 330,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 325,
											"end": 330,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 325,
											"end": 330,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 311,
											"end": 321,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 311,
											"end": 330,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 307,
											"end": 353,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "290"
										},
										{
											"begin": 307,
											"end": 353,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 339,
											"end": 353,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 339,
											"end": 353,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "82B429"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 339,
											"end": 353,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 339,
											"end": 353,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 339,
											"end": 353,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 339,
											"end": 353,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 339,
											"end": 353,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 339,
											"end": 353,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 339,
											"end": 353,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 339,
											"end": 353,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 339,
											"end": 353,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 339,
											"end": 353,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 339,
											"end": 353,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 307,
											"end": 353,
											"name": "tag",
											"source": 4,
											"value": "290"
										},
										{
											"begin": 307,
											"end": 353,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 653,
											"end": 673,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 653,
											"end": 673,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 649,
											"end": 696,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "292"
										},
										{
											"begin": 649,
											"end": 696,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 682,
											"end": 696,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 682,
											"end": 696,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "49E27CFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 682,
											"end": 696,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 682,
											"end": 696,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 682,
											"end": 696,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 682,
											"end": 696,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 682,
											"end": 696,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 682,
											"end": 696,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 682,
											"end": 696,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 682,
											"end": 696,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 682,
											"end": 696,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 682,
											"end": 696,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 682,
											"end": 696,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 649,
											"end": 696,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "292"
										},
										{
											"begin": 649,
											"end": 696,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 709,
											"end": 714,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 709,
											"end": 723,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 709,
											"end": 723,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 709,
											"end": 723,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 709,
											"end": 723,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 709,
											"end": 723,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 709,
											"end": 723,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 709,
											"end": 723,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 709,
											"end": 723,
											"modifierDepth": 1,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 709,
											"end": 723,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 709,
											"end": 723,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 741,
											"end": 781,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 741,
											"end": 781,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 709,
											"end": 723,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 709,
											"end": 723,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 762,
											"end": 772,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 762,
											"end": 772,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 741,
											"end": 781,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 741,
											"end": 781,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 709,
											"end": 714,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 741,
											"end": 781,
											"modifierDepth": 1,
											"name": "LOG3",
											"source": 4
										},
										{
											"begin": 570,
											"end": 789,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 570,
											"end": 789,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10540,
											"end": 10632,
											"name": "tag",
											"source": 4,
											"value": "166"
										},
										{
											"begin": 10540,
											"end": 10632,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10583,
											"end": 10590,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10610,
											"end": 10624,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "294"
										},
										{
											"begin": 10616,
											"end": 10624,
											"name": "PUSHIMMUTABLE",
											"source": 4,
											"value": "1909"
										},
										{
											"begin": 10610,
											"end": 10612,
											"name": "PUSH",
											"source": 4,
											"value": "A"
										},
										{
											"begin": 10610,
											"end": 10624,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "295"
										},
										{
											"begin": 10610,
											"end": 10624,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10610,
											"end": 10624,
											"name": "tag",
											"source": 4,
											"value": "294"
										},
										{
											"begin": 10610,
											"end": 10624,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10603,
											"end": 10624,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10603,
											"end": 10624,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10540,
											"end": 10632,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10540,
											"end": 10632,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9408,
											"end": 10501,
											"name": "tag",
											"source": 4,
											"value": "190"
										},
										{
											"begin": 9408,
											"end": 10501,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9521,
											"end": 9525,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9538,
											"end": 9550,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9553,
											"end": 9563,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "297"
										},
										{
											"begin": 9553,
											"end": 9561,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "166"
										},
										{
											"begin": 9553,
											"end": 9563,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9553,
											"end": 9563,
											"name": "tag",
											"source": 4,
											"value": "297"
										},
										{
											"begin": 9553,
											"end": 9563,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9604,
											"end": 9619,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9604,
											"end": 9619,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 9604,
											"end": 9619,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9574,
											"end": 9601,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9604,
											"end": 9619,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9604,
											"end": 9619,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9604,
											"end": 9619,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9604,
											"end": 9613,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 9604,
											"end": 9619,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9604,
											"end": 9619,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9604,
											"end": 9619,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9604,
											"end": 9619,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9604,
											"end": 9619,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9604,
											"end": 9619,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 9604,
											"end": 9619,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9604,
											"end": 9619,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 9662,
											"end": 9675,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 9662,
											"end": 9675,
											"name": "DUP11",
											"source": 4
										},
										{
											"begin": 9662,
											"end": 9675,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9662,
											"end": 9675,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9662,
											"end": 9675,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9662,
											"end": 9675,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9662,
											"end": 9675,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9662,
											"end": 9675,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 9662,
											"end": 9675,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 9688,
											"end": 9703,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 9688,
											"end": 9703,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9688,
											"end": 9703,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9538,
											"end": 9563,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 9538,
											"end": 9563,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9604,
											"end": 9619,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9604,
											"end": 9619,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 9662,
											"end": 9675,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9662,
											"end": 9675,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9707,
											"end": 9713,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 9707,
											"end": 9713,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9604,
											"end": 9619,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9688,
											"end": 9713,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "298"
										},
										{
											"begin": 9707,
											"end": 9713,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9604,
											"end": 9619,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 9688,
											"end": 9713,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "168"
										},
										{
											"begin": 9688,
											"end": 9713,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9688,
											"end": 9713,
											"name": "tag",
											"source": 4,
											"value": "298"
										},
										{
											"begin": 9688,
											"end": 9713,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9688,
											"end": 9713,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9688,
											"end": 9713,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9688,
											"end": 9713,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9751,
											"end": 9764,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9751,
											"end": 9764,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 9751,
											"end": 9764,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9751,
											"end": 9764,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9751,
											"end": 9764,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9751,
											"end": 9764,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9751,
											"end": 9764,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9751,
											"end": 9760,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 9751,
											"end": 9764,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9751,
											"end": 9764,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9751,
											"end": 9764,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9751,
											"end": 9764,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9751,
											"end": 9764,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9751,
											"end": 9764,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9751,
											"end": 9764,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9751,
											"end": 9764,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 9751,
											"end": 9774,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9751,
											"end": 9774,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 9751,
											"end": 9774,
											"name": "DUP11",
											"source": 4
										},
										{
											"begin": 9751,
											"end": 9774,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9751,
											"end": 9774,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9751,
											"end": 9774,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 9859,
											"end": 9874,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 9859,
											"end": 9874,
											"name": "DUP11",
											"source": 4
										},
										{
											"begin": 9859,
											"end": 9874,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9859,
											"end": 9874,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9859,
											"end": 9874,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9859,
											"end": 9868,
											"name": "PUSH",
											"source": 4,
											"value": "B"
										},
										{
											"begin": 9859,
											"end": 9874,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9859,
											"end": 9874,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9859,
											"end": 9874,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 9859,
											"end": 9874,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 9859,
											"end": 9874,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 9859,
											"end": 9874,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9854,
											"end": 10105,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "299"
										},
										{
											"begin": 9854,
											"end": 10105,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9965,
											"end": 9980,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 9965,
											"end": 9980,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9891,
											"end": 9913,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9965,
											"end": 9980,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9965,
											"end": 9980,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9965,
											"end": 9980,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9965,
											"end": 9974,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 9965,
											"end": 9980,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9965,
											"end": 9980,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9965,
											"end": 9980,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9965,
											"end": 9980,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9965,
											"end": 9980,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 9965,
											"end": 9980,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 9965,
											"end": 9987,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "300"
										},
										{
											"begin": 9965,
											"end": 9987,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9983,
											"end": 9987,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 9983,
											"end": 9987,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9965,
											"end": 9987,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "301"
										},
										{
											"begin": 9965,
											"end": 9987,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9965,
											"end": 9987,
											"name": "tag",
											"source": 4,
											"value": "300"
										},
										{
											"begin": 9965,
											"end": 9987,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9917,
											"end": 9943,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "302"
										},
										{
											"begin": 9939,
											"end": 9943,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 9917,
											"end": 9936,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 9917,
											"end": 9943,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "301"
										},
										{
											"begin": 9917,
											"end": 9943,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9917,
											"end": 9943,
											"name": "tag",
											"source": 4,
											"value": "302"
										},
										{
											"begin": 9917,
											"end": 9943,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9916,
											"end": 9988,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "303"
										},
										{
											"begin": 9916,
											"end": 9988,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9916,
											"end": 9988,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9916,
											"end": 9988,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "168"
										},
										{
											"begin": 9916,
											"end": 9988,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9916,
											"end": 9988,
											"name": "tag",
											"source": 4,
											"value": "303"
										},
										{
											"begin": 9916,
											"end": 9988,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9891,
											"end": 9988,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9891,
											"end": 9988,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10008,
											"end": 10017,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10003,
											"end": 10094,
											"name": "tag",
											"source": 4,
											"value": "304"
										},
										{
											"begin": 10003,
											"end": 10094,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10027,
											"end": 10041,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10023,
											"end": 10024,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10023,
											"end": 10041,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 10003,
											"end": 10094,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 10003,
											"end": 10094,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "305"
										},
										{
											"begin": 10003,
											"end": 10094,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 10067,
											"end": 10078,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "307"
										},
										{
											"begin": 10073,
											"end": 10077,
											"name": "DUP10",
											"source": 4
										},
										{
											"begin": 10067,
											"end": 10072,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "308"
										},
										{
											"begin": 10067,
											"end": 10078,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10067,
											"end": 10078,
											"name": "tag",
											"source": 4,
											"value": "307"
										},
										{
											"begin": 10067,
											"end": 10078,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10043,
											"end": 10046,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 10043,
											"end": 10046,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10003,
											"end": 10094,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "304"
										},
										{
											"begin": 10003,
											"end": 10094,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10003,
											"end": 10094,
											"name": "tag",
											"source": 4,
											"value": "305"
										},
										{
											"begin": 10003,
											"end": 10094,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10003,
											"end": 10094,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9876,
											"end": 10105,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9854,
											"end": 10105,
											"name": "tag",
											"source": 4,
											"value": "299"
										},
										{
											"begin": 9854,
											"end": 10105,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10181,
											"end": 10194,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 10181,
											"end": 10194,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10181,
											"end": 10194,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10181,
											"end": 10194,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10181,
											"end": 10194,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10181,
											"end": 10194,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10181,
											"end": 10190,
											"name": "PUSH",
											"source": 4,
											"value": "B"
										},
										{
											"begin": 10181,
											"end": 10194,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 10181,
											"end": 10194,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10181,
											"end": 10194,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10181,
											"end": 10194,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10181,
											"end": 10194,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 10181,
											"end": 10194,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 10181,
											"end": 10194,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 10181,
											"end": 10194,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10176,
											"end": 10423,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "309"
										},
										{
											"begin": 10176,
											"end": 10423,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 10211,
											"end": 10233,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10279,
											"end": 10307,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "310"
										},
										{
											"begin": 10303,
											"end": 10307,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 10279,
											"end": 10300,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 10279,
											"end": 10307,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "301"
										},
										{
											"begin": 10279,
											"end": 10307,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10279,
											"end": 10307,
											"name": "tag",
											"source": 4,
											"value": "310"
										},
										{
											"begin": 10279,
											"end": 10307,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10237,
											"end": 10250,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 10237,
											"end": 10250,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10237,
											"end": 10250,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10237,
											"end": 10250,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10237,
											"end": 10250,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10237,
											"end": 10250,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10237,
											"end": 10246,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 10237,
											"end": 10250,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 10237,
											"end": 10250,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10237,
											"end": 10250,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10237,
											"end": 10250,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10237,
											"end": 10250,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 10237,
											"end": 10250,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 10237,
											"end": 10257,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "311"
										},
										{
											"begin": 10237,
											"end": 10257,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10253,
											"end": 10257,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 10253,
											"end": 10257,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10237,
											"end": 10257,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "301"
										},
										{
											"begin": 10237,
											"end": 10257,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10237,
											"end": 10257,
											"name": "tag",
											"source": 4,
											"value": "311"
										},
										{
											"begin": 10237,
											"end": 10257,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10236,
											"end": 10308,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "312"
										},
										{
											"begin": 10236,
											"end": 10308,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10236,
											"end": 10308,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10236,
											"end": 10308,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "168"
										},
										{
											"begin": 10236,
											"end": 10308,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10236,
											"end": 10308,
											"name": "tag",
											"source": 4,
											"value": "312"
										},
										{
											"begin": 10236,
											"end": 10308,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10211,
											"end": 10308,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10211,
											"end": 10308,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10328,
											"end": 10337,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10323,
											"end": 10412,
											"name": "tag",
											"source": 4,
											"value": "313"
										},
										{
											"begin": 10323,
											"end": 10412,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10347,
											"end": 10361,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10343,
											"end": 10344,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10343,
											"end": 10361,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 10323,
											"end": 10412,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 10323,
											"end": 10412,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "314"
										},
										{
											"begin": 10323,
											"end": 10412,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 10387,
											"end": 10396,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "316"
										},
										{
											"begin": 10393,
											"end": 10395,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 10387,
											"end": 10392,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "317"
										},
										{
											"begin": 10387,
											"end": 10396,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10387,
											"end": 10396,
											"name": "tag",
											"source": 4,
											"value": "316"
										},
										{
											"begin": 10387,
											"end": 10396,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10363,
											"end": 10366,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 10363,
											"end": 10366,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10323,
											"end": 10412,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "313"
										},
										{
											"begin": 10323,
											"end": 10412,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10323,
											"end": 10412,
											"name": "tag",
											"source": 4,
											"value": "314"
										},
										{
											"begin": 10323,
											"end": 10412,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10323,
											"end": 10412,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10196,
											"end": 10423,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10176,
											"end": 10423,
											"name": "tag",
											"source": 4,
											"value": "309"
										},
										{
											"begin": 10176,
											"end": 10423,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10460,
											"end": 10462,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10440,
											"end": 10471,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10454,
											"end": 10458,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10440,
											"end": 10471,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10440,
											"end": 10471,
											"name": "PUSH",
											"source": 4,
											"value": "E59FDD36D0D223C0C7D996DB7AD796880F45E1936CB0BB7AC102E7082E031487"
										},
										{
											"begin": 10464,
											"end": 10470,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 10440,
											"end": 10471,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10440,
											"end": 10471,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 10440,
											"end": 10471,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "318"
										},
										{
											"begin": 10440,
											"end": 10471,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1838,
											"end": 1863,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1838,
											"end": 1863,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1826,
											"end": 1828,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1811,
											"end": 1829,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1811,
											"end": 1829,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1692,
											"end": 1869,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10440,
											"end": 10471,
											"name": "tag",
											"source": 4,
											"value": "318"
										},
										{
											"begin": 10440,
											"end": 10471,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10440,
											"end": 10471,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10440,
											"end": 10471,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 10440,
											"end": 10471,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10440,
											"end": 10471,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10440,
											"end": 10471,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 10440,
											"end": 10471,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10440,
											"end": 10471,
											"name": "LOG3",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10489,
											"end": 10493,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 10489,
											"end": 10493,
											"name": "SWAP7",
											"source": 4
										},
										{
											"begin": 9408,
											"end": 10501,
											"name": "SWAP6",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9408,
											"end": 10501,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11503,
											"end": 11663,
											"name": "tag",
											"source": 4,
											"value": "208"
										},
										{
											"begin": 11503,
											"end": 11663,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11616,
											"end": 11620,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 11616,
											"end": 11628,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "320"
										},
										{
											"begin": 11623,
											"end": 11628,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 11616,
											"end": 11620,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 11616,
											"end": 11628,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "157"
										},
										{
											"begin": 11616,
											"end": 11628,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11616,
											"end": 11628,
											"name": "tag",
											"source": 4,
											"value": "320"
										},
										{
											"begin": 11616,
											"end": 11628,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11639,
											"end": 11645,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 11639,
											"end": 11655,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "186"
										},
										{
											"begin": 11648,
											"end": 11655,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 11639,
											"end": 11645,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 11639,
											"end": 11655,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "157"
										},
										{
											"begin": 11639,
											"end": 11655,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 637,
											"end": 1335,
											"name": "tag",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 637,
											"end": 1335,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 693,
											"end": 706,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 742,
											"end": 756,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 759,
											"end": 776,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "323"
										},
										{
											"begin": 770,
											"end": 775,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 759,
											"end": 769,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "324"
										},
										{
											"begin": 759,
											"end": 776,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 759,
											"end": 776,
											"name": "tag",
											"source": 0,
											"value": "323"
										},
										{
											"begin": 759,
											"end": 776,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 779,
											"end": 780,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 759,
											"end": 780,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 742,
											"end": 780,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 742,
											"end": 780,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 794,
											"end": 814,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 828,
											"end": 834,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 817,
											"end": 835,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "326"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "326"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "327"
										},
										{
											"begin": 817,
											"end": 835,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 817,
											"end": 835,
											"name": "tag",
											"source": 0,
											"value": "326"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 817,
											"end": 835,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 817,
											"end": 835,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 817,
											"end": 835,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "328"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 817,
											"end": 835,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 817,
											"end": 835,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 817,
											"end": 835,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 817,
											"end": 835,
											"name": "tag",
											"source": 0,
											"value": "328"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 794,
											"end": 835,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 955,
											"end": 983,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 955,
											"end": 983,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 955,
											"end": 983,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 971,
											"end": 973,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 955,
											"end": 983,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "tag",
											"source": 0,
											"value": "329"
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "181899199A1A9B1B9C1CB0B131B232B3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "81"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1175,
											"end": 1177,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 1164,
											"end": 1178,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 1164,
											"end": 1178,
											"name": "MOD",
											"source": 0
										},
										{
											"begin": 1159,
											"end": 1191,
											"name": "BYTE",
											"source": 0
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1146,
											"end": 1192,
											"name": "MSTORE8",
											"source": 0
										},
										{
											"begin": 1236,
											"end": 1238,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1256,
											"end": 1277,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "329"
										},
										{
											"begin": 1256,
											"end": 1277,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1312,
											"end": 1318,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 637,
											"end": 1335,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 637,
											"end": 1335,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11122,
											"end": 11495,
											"name": "tag",
											"source": 4,
											"value": "308"
										},
										{
											"begin": 11122,
											"end": 11495,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11183,
											"end": 11201,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11183,
											"end": 11201,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 11179,
											"end": 11252,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "336"
										},
										{
											"begin": 11179,
											"end": 11252,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 11225,
											"end": 11240,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 11225,
											"end": 11240,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6EDAEF2F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11225,
											"end": 11240,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11225,
											"end": 11240,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 11225,
											"end": 11240,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 11225,
											"end": 11240,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11225,
											"end": 11240,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 11225,
											"end": 11240,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 11225,
											"end": 11240,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 11225,
											"end": 11240,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 11225,
											"end": 11240,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 11225,
											"end": 11240,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11225,
											"end": 11240,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 11179,
											"end": 11252,
											"name": "tag",
											"source": 4,
											"value": "336"
										},
										{
											"begin": 11179,
											"end": 11252,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11277,
											"end": 11289,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11277,
											"end": 11289,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 11264,
											"end": 11274,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11277,
											"end": 11289,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11277,
											"end": 11289,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11277,
											"end": 11289,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 11277,
											"end": 11283,
											"name": "PUSH",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 11277,
											"end": 11289,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 11277,
											"end": 11289,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 11277,
											"end": 11289,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 11277,
											"end": 11289,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11277,
											"end": 11289,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 11290,
											"end": 11309,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 11290,
											"end": 11309,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 11290,
											"end": 11313,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "337"
										},
										{
											"begin": 11290,
											"end": 11313,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11312,
											"end": 11313,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 11312,
											"end": 11313,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11290,
											"end": 11313,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "168"
										},
										{
											"begin": 11290,
											"end": 11313,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11290,
											"end": 11313,
											"name": "tag",
											"source": 4,
											"value": "337"
										},
										{
											"begin": 11290,
											"end": 11313,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11277,
											"end": 11314,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11277,
											"end": 11314,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 11277,
											"end": 11314,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11277,
											"end": 11314,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 11277,
											"end": 11314,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "339"
										},
										{
											"begin": 11277,
											"end": 11314,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 11277,
											"end": 11314,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "339"
										},
										{
											"begin": 11277,
											"end": 11314,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "173"
										},
										{
											"begin": 11277,
											"end": 11314,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11277,
											"end": 11314,
											"name": "tag",
											"source": 4,
											"value": "339"
										},
										{
											"begin": 11277,
											"end": 11314,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11277,
											"end": 11314,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11277,
											"end": 11314,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11277,
											"end": 11314,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 11277,
											"end": 11314,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 11277,
											"end": 11314,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11277,
											"end": 11314,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 11277,
											"end": 11314,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11277,
											"end": 11314,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 11264,
											"end": 11314,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11264,
											"end": 11314,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11325,
											"end": 11331,
											"name": "PUSH",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 11325,
											"end": 11337,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11332,
											"end": 11336,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11325,
											"end": 11337,
											"name": "AND",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11325,
											"end": 11337,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 11325,
											"end": 11337,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11325,
											"end": 11337,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 11325,
											"end": 11337,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 11325,
											"end": 11337,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11325,
											"end": 11337,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11325,
											"end": 11337,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11325,
											"end": 11337,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 11325,
											"end": 11337,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 11325,
											"end": 11337,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11325,
											"end": 11337,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11325,
											"end": 11337,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 11325,
											"end": 11343,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 11325,
											"end": 11343,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 11325,
											"end": 11343,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 11325,
											"end": 11343,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "342"
										},
										{
											"begin": 11325,
											"end": 11343,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 11325,
											"end": 11343,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "342"
										},
										{
											"begin": 11325,
											"end": 11343,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "180"
										},
										{
											"begin": 11325,
											"end": 11343,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11325,
											"end": 11343,
											"name": "tag",
											"source": 4,
											"value": "342"
										},
										{
											"begin": 11325,
											"end": 11343,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11325,
											"end": 11343,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11325,
											"end": 11343,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 11325,
											"end": 11343,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11325,
											"end": 11343,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 11325,
											"end": 11343,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 11325,
											"end": 11343,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 11325,
											"end": 11343,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 11325,
											"end": 11343,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 11325,
											"end": 11343,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 11325,
											"end": 11343,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 11325,
											"end": 11343,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11325,
											"end": 11343,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11325,
											"end": 11343,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11325,
											"end": 11343,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 11325,
											"end": 11343,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11325,
											"end": 11343,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 11325,
											"end": 11343,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11325,
											"end": 11343,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 11325,
											"end": 11343,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11325,
											"end": 11343,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11325,
											"end": 11343,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 11325,
											"end": 11343,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 11361,
											"end": 11376,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 11361,
											"end": 11376,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 11361,
											"end": 11376,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 11361,
											"end": 11372,
											"name": "PUSH",
											"source": 4,
											"value": "A"
										},
										{
											"begin": 11361,
											"end": 11376,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11361,
											"end": 11376,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 11361,
											"end": 11376,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 11361,
											"end": 11376,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 11361,
											"end": 11376,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 11361,
											"end": 11376,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 11354,
											"end": 11376,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 11354,
											"end": 11376,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11354,
											"end": 11376,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 11394,
											"end": 11402,
											"name": "PUSH",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 11394,
											"end": 11406,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 11394,
											"end": 11406,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 11394,
											"end": 11406,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 11394,
											"end": 11406,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 11394,
											"end": 11406,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 11387,
											"end": 11406,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 11387,
											"end": 11406,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 11387,
											"end": 11406,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11387,
											"end": 11406,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11387,
											"end": 11406,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 11387,
											"end": 11406,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11387,
											"end": 11406,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 11387,
											"end": 11406,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 11424,
											"end": 11435,
											"name": "PUSH",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 11424,
											"end": 11439,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11424,
											"end": 11439,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 11424,
											"end": 11439,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 11424,
											"end": 11439,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 11424,
											"end": 11439,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 11424,
											"end": 11439,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 11417,
											"end": 11439,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 11417,
											"end": 11439,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 11417,
											"end": 11439,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11417,
											"end": 11439,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 11417,
											"end": 11439,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 11417,
											"end": 11439,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11417,
											"end": 11439,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 11417,
											"end": 11439,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 11457,
											"end": 11487,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 11373,
											"end": 11375,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 11373,
											"end": 11375,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 11325,
											"end": 11343,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11457,
											"end": 11487,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 11457,
											"end": 11487,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 11457,
											"end": 11487,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11457,
											"end": 11487,
											"name": "PUSH",
											"source": 4,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 11457,
											"end": 11487,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11325,
											"end": 11343,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 11325,
											"end": 11343,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11457,
											"end": 11487,
											"name": "LOG4",
											"source": 4
										},
										{
											"begin": 11168,
											"end": 11495,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11122,
											"end": 11495,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11122,
											"end": 11495,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10640,
											"end": 11114,
											"name": "tag",
											"source": 4,
											"value": "317"
										},
										{
											"begin": 10640,
											"end": 11114,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10699,
											"end": 10715,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10699,
											"end": 10715,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10695,
											"end": 10769,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "345"
										},
										{
											"begin": 10695,
											"end": 10769,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 10739,
											"end": 10757,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10739,
											"end": 10757,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E469669"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10739,
											"end": 10757,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10739,
											"end": 10757,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10739,
											"end": 10757,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 10739,
											"end": 10757,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10739,
											"end": 10757,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10739,
											"end": 10757,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 10739,
											"end": 10757,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10739,
											"end": 10757,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10739,
											"end": 10757,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 10739,
											"end": 10757,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10739,
											"end": 10757,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 10695,
											"end": 10769,
											"name": "tag",
											"source": 4,
											"value": "345"
										},
										{
											"begin": 10695,
											"end": 10769,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10806,
											"end": 10812,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 10806,
											"end": 10814,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10806,
											"end": 10814,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 10806,
											"end": 10814,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 10806,
											"end": 10814,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10806,
											"end": 10814,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10806,
											"end": 10814,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10806,
											"end": 10814,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10806,
											"end": 10814,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 10806,
											"end": 10812,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10874,
											"end": 10886,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10874,
											"end": 10886,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10874,
											"end": 10886,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10874,
											"end": 10882,
											"name": "PUSH",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 10874,
											"end": 10886,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 10874,
											"end": 10886,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10874,
											"end": 10886,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10874,
											"end": 10886,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10874,
											"end": 10886,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 10874,
											"end": 10886,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10874,
											"end": 10886,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10874,
											"end": 10900,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 10870,
											"end": 10951,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "346"
										},
										{
											"begin": 10870,
											"end": 10951,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 10924,
											"end": 10939,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10924,
											"end": 10939,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "119B4FD3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10924,
											"end": 10939,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10924,
											"end": 10939,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10924,
											"end": 10939,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 10924,
											"end": 10939,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10924,
											"end": 10939,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10924,
											"end": 10939,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 10924,
											"end": 10939,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10924,
											"end": 10939,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10924,
											"end": 10939,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 10924,
											"end": 10939,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10924,
											"end": 10939,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 10870,
											"end": 10951,
											"name": "tag",
											"source": 4,
											"value": "346"
										},
										{
											"begin": 10870,
											"end": 10951,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10963,
											"end": 10975,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10963,
											"end": 10975,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10963,
											"end": 10975,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10963,
											"end": 10975,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10963,
											"end": 10971,
											"name": "PUSH",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 10963,
											"end": 10975,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 10963,
											"end": 10975,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10963,
											"end": 10975,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10963,
											"end": 10975,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10963,
											"end": 10975,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10963,
											"end": 10975,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10963,
											"end": 10975,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 10963,
											"end": 10975,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 10963,
											"end": 10980,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10963,
											"end": 10980,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 10963,
											"end": 10980,
											"name": "AND",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10963,
											"end": 10980,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 10963,
											"end": 10980,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10963,
											"end": 10980,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10963,
											"end": 10980,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10963,
											"end": 10980,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 10963,
											"end": 10980,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10963,
											"end": 10980,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10963,
											"end": 10980,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 10991,
											"end": 11001,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10991,
											"end": 11001,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 10991,
											"end": 11001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10991,
											"end": 10997,
											"name": "PUSH",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 10991,
											"end": 11001,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 10991,
											"end": 11001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10991,
											"end": 11001,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10991,
											"end": 11001,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 10991,
											"end": 11001,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 10991,
											"end": 11010,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10991,
											"end": 11010,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 10991,
											"end": 11010,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10991,
											"end": 11010,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10991,
											"end": 11010,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10991,
											"end": 11010,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 10991,
											"end": 11010,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 10991,
											"end": 11010,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10991,
											"end": 11010,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 10991,
											"end": 11010,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10991,
											"end": 11010,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 10991,
											"end": 11010,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 10991,
											"end": 11010,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 10991,
											"end": 11010,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10991,
											"end": 11010,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 10991,
											"end": 11010,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10991,
											"end": 11010,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 11039,
											"end": 11049,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 11039,
											"end": 11049,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 11039,
											"end": 11056,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11039,
											"end": 11056,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 11039,
											"end": 11060,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "348"
										},
										{
											"begin": 11039,
											"end": 11060,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 11039,
											"end": 11060,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "168"
										},
										{
											"begin": 11039,
											"end": 11060,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11039,
											"end": 11060,
											"name": "tag",
											"source": 4,
											"value": "348"
										},
										{
											"begin": 11039,
											"end": 11060,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11021,
											"end": 11036,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11021,
											"end": 11036,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 11021,
											"end": 11036,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11021,
											"end": 11036,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 11021,
											"end": 11032,
											"name": "PUSH",
											"source": 4,
											"value": "A"
										},
										{
											"begin": 11021,
											"end": 11036,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 11021,
											"end": 11036,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 11021,
											"end": 11036,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 11021,
											"end": 11036,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 11021,
											"end": 11036,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 11021,
											"end": 11036,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 11021,
											"end": 11060,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 11021,
											"end": 11060,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11021,
											"end": 11060,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 11021,
											"end": 11060,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 11078,
											"end": 11106,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11078,
											"end": 11106,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 11033,
											"end": 11035,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 11033,
											"end": 11035,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11078,
											"end": 11106,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 11078,
											"end": 11106,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 11078,
											"end": 11106,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 11078,
											"end": 11106,
											"name": "PUSH",
											"source": 4,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 11078,
											"end": 11106,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11021,
											"end": 11036,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 11021,
											"end": 11036,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11078,
											"end": 11106,
											"name": "LOG4",
											"source": 4
										},
										{
											"begin": 10684,
											"end": 11114,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10640,
											"end": 11114,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10640,
											"end": 11114,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 12214,
											"end": 13130,
											"name": "tag",
											"source": 1,
											"value": "324"
										},
										{
											"begin": 12214,
											"end": 13130,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12267,
											"end": 12274,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12267,
											"end": 12274,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "184F03E93FF9F4DAA797ED6E38ED64BF6A1F01"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12342,
											"end": 12359,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 12342,
											"end": 12359,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 12338,
											"end": 12441,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "350"
										},
										{
											"begin": 12338,
											"end": 12441,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "184F03E93FF9F4DAA797ED6E38ED64BF6A1F01"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12424,
											"end": 12426,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 12414,
											"end": 12426,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12338,
											"end": 12441,
											"name": "tag",
											"source": 1,
											"value": "350"
										},
										{
											"begin": 12338,
											"end": 12441,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12467,
											"end": 12475,
											"name": "PUSH",
											"source": 1,
											"value": "4EE2D6D415B85ACEF8100000000"
										},
										{
											"begin": 12458,
											"end": 12463,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 12458,
											"end": 12475,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 12454,
											"end": 12557,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "353"
										},
										{
											"begin": 12454,
											"end": 12557,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 12504,
											"end": 12512,
											"name": "PUSH",
											"source": 1,
											"value": "4EE2D6D415B85ACEF8100000000"
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12540,
											"end": 12542,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 12530,
											"end": 12542,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12454,
											"end": 12557,
											"name": "tag",
											"source": 1,
											"value": "353"
										},
										{
											"begin": 12454,
											"end": 12557,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12583,
											"end": 12591,
											"name": "PUSH",
											"source": 1,
											"value": "2386F26FC10000"
										},
										{
											"begin": 12574,
											"end": 12579,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 12574,
											"end": 12591,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 12570,
											"end": 12673,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "356"
										},
										{
											"begin": 12570,
											"end": 12673,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 12620,
											"end": 12628,
											"name": "PUSH",
											"source": 1,
											"value": "2386F26FC10000"
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12656,
											"end": 12658,
											"name": "PUSH",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 12646,
											"end": 12658,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12570,
											"end": 12673,
											"name": "tag",
											"source": 1,
											"value": "356"
										},
										{
											"begin": 12570,
											"end": 12673,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12699,
											"end": 12706,
											"name": "PUSH",
											"source": 1,
											"value": "5F5E100"
										},
										{
											"begin": 12690,
											"end": 12695,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 12690,
											"end": 12706,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 12686,
											"end": 12786,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "359"
										},
										{
											"begin": 12686,
											"end": 12786,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 12735,
											"end": 12742,
											"name": "PUSH",
											"source": 1,
											"value": "5F5E100"
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12770,
											"end": 12771,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 12760,
											"end": 12771,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12686,
											"end": 12786,
											"name": "tag",
											"source": 1,
											"value": "359"
										},
										{
											"begin": 12686,
											"end": 12786,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12812,
											"end": 12819,
											"name": "PUSH",
											"source": 1,
											"value": "2710"
										},
										{
											"begin": 12803,
											"end": 12808,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 12803,
											"end": 12819,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 12799,
											"end": 12899,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "362"
										},
										{
											"begin": 12799,
											"end": 12899,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 12848,
											"end": 12855,
											"name": "PUSH",
											"source": 1,
											"value": "2710"
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12883,
											"end": 12884,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 12873,
											"end": 12884,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12799,
											"end": 12899,
											"name": "tag",
											"source": 1,
											"value": "362"
										},
										{
											"begin": 12799,
											"end": 12899,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12925,
											"end": 12932,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 12916,
											"end": 12921,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 12916,
											"end": 12932,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 12912,
											"end": 13012,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "365"
										},
										{
											"begin": 12912,
											"end": 13012,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 12961,
											"end": 12968,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12996,
											"end": 12997,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 12986,
											"end": 12997,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12912,
											"end": 13012,
											"name": "tag",
											"source": 1,
											"value": "365"
										},
										{
											"begin": 12912,
											"end": 13012,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13038,
											"end": 13045,
											"name": "PUSH",
											"source": 1,
											"value": "A"
										},
										{
											"begin": 13029,
											"end": 13034,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 13029,
											"end": 13045,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 13025,
											"end": 13091,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "145"
										},
										{
											"begin": 13025,
											"end": 13091,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 13075,
											"end": 13076,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 13065,
											"end": 13076,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13117,
											"end": 13123,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 12214,
											"end": 13130,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12214,
											"end": 13130,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14,
											"end": 264,
											"name": "tag",
											"source": 5,
											"value": "369"
										},
										{
											"begin": 14,
											"end": 264,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 99,
											"end": 100,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 109,
											"end": 222,
											"name": "tag",
											"source": 5,
											"value": "380"
										},
										{
											"begin": 109,
											"end": 222,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 123,
											"end": 129,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 120,
											"end": 121,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 117,
											"end": 130,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 109,
											"end": 222,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 109,
											"end": 222,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "382"
										},
										{
											"begin": 109,
											"end": 222,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 199,
											"end": 210,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 199,
											"end": 210,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 199,
											"end": 210,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 193,
											"end": 211,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 180,
											"end": 191,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 180,
											"end": 191,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 180,
											"end": 191,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 173,
											"end": 212,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 145,
											"end": 147,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 138,
											"end": 148,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 109,
											"end": 222,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "380"
										},
										{
											"begin": 109,
											"end": 222,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 109,
											"end": 222,
											"name": "tag",
											"source": 5,
											"value": "382"
										},
										{
											"begin": 109,
											"end": 222,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 256,
											"end": 257,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 238,
											"end": 254,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 238,
											"end": 254,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 231,
											"end": 258,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 14,
											"end": 264,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 269,
											"end": 665,
											"name": "tag",
											"source": 5,
											"value": "39"
										},
										{
											"begin": 269,
											"end": 665,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 418,
											"end": 420,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 407,
											"end": 416,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 400,
											"end": 421,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 381,
											"end": 385,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 450,
											"end": 456,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 444,
											"end": 457,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 493,
											"end": 499,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 488,
											"end": 490,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 477,
											"end": 486,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 473,
											"end": 491,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 466,
											"end": 500,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 509,
											"end": 588,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "384"
										},
										{
											"begin": 581,
											"end": 587,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 576,
											"end": 578,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 565,
											"end": 574,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 561,
											"end": 579,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 556,
											"end": 558,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 548,
											"end": 554,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 544,
											"end": 559,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 509,
											"end": 588,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "369"
										},
										{
											"begin": 509,
											"end": 588,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 509,
											"end": 588,
											"name": "tag",
											"source": 5,
											"value": "384"
										},
										{
											"begin": 509,
											"end": 588,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 649,
											"end": 651,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 628,
											"end": 643,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 624,
											"end": 653,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 609,
											"end": 654,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 609,
											"end": 654,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 609,
											"end": 654,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 609,
											"end": 654,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 656,
											"end": 658,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 605,
											"end": 659,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 605,
											"end": 659,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 269,
											"end": 665,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 269,
											"end": 665,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 670,
											"end": 850,
											"name": "tag",
											"source": 5,
											"value": "42"
										},
										{
											"begin": 670,
											"end": 850,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 729,
											"end": 735,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 782,
											"end": 784,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 770,
											"end": 779,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 761,
											"end": 768,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 757,
											"end": 780,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 753,
											"end": 785,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 750,
											"end": 802,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 750,
											"end": 802,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "386"
										},
										{
											"begin": 750,
											"end": 802,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 798,
											"end": 799,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 795,
											"end": 796,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 788,
											"end": 800,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 750,
											"end": 802,
											"name": "tag",
											"source": 5,
											"value": "386"
										},
										{
											"begin": 750,
											"end": 802,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 821,
											"end": 844,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 821,
											"end": 844,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 670,
											"end": 850,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 670,
											"end": 850,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1063,
											"end": 1236,
											"name": "tag",
											"source": 5,
											"value": "370"
										},
										{
											"begin": 1063,
											"end": 1236,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1131,
											"end": 1151,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1131,
											"end": 1151,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1180,
											"end": 1211,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1180,
											"end": 1211,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1170,
											"end": 1212,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1170,
											"end": 1212,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1160,
											"end": 1230,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "213"
										},
										{
											"begin": 1160,
											"end": 1230,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1226,
											"end": 1227,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1223,
											"end": 1224,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1216,
											"end": 1228,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1241,
											"end": 1495,
											"name": "tag",
											"source": 5,
											"value": "48"
										},
										{
											"begin": 1241,
											"end": 1495,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1309,
											"end": 1315,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1317,
											"end": 1323,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1370,
											"end": 1372,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1358,
											"end": 1367,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1349,
											"end": 1356,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1345,
											"end": 1368,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1341,
											"end": 1373,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 1338,
											"end": 1390,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1338,
											"end": 1390,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "391"
										},
										{
											"begin": 1338,
											"end": 1390,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1386,
											"end": 1387,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1383,
											"end": 1384,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1376,
											"end": 1388,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1338,
											"end": 1390,
											"name": "tag",
											"source": 5,
											"value": "391"
										},
										{
											"begin": 1338,
											"end": 1390,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1409,
											"end": 1438,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "392"
										},
										{
											"begin": 1428,
											"end": 1437,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1409,
											"end": 1438,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "370"
										},
										{
											"begin": 1409,
											"end": 1438,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1409,
											"end": 1438,
											"name": "tag",
											"source": 5,
											"value": "392"
										},
										{
											"begin": 1409,
											"end": 1438,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1399,
											"end": 1438,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 1485,
											"end": 1487,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1470,
											"end": 1488,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 1470,
											"end": 1488,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1470,
											"end": 1488,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 1470,
											"end": 1488,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1457,
											"end": 1489,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 1457,
											"end": 1489,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1241,
											"end": 1495,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1874,
											"end": 2001,
											"name": "tag",
											"source": 5,
											"value": "327"
										},
										{
											"begin": 1874,
											"end": 2001,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1935,
											"end": 1945,
											"name": "PUSH",
											"source": 5,
											"value": "4E487B71"
										},
										{
											"begin": 1930,
											"end": 1933,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 1926,
											"end": 1946,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 1923,
											"end": 1924,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1916,
											"end": 1947,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1966,
											"end": 1970,
											"name": "PUSH",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 1963,
											"end": 1964,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1956,
											"end": 1971,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1990,
											"end": 1994,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 1987,
											"end": 1988,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1980,
											"end": 1995,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2006,
											"end": 2725,
											"name": "tag",
											"source": 5,
											"value": "371"
										},
										{
											"begin": 2006,
											"end": 2725,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2049,
											"end": 2054,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2102,
											"end": 2105,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2095,
											"end": 2099,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2087,
											"end": 2093,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2083,
											"end": 2100,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2079,
											"end": 2106,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 2069,
											"end": 2124,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "397"
										},
										{
											"begin": 2069,
											"end": 2124,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2120,
											"end": 2121,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2117,
											"end": 2118,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2110,
											"end": 2122,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2069,
											"end": 2124,
											"name": "tag",
											"source": 5,
											"value": "397"
										},
										{
											"begin": 2069,
											"end": 2124,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2156,
											"end": 2162,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2143,
											"end": 2163,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 2182,
											"end": 2200,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2219,
											"end": 2221,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2215,
											"end": 2217,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2212,
											"end": 2222,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 2209,
											"end": 2245,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2209,
											"end": 2245,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "399"
										},
										{
											"begin": 2209,
											"end": 2245,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2225,
											"end": 2243,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "399"
										},
										{
											"begin": 2225,
											"end": 2243,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "327"
										},
										{
											"begin": 2225,
											"end": 2243,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2225,
											"end": 2243,
											"name": "tag",
											"source": 5,
											"value": "399"
										},
										{
											"begin": 2225,
											"end": 2243,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2300,
											"end": 2302,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2294,
											"end": 2303,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2268,
											"end": 2270,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2354,
											"end": 2367,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2354,
											"end": 2367,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2350,
											"end": 2372,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2350,
											"end": 2372,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2350,
											"end": 2372,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2374,
											"end": 2376,
											"name": "PUSH",
											"source": 5,
											"value": "3F"
										},
										{
											"begin": 2346,
											"end": 2377,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2342,
											"end": 2382,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2330,
											"end": 2383,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2330,
											"end": 2383,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2330,
											"end": 2383,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2398,
											"end": 2416,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2398,
											"end": 2416,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2398,
											"end": 2416,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 2418,
											"end": 2440,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2418,
											"end": 2440,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2418,
											"end": 2440,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 2395,
											"end": 2441,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 2392,
											"end": 2464,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2392,
											"end": 2464,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "401"
										},
										{
											"begin": 2392,
											"end": 2464,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2444,
											"end": 2462,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "401"
										},
										{
											"begin": 2444,
											"end": 2462,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "327"
										},
										{
											"begin": 2444,
											"end": 2462,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2444,
											"end": 2462,
											"name": "tag",
											"source": 5,
											"value": "401"
										},
										{
											"begin": 2444,
											"end": 2462,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2484,
											"end": 2494,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2480,
											"end": 2482,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2473,
											"end": 2495,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2519,
											"end": 2521,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2511,
											"end": 2517,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2504,
											"end": 2522,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2565,
											"end": 2568,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 2558,
											"end": 2562,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2553,
											"end": 2555,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2545,
											"end": 2551,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 2541,
											"end": 2556,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2537,
											"end": 2563,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2534,
											"end": 2569,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 2531,
											"end": 2586,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2531,
											"end": 2586,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "402"
										},
										{
											"begin": 2531,
											"end": 2586,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2582,
											"end": 2583,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2579,
											"end": 2580,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2531,
											"end": 2586,
											"name": "tag",
											"source": 5,
											"value": "402"
										},
										{
											"begin": 2531,
											"end": 2586,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2646,
											"end": 2648,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2639,
											"end": 2643,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2631,
											"end": 2637,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 2627,
											"end": 2644,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2620,
											"end": 2624,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2612,
											"end": 2618,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2608,
											"end": 2625,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2595,
											"end": 2649,
											"name": "CALLDATACOPY",
											"source": 5
										},
										{
											"begin": 2693,
											"end": 2694,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2686,
											"end": 2690,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2681,
											"end": 2683,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2673,
											"end": 2679,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2669,
											"end": 2684,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2665,
											"end": 2691,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2658,
											"end": 2695,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2713,
											"end": 2719,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2704,
											"end": 2719,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 2704,
											"end": 2719,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2704,
											"end": 2719,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2704,
											"end": 2719,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2704,
											"end": 2719,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2704,
											"end": 2719,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2006,
											"end": 2725,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2006,
											"end": 2725,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2006,
											"end": 2725,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2006,
											"end": 2725,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2006,
											"end": 2725,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2730,
											"end": 3052,
											"name": "tag",
											"source": 5,
											"value": "58"
										},
										{
											"begin": 2730,
											"end": 3052,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2799,
											"end": 2805,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2852,
											"end": 2854,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2840,
											"end": 2849,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2831,
											"end": 2838,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2827,
											"end": 2850,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2823,
											"end": 2855,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 2820,
											"end": 2872,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2820,
											"end": 2872,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "404"
										},
										{
											"begin": 2820,
											"end": 2872,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2868,
											"end": 2869,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2865,
											"end": 2866,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2858,
											"end": 2870,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2820,
											"end": 2872,
											"name": "tag",
											"source": 5,
											"value": "404"
										},
										{
											"begin": 2820,
											"end": 2872,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2908,
											"end": 2917,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2895,
											"end": 2918,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 2941,
											"end": 2959,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2933,
											"end": 2939,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2930,
											"end": 2960,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 2927,
											"end": 2977,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2927,
											"end": 2977,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "405"
										},
										{
											"begin": 2927,
											"end": 2977,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2973,
											"end": 2974,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2970,
											"end": 2971,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2963,
											"end": 2975,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2927,
											"end": 2977,
											"name": "tag",
											"source": 5,
											"value": "405"
										},
										{
											"begin": 2927,
											"end": 2977,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2996,
											"end": 3046,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "406"
										},
										{
											"begin": 3038,
											"end": 3045,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3029,
											"end": 3035,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3018,
											"end": 3027,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 3014,
											"end": 3036,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2996,
											"end": 3046,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "371"
										},
										{
											"begin": 2996,
											"end": 3046,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2996,
											"end": 3046,
											"name": "tag",
											"source": 5,
											"value": "406"
										},
										{
											"begin": 2996,
											"end": 3046,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2986,
											"end": 3046,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 2730,
											"end": 3052,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2730,
											"end": 3052,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3057,
											"end": 3385,
											"name": "tag",
											"source": 5,
											"value": "62"
										},
										{
											"begin": 3057,
											"end": 3385,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3134,
											"end": 3140,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3142,
											"end": 3148,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3150,
											"end": 3156,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3203,
											"end": 3205,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 3191,
											"end": 3200,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3182,
											"end": 3189,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 3178,
											"end": 3201,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3174,
											"end": 3206,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 3171,
											"end": 3223,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3171,
											"end": 3223,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "408"
										},
										{
											"begin": 3171,
											"end": 3223,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3219,
											"end": 3220,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3216,
											"end": 3217,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3209,
											"end": 3221,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3171,
											"end": 3223,
											"name": "tag",
											"source": 5,
											"value": "408"
										},
										{
											"begin": 3171,
											"end": 3223,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3242,
											"end": 3271,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "409"
										},
										{
											"begin": 3261,
											"end": 3270,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3242,
											"end": 3271,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "370"
										},
										{
											"begin": 3242,
											"end": 3271,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3242,
											"end": 3271,
											"name": "tag",
											"source": 5,
											"value": "409"
										},
										{
											"begin": 3242,
											"end": 3271,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3232,
											"end": 3271,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3232,
											"end": 3271,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3290,
											"end": 3328,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "410"
										},
										{
											"begin": 3324,
											"end": 3326,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3313,
											"end": 3322,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 3309,
											"end": 3327,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3290,
											"end": 3328,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "370"
										},
										{
											"begin": 3290,
											"end": 3328,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3290,
											"end": 3328,
											"name": "tag",
											"source": 5,
											"value": "410"
										},
										{
											"begin": 3290,
											"end": 3328,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3280,
											"end": 3328,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3280,
											"end": 3328,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3375,
											"end": 3377,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3364,
											"end": 3373,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3360,
											"end": 3378,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3347,
											"end": 3379,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 3337,
											"end": 3379,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3337,
											"end": 3379,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3057,
											"end": 3385,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3057,
											"end": 3385,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3057,
											"end": 3385,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3057,
											"end": 3385,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3057,
											"end": 3385,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3057,
											"end": 3385,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3579,
											"end": 4122,
											"name": "tag",
											"source": 5,
											"value": "78"
										},
										{
											"begin": 3579,
											"end": 4122,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3667,
											"end": 3673,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3675,
											"end": 3681,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3728,
											"end": 3730,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3716,
											"end": 3725,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3707,
											"end": 3714,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 3703,
											"end": 3726,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3699,
											"end": 3731,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 3696,
											"end": 3748,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3696,
											"end": 3748,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "413"
										},
										{
											"begin": 3696,
											"end": 3748,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3744,
											"end": 3745,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3741,
											"end": 3742,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3734,
											"end": 3746,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3696,
											"end": 3748,
											"name": "tag",
											"source": 5,
											"value": "413"
										},
										{
											"begin": 3696,
											"end": 3748,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3784,
											"end": 3793,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3771,
											"end": 3794,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 3813,
											"end": 3831,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3854,
											"end": 3856,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3846,
											"end": 3852,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3843,
											"end": 3857,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 3840,
											"end": 3874,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3840,
											"end": 3874,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "414"
										},
										{
											"begin": 3840,
											"end": 3874,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3870,
											"end": 3871,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3867,
											"end": 3868,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3860,
											"end": 3872,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3840,
											"end": 3874,
											"name": "tag",
											"source": 5,
											"value": "414"
										},
										{
											"begin": 3840,
											"end": 3874,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3893,
											"end": 3943,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "415"
										},
										{
											"begin": 3935,
											"end": 3942,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 3926,
											"end": 3932,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3915,
											"end": 3924,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 3911,
											"end": 3933,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3893,
											"end": 3943,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "371"
										},
										{
											"begin": 3893,
											"end": 3943,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3893,
											"end": 3943,
											"name": "tag",
											"source": 5,
											"value": "415"
										},
										{
											"begin": 3893,
											"end": 3943,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3883,
											"end": 3943,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 3883,
											"end": 3943,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3996,
											"end": 3998,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3985,
											"end": 3994,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 3981,
											"end": 3999,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3968,
											"end": 4000,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 3952,
											"end": 4000,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3952,
											"end": 4000,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4025,
											"end": 4027,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4015,
											"end": 4023,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4012,
											"end": 4028,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 4009,
											"end": 4045,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4009,
											"end": 4045,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "416"
										},
										{
											"begin": 4009,
											"end": 4045,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4041,
											"end": 4042,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4038,
											"end": 4039,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4031,
											"end": 4043,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 4009,
											"end": 4045,
											"name": "tag",
											"source": 5,
											"value": "416"
										},
										{
											"begin": 4009,
											"end": 4045,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4009,
											"end": 4045,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4064,
											"end": 4116,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "417"
										},
										{
											"begin": 4108,
											"end": 4115,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 4097,
											"end": 4105,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4086,
											"end": 4095,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 4082,
											"end": 4106,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4064,
											"end": 4116,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "371"
										},
										{
											"begin": 4064,
											"end": 4116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4064,
											"end": 4116,
											"name": "tag",
											"source": 5,
											"value": "417"
										},
										{
											"begin": 4064,
											"end": 4116,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4054,
											"end": 4116,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4054,
											"end": 4116,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4054,
											"end": 4116,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3579,
											"end": 4122,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3579,
											"end": 4122,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3579,
											"end": 4122,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3579,
											"end": 4122,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3579,
											"end": 4122,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3579,
											"end": 4122,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4127,
											"end": 4474,
											"name": "tag",
											"source": 5,
											"value": "82"
										},
										{
											"begin": 4127,
											"end": 4474,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4192,
											"end": 4198,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4200,
											"end": 4206,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4253,
											"end": 4255,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4241,
											"end": 4250,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4232,
											"end": 4239,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 4228,
											"end": 4251,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4224,
											"end": 4256,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 4221,
											"end": 4273,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4221,
											"end": 4273,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "419"
										},
										{
											"begin": 4221,
											"end": 4273,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4269,
											"end": 4270,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4266,
											"end": 4267,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4259,
											"end": 4271,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 4221,
											"end": 4273,
											"name": "tag",
											"source": 5,
											"value": "419"
										},
										{
											"begin": 4221,
											"end": 4273,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4292,
											"end": 4321,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "420"
										},
										{
											"begin": 4311,
											"end": 4320,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4292,
											"end": 4321,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "370"
										},
										{
											"begin": 4292,
											"end": 4321,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4292,
											"end": 4321,
											"name": "tag",
											"source": 5,
											"value": "420"
										},
										{
											"begin": 4292,
											"end": 4321,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4282,
											"end": 4321,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4282,
											"end": 4321,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4371,
											"end": 4373,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4360,
											"end": 4369,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4356,
											"end": 4374,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4343,
											"end": 4375,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 4418,
											"end": 4423,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4411,
											"end": 4424,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4404,
											"end": 4425,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4397,
											"end": 4402,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4394,
											"end": 4426,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 4384,
											"end": 4444,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "421"
										},
										{
											"begin": 4384,
											"end": 4444,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4440,
											"end": 4441,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4437,
											"end": 4438,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4430,
											"end": 4442,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 4384,
											"end": 4444,
											"name": "tag",
											"source": 5,
											"value": "421"
										},
										{
											"begin": 4384,
											"end": 4444,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4463,
											"end": 4468,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4453,
											"end": 4468,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4453,
											"end": 4468,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4453,
											"end": 4468,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4127,
											"end": 4474,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4127,
											"end": 4474,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4127,
											"end": 4474,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4127,
											"end": 4474,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4127,
											"end": 4474,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4127,
											"end": 4474,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4479,
											"end": 4665,
											"name": "tag",
											"source": 5,
											"value": "90"
										},
										{
											"begin": 4479,
											"end": 4665,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4538,
											"end": 4544,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4591,
											"end": 4593,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4579,
											"end": 4588,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4570,
											"end": 4577,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 4566,
											"end": 4589,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4562,
											"end": 4594,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 4559,
											"end": 4611,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4559,
											"end": 4611,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "423"
										},
										{
											"begin": 4559,
											"end": 4611,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4607,
											"end": 4608,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4604,
											"end": 4605,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4597,
											"end": 4609,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 4559,
											"end": 4611,
											"name": "tag",
											"source": 5,
											"value": "423"
										},
										{
											"begin": 4559,
											"end": 4611,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4630,
											"end": 4659,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "222"
										},
										{
											"begin": 4649,
											"end": 4658,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4630,
											"end": 4659,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "370"
										},
										{
											"begin": 4630,
											"end": 4659,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4670,
											"end": 5478,
											"name": "tag",
											"source": 5,
											"value": "112"
										},
										{
											"begin": 4670,
											"end": 5478,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4767,
											"end": 4773,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4775,
											"end": 4781,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4783,
											"end": 4789,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4791,
											"end": 4797,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4799,
											"end": 4805,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4852,
											"end": 4855,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 4840,
											"end": 4849,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 4831,
											"end": 4838,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 4827,
											"end": 4850,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4823,
											"end": 4856,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 4820,
											"end": 4873,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4820,
											"end": 4873,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "426"
										},
										{
											"begin": 4820,
											"end": 4873,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4869,
											"end": 4870,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4866,
											"end": 4867,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4859,
											"end": 4871,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 4820,
											"end": 4873,
											"name": "tag",
											"source": 5,
											"value": "426"
										},
										{
											"begin": 4820,
											"end": 4873,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4892,
											"end": 4921,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "427"
										},
										{
											"begin": 4911,
											"end": 4920,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 4892,
											"end": 4921,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "370"
										},
										{
											"begin": 4892,
											"end": 4921,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4892,
											"end": 4921,
											"name": "tag",
											"source": 5,
											"value": "427"
										},
										{
											"begin": 4892,
											"end": 4921,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4882,
											"end": 4921,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 4882,
											"end": 4921,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4940,
											"end": 4978,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "428"
										},
										{
											"begin": 4974,
											"end": 4976,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4963,
											"end": 4972,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 4959,
											"end": 4977,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4940,
											"end": 4978,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "370"
										},
										{
											"begin": 4940,
											"end": 4978,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4940,
											"end": 4978,
											"name": "tag",
											"source": 5,
											"value": "428"
										},
										{
											"begin": 4940,
											"end": 4978,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4930,
											"end": 4978,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 4930,
											"end": 4978,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5025,
											"end": 5027,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5014,
											"end": 5023,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 5010,
											"end": 5028,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4997,
											"end": 5029,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 4987,
											"end": 5029,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4987,
											"end": 5029,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5080,
											"end": 5082,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 5069,
											"end": 5078,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 5065,
											"end": 5083,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5052,
											"end": 5084,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 5103,
											"end": 5121,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5144,
											"end": 5146,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5136,
											"end": 5142,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5133,
											"end": 5147,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 5130,
											"end": 5164,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 5130,
											"end": 5164,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "429"
										},
										{
											"begin": 5130,
											"end": 5164,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5160,
											"end": 5161,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5157,
											"end": 5158,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5150,
											"end": 5162,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 5130,
											"end": 5164,
											"name": "tag",
											"source": 5,
											"value": "429"
										},
										{
											"begin": 5130,
											"end": 5164,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5198,
											"end": 5204,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5187,
											"end": 5196,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 5183,
											"end": 5205,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5173,
											"end": 5205,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5173,
											"end": 5205,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5243,
											"end": 5250,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 5236,
											"end": 5240,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 5232,
											"end": 5234,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5228,
											"end": 5241,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5224,
											"end": 5251,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 5214,
											"end": 5269,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "430"
										},
										{
											"begin": 5214,
											"end": 5269,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5265,
											"end": 5266,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5262,
											"end": 5263,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5255,
											"end": 5267,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 5214,
											"end": 5269,
											"name": "tag",
											"source": 5,
											"value": "430"
										},
										{
											"begin": 5214,
											"end": 5269,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5305,
											"end": 5307,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5292,
											"end": 5308,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 5331,
											"end": 5333,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5323,
											"end": 5329,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5320,
											"end": 5334,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 5317,
											"end": 5351,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 5317,
											"end": 5351,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "431"
										},
										{
											"begin": 5317,
											"end": 5351,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5347,
											"end": 5348,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5344,
											"end": 5345,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5337,
											"end": 5349,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 5317,
											"end": 5351,
											"name": "tag",
											"source": 5,
											"value": "431"
										},
										{
											"begin": 5317,
											"end": 5351,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5392,
											"end": 5399,
											"name": "DUP10",
											"source": 5
										},
										{
											"begin": 5387,
											"end": 5389,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5378,
											"end": 5384,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5374,
											"end": 5376,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 5370,
											"end": 5385,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5366,
											"end": 5390,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5363,
											"end": 5400,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 5360,
											"end": 5417,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 5360,
											"end": 5417,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "432"
										},
										{
											"begin": 5360,
											"end": 5417,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5413,
											"end": 5414,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5410,
											"end": 5411,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5403,
											"end": 5415,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 5360,
											"end": 5417,
											"name": "tag",
											"source": 5,
											"value": "432"
										},
										{
											"begin": 5360,
											"end": 5417,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4670,
											"end": 5478,
											"name": "SWAP7",
											"source": 5
										},
										{
											"begin": 4670,
											"end": 5478,
											"name": "SWAP10",
											"source": 5
										},
										{
											"begin": 4670,
											"end": 5478,
											"name": "SWAP6",
											"source": 5
										},
										{
											"begin": 4670,
											"end": 5478,
											"name": "SWAP9",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4670,
											"end": 5478,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 4670,
											"end": 5478,
											"name": "SWAP7",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5444,
											"end": 5446,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5436,
											"end": 5447,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5436,
											"end": 5447,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 5466,
											"end": 5472,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 4670,
											"end": 5478,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4670,
											"end": 5478,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5483,
											"end": 5743,
											"name": "tag",
											"source": 5,
											"value": "123"
										},
										{
											"begin": 5483,
											"end": 5743,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5551,
											"end": 5557,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5559,
											"end": 5565,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5612,
											"end": 5614,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5600,
											"end": 5609,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5591,
											"end": 5598,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 5587,
											"end": 5610,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5583,
											"end": 5615,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 5580,
											"end": 5632,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 5580,
											"end": 5632,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "434"
										},
										{
											"begin": 5580,
											"end": 5632,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5628,
											"end": 5629,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5625,
											"end": 5626,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5618,
											"end": 5630,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 5580,
											"end": 5632,
											"name": "tag",
											"source": 5,
											"value": "434"
										},
										{
											"begin": 5580,
											"end": 5632,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5651,
											"end": 5680,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "435"
										},
										{
											"begin": 5670,
											"end": 5679,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5651,
											"end": 5680,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "370"
										},
										{
											"begin": 5651,
											"end": 5680,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5651,
											"end": 5680,
											"name": "tag",
											"source": 5,
											"value": "435"
										},
										{
											"begin": 5651,
											"end": 5680,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5641,
											"end": 5680,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5641,
											"end": 5680,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5699,
											"end": 5737,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "436"
										},
										{
											"begin": 5733,
											"end": 5735,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5722,
											"end": 5731,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5718,
											"end": 5736,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5699,
											"end": 5737,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "370"
										},
										{
											"begin": 5699,
											"end": 5737,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5699,
											"end": 5737,
											"name": "tag",
											"source": 5,
											"value": "436"
										},
										{
											"begin": 5699,
											"end": 5737,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5689,
											"end": 5737,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5689,
											"end": 5737,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5483,
											"end": 5743,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5483,
											"end": 5743,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5483,
											"end": 5743,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5483,
											"end": 5743,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5483,
											"end": 5743,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5483,
											"end": 5743,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5748,
											"end": 6128,
											"name": "tag",
											"source": 5,
											"value": "140"
										},
										{
											"begin": 5748,
											"end": 6128,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5827,
											"end": 5828,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 5823,
											"end": 5835,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5823,
											"end": 5835,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5823,
											"end": 5835,
											"name": "SHR",
											"source": 5
										},
										{
											"begin": 5823,
											"end": 5835,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5870,
											"end": 5882,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5870,
											"end": 5882,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5870,
											"end": 5882,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5891,
											"end": 5952,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "438"
										},
										{
											"begin": 5891,
											"end": 5952,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5945,
											"end": 5949,
											"name": "PUSH",
											"source": 5,
											"value": "7F"
										},
										{
											"begin": 5937,
											"end": 5943,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5933,
											"end": 5950,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5923,
											"end": 5950,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5923,
											"end": 5950,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5891,
											"end": 5952,
											"name": "tag",
											"source": 5,
											"value": "438"
										},
										{
											"begin": 5891,
											"end": 5952,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5998,
											"end": 6000,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5990,
											"end": 5996,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5987,
											"end": 6001,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 5967,
											"end": 5985,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5964,
											"end": 6002,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5961,
											"end": 6122,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "439"
										},
										{
											"begin": 5961,
											"end": 6122,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6044,
											"end": 6054,
											"name": "PUSH",
											"source": 5,
											"value": "4E487B71"
										},
										{
											"begin": 6039,
											"end": 6042,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 6035,
											"end": 6055,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 6032,
											"end": 6033,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6025,
											"end": 6056,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6079,
											"end": 6083,
											"name": "PUSH",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 6076,
											"end": 6077,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 6069,
											"end": 6084,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6107,
											"end": 6111,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 6104,
											"end": 6105,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6097,
											"end": 6112,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 5961,
											"end": 6122,
											"name": "tag",
											"source": 5,
											"value": "439"
										},
										{
											"begin": 5961,
											"end": 6122,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5961,
											"end": 6122,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5748,
											"end": 6128,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5748,
											"end": 6128,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5748,
											"end": 6128,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5748,
											"end": 6128,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6259,
											"end": 6802,
											"name": "tag",
											"source": 5,
											"value": "373"
										},
										{
											"begin": 6259,
											"end": 6802,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6361,
											"end": 6363,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 6356,
											"end": 6359,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6353,
											"end": 6364,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 6350,
											"end": 6796,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 6350,
											"end": 6796,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "186"
										},
										{
											"begin": 6350,
											"end": 6796,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6397,
											"end": 6398,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6421,
											"end": 6426,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6418,
											"end": 6419,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6411,
											"end": 6427,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6465,
											"end": 6469,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6462,
											"end": 6463,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6452,
											"end": 6470,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 6535,
											"end": 6537,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 6523,
											"end": 6533,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 6519,
											"end": 6538,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6516,
											"end": 6517,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 6512,
											"end": 6539,
											"name": "SHR",
											"source": 5
										},
										{
											"begin": 6506,
											"end": 6510,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6502,
											"end": 6540,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6571,
											"end": 6575,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6559,
											"end": 6569,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 6556,
											"end": 6576,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 6553,
											"end": 6600,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 6553,
											"end": 6600,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "443"
										},
										{
											"begin": 6553,
											"end": 6600,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6594,
											"end": 6598,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6553,
											"end": 6600,
											"name": "tag",
											"source": 5,
											"value": "443"
										},
										{
											"begin": 6553,
											"end": 6600,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6649,
											"end": 6651,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 6644,
											"end": 6647,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 6640,
											"end": 6652,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6637,
											"end": 6638,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 6633,
											"end": 6653,
											"name": "SHR",
											"source": 5
										},
										{
											"begin": 6627,
											"end": 6631,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6623,
											"end": 6654,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6613,
											"end": 6654,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6613,
											"end": 6654,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6704,
											"end": 6786,
											"name": "tag",
											"source": 5,
											"value": "444"
										},
										{
											"begin": 6704,
											"end": 6786,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6722,
											"end": 6724,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6715,
											"end": 6720,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6712,
											"end": 6725,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 6704,
											"end": 6786,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 6704,
											"end": 6786,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "446"
										},
										{
											"begin": 6704,
											"end": 6786,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6767,
											"end": 6784,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6767,
											"end": 6784,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6767,
											"end": 6784,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 6748,
											"end": 6749,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 6737,
											"end": 6750,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6704,
											"end": 6786,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "444"
										},
										{
											"begin": 6704,
											"end": 6786,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6704,
											"end": 6786,
											"name": "tag",
											"source": 5,
											"value": "446"
										},
										{
											"begin": 6704,
											"end": 6786,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6708,
											"end": 6711,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6708,
											"end": 6711,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6708,
											"end": 6711,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6259,
											"end": 6802,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6259,
											"end": 6802,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6259,
											"end": 6802,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6259,
											"end": 6802,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6978,
											"end": 8323,
											"name": "tag",
											"source": 5,
											"value": "157"
										},
										{
											"begin": 6978,
											"end": 8323,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7104,
											"end": 7107,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7098,
											"end": 7108,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 7131,
											"end": 7149,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7123,
											"end": 7129,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7120,
											"end": 7150,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 7117,
											"end": 7173,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 7117,
											"end": 7173,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "450"
										},
										{
											"begin": 7117,
											"end": 7173,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 7153,
											"end": 7171,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "450"
										},
										{
											"begin": 7153,
											"end": 7171,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "327"
										},
										{
											"begin": 7153,
											"end": 7171,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7153,
											"end": 7171,
											"name": "tag",
											"source": 5,
											"value": "450"
										},
										{
											"begin": 7153,
											"end": 7171,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7182,
											"end": 7279,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "451"
										},
										{
											"begin": 7272,
											"end": 7278,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7232,
											"end": 7270,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "452"
										},
										{
											"begin": 7264,
											"end": 7268,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 7258,
											"end": 7269,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 7232,
											"end": 7270,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "140"
										},
										{
											"begin": 7232,
											"end": 7270,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7232,
											"end": 7270,
											"name": "tag",
											"source": 5,
											"value": "452"
										},
										{
											"begin": 7232,
											"end": 7270,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7226,
											"end": 7230,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 7182,
											"end": 7279,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "373"
										},
										{
											"begin": 7182,
											"end": 7279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7182,
											"end": 7279,
											"name": "tag",
											"source": 5,
											"value": "451"
										},
										{
											"begin": 7182,
											"end": 7279,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7334,
											"end": 7338,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7334,
											"end": 7338,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7391,
											"end": 7393,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 7380,
											"end": 7394,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7380,
											"end": 7394,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 7408,
											"end": 7409,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 7403,
											"end": 8066,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7403,
											"end": 8066,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 7403,
											"end": 8066,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "454"
										},
										{
											"begin": 7403,
											"end": 8066,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 8110,
											"end": 8111,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8127,
											"end": 8133,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 8124,
											"end": 8213,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 8124,
											"end": 8213,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "455"
										},
										{
											"begin": 8124,
											"end": 8213,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8179,
											"end": 8198,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 8179,
											"end": 8198,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 8179,
											"end": 8198,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8173,
											"end": 8199,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 8124,
											"end": 8213,
											"name": "tag",
											"source": 5,
											"value": "455"
										},
										{
											"begin": 8124,
											"end": 8213,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6935,
											"end": 6936,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 6931,
											"end": 6942,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 6931,
											"end": 6942,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6931,
											"end": 6942,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 6927,
											"end": 6951,
											"name": "SHR",
											"source": 5
										},
										{
											"begin": 6923,
											"end": 6952,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 6913,
											"end": 6953,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6959,
											"end": 6960,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 6955,
											"end": 6966,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 6955,
											"end": 6966,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6955,
											"end": 6966,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 6910,
											"end": 6967,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 8226,
											"end": 8307,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 8226,
											"end": 8307,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 7373,
											"end": 8317,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "446"
										},
										{
											"begin": 7373,
											"end": 8317,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7403,
											"end": 8066,
											"name": "tag",
											"source": 5,
											"value": "454"
										},
										{
											"begin": 7403,
											"end": 8066,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6206,
											"end": 6207,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6199,
											"end": 6213,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 6199,
											"end": 6213,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6199,
											"end": 6213,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6243,
											"end": 6247,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6230,
											"end": 6248,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6230,
											"end": 6248,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 7439,
											"end": 7459,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 7439,
											"end": 7459,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7439,
											"end": 7459,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7557,
											"end": 7793,
											"name": "tag",
											"source": 5,
											"value": "458"
										},
										{
											"begin": 7557,
											"end": 7793,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7571,
											"end": 7578,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7568,
											"end": 7569,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7565,
											"end": 7579,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 7557,
											"end": 7793,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 7557,
											"end": 7793,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "460"
										},
										{
											"begin": 7557,
											"end": 7793,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 7660,
											"end": 7679,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 7660,
											"end": 7679,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 7660,
											"end": 7679,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7654,
											"end": 7680,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 7639,
											"end": 7681,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7639,
											"end": 7681,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 7752,
											"end": 7779,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 7752,
											"end": 7779,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 7752,
											"end": 7779,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7752,
											"end": 7779,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 7720,
											"end": 7721,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 7708,
											"end": 7722,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7708,
											"end": 7722,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7708,
											"end": 7722,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7708,
											"end": 7722,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7587,
											"end": 7606,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 7587,
											"end": 7606,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7557,
											"end": 7793,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "458"
										},
										{
											"begin": 7557,
											"end": 7793,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7557,
											"end": 7793,
											"name": "tag",
											"source": 5,
											"value": "460"
										},
										{
											"begin": 7557,
											"end": 7793,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7561,
											"end": 7564,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7821,
											"end": 7827,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 7812,
											"end": 7819,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7809,
											"end": 7828,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 7806,
											"end": 8007,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 7806,
											"end": 8007,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "461"
										},
										{
											"begin": 7806,
											"end": 8007,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 7882,
											"end": 7901,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 7882,
											"end": 7901,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 7882,
											"end": 7901,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7876,
											"end": 7902,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 7965,
											"end": 7966,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 7961,
											"end": 7975,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 7961,
											"end": 7975,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7961,
											"end": 7975,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 7977,
											"end": 7980,
											"name": "PUSH",
											"source": 5,
											"value": "F8"
										},
										{
											"begin": 7957,
											"end": 7981,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7953,
											"end": 7990,
											"name": "SHR",
											"source": 5
										},
										{
											"begin": 7949,
											"end": 7991,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 7934,
											"end": 7992,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7919,
											"end": 7993,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7919,
											"end": 7993,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 7806,
											"end": 8007,
											"name": "tag",
											"source": 5,
											"value": "461"
										},
										{
											"begin": 7806,
											"end": 8007,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8053,
											"end": 8054,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 8037,
											"end": 8051,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8037,
											"end": 8051,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8037,
											"end": 8051,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 8033,
											"end": 8055,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8020,
											"end": 8056,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8020,
											"end": 8056,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6978,
											"end": 8323,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8328,
											"end": 8455,
											"name": "tag",
											"source": 5,
											"value": "375"
										},
										{
											"begin": 8328,
											"end": 8455,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8389,
											"end": 8399,
											"name": "PUSH",
											"source": 5,
											"value": "4E487B71"
										},
										{
											"begin": 8384,
											"end": 8387,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 8380,
											"end": 8400,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 8377,
											"end": 8378,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8370,
											"end": 8401,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8420,
											"end": 8424,
											"name": "PUSH",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 8417,
											"end": 8418,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 8410,
											"end": 8425,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8444,
											"end": 8448,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 8441,
											"end": 8442,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8434,
											"end": 8449,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 8460,
											"end": 8588,
											"name": "tag",
											"source": 5,
											"value": "168"
										},
										{
											"begin": 8460,
											"end": 8588,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8527,
											"end": 8536,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8527,
											"end": 8536,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8527,
											"end": 8536,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 8548,
											"end": 8559,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8548,
											"end": 8559,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8548,
											"end": 8559,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 8545,
											"end": 8582,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 8545,
											"end": 8582,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "145"
										},
										{
											"begin": 8545,
											"end": 8582,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 8562,
											"end": 8580,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "145"
										},
										{
											"begin": 8562,
											"end": 8580,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "375"
										},
										{
											"begin": 8562,
											"end": 8580,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8593,
											"end": 8720,
											"name": "tag",
											"source": 5,
											"value": "173"
										},
										{
											"begin": 8593,
											"end": 8720,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8654,
											"end": 8664,
											"name": "PUSH",
											"source": 5,
											"value": "4E487B71"
										},
										{
											"begin": 8649,
											"end": 8652,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 8645,
											"end": 8665,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 8642,
											"end": 8643,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8635,
											"end": 8666,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8685,
											"end": 8689,
											"name": "PUSH",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 8682,
											"end": 8683,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 8675,
											"end": 8690,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8709,
											"end": 8713,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 8706,
											"end": 8707,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8699,
											"end": 8714,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 8725,
											"end": 8852,
											"name": "tag",
											"source": 5,
											"value": "180"
										},
										{
											"begin": 8725,
											"end": 8852,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8786,
											"end": 8796,
											"name": "PUSH",
											"source": 5,
											"value": "4E487B71"
										},
										{
											"begin": 8781,
											"end": 8784,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 8777,
											"end": 8797,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 8774,
											"end": 8775,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8767,
											"end": 8798,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8817,
											"end": 8821,
											"name": "PUSH",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 8814,
											"end": 8815,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 8807,
											"end": 8822,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8841,
											"end": 8845,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 8838,
											"end": 8839,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8831,
											"end": 8846,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 9417,
											"end": 9707,
											"name": "tag",
											"source": 5,
											"value": "202"
										},
										{
											"begin": 9417,
											"end": 9707,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9486,
											"end": 9492,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9539,
											"end": 9541,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9527,
											"end": 9536,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9518,
											"end": 9525,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 9514,
											"end": 9537,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 9510,
											"end": 9542,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 9507,
											"end": 9559,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 9507,
											"end": 9559,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "470"
										},
										{
											"begin": 9507,
											"end": 9559,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 9555,
											"end": 9556,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9552,
											"end": 9553,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 9545,
											"end": 9557,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 9507,
											"end": 9559,
											"name": "tag",
											"source": 5,
											"value": "470"
										},
										{
											"begin": 9507,
											"end": 9559,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9581,
											"end": 9597,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9581,
											"end": 9597,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 9626,
											"end": 9658,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9626,
											"end": 9658,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9616,
											"end": 9659,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9616,
											"end": 9659,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 9606,
											"end": 9677,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "222"
										},
										{
											"begin": 9606,
											"end": 9677,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 9673,
											"end": 9674,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9670,
											"end": 9671,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 9663,
											"end": 9675,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 9712,
											"end": 10374,
											"name": "tag",
											"source": 5,
											"value": "227"
										},
										{
											"begin": 9712,
											"end": 10374,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9991,
											"end": 10006,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 9991,
											"end": 10006,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9991,
											"end": 10006,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9973,
											"end": 10007,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9973,
											"end": 10007,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10043,
											"end": 10058,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 10043,
											"end": 10058,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 10038,
											"end": 10040,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 10023,
											"end": 10041,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10023,
											"end": 10041,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10016,
											"end": 10059,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10090,
											"end": 10092,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 10075,
											"end": 10093,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10075,
											"end": 10093,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10068,
											"end": 10102,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 10068,
											"end": 10102,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10068,
											"end": 10102,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10138,
											"end": 10141,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 10133,
											"end": 10135,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 10118,
											"end": 10136,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10118,
											"end": 10136,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10111,
											"end": 10142,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10111,
											"end": 10142,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10111,
											"end": 10142,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10158,
											"end": 10177,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10158,
											"end": 10177,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10151,
											"end": 10186,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10151,
											"end": 10186,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10151,
											"end": 10186,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9916,
											"end": 9920,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10179,
											"end": 10185,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10229,
											"end": 10235,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 9953,
											"end": 9956,
											"name": "PUSH",
											"source": 5,
											"value": "A0"
										},
										{
											"begin": 10208,
											"end": 10227,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 10208,
											"end": 10227,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10195,
											"end": 10244,
											"name": "CALLDATACOPY",
											"source": 5
										},
										{
											"begin": 10294,
											"end": 10295,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10288,
											"end": 10291,
											"name": "PUSH",
											"source": 5,
											"value": "A0"
										},
										{
											"begin": 10279,
											"end": 10285,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 10268,
											"end": 10277,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 10264,
											"end": 10286,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10260,
											"end": 10292,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10253,
											"end": 10296,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10364,
											"end": 10367,
											"name": "PUSH",
											"source": 5,
											"value": "A0"
										},
										{
											"begin": 10357,
											"end": 10359,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 10353,
											"end": 10360,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 10348,
											"end": 10350,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 10340,
											"end": 10346,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 10336,
											"end": 10351,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10332,
											"end": 10361,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 10321,
											"end": 10330,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 10317,
											"end": 10362,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10313,
											"end": 10368,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10305,
											"end": 10368,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10305,
											"end": 10368,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9712,
											"end": 10374,
											"name": "SWAP7",
											"source": 5
										},
										{
											"begin": 9712,
											"end": 10374,
											"name": "SWAP6",
											"source": 5
										},
										{
											"begin": 9712,
											"end": 10374,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9712,
											"end": 10374,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9712,
											"end": 10374,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9712,
											"end": 10374,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9712,
											"end": 10374,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9712,
											"end": 10374,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9712,
											"end": 10374,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10379,
											"end": 11400,
											"name": "tag",
											"source": 5,
											"value": "238"
										},
										{
											"begin": 10379,
											"end": 11400,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10555,
											"end": 10558,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10584,
											"end": 10585,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 10617,
											"end": 10623,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 10611,
											"end": 10624,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 10647,
											"end": 10683,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "474"
										},
										{
											"begin": 10673,
											"end": 10682,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10647,
											"end": 10683,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "140"
										},
										{
											"begin": 10647,
											"end": 10683,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10647,
											"end": 10683,
											"name": "tag",
											"source": 5,
											"value": "474"
										},
										{
											"begin": 10647,
											"end": 10683,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10702,
											"end": 10703,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 10719,
											"end": 10736,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10719,
											"end": 10736,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10719,
											"end": 10736,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 10745,
											"end": 10878,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 10745,
											"end": 10878,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 10745,
											"end": 10878,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "476"
										},
										{
											"begin": 10745,
											"end": 10878,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 10892,
											"end": 10893,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 10887,
											"end": 11245,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10887,
											"end": 11245,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 10887,
											"end": 11245,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "477"
										},
										{
											"begin": 10887,
											"end": 11245,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 10712,
											"end": 11245,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "475"
										},
										{
											"begin": 10712,
											"end": 11245,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10745,
											"end": 10878,
											"name": "tag",
											"source": 5,
											"value": "476"
										},
										{
											"begin": 10745,
											"end": 10878,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 10778,
											"end": 10802,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 10778,
											"end": 10802,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 10766,
											"end": 10803,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 10766,
											"end": 10803,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10851,
											"end": 10865,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10851,
											"end": 10865,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 10844,
											"end": 10866,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 10832,
											"end": 10867,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 10832,
											"end": 10867,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 10823,
											"end": 10868,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 10823,
											"end": 10868,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10823,
											"end": 10868,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10745,
											"end": 10878,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "475"
										},
										{
											"begin": 10745,
											"end": 10878,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10887,
											"end": 11245,
											"name": "tag",
											"source": 5,
											"value": "477"
										},
										{
											"begin": 10887,
											"end": 11245,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10918,
											"end": 10924,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 10915,
											"end": 10916,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10908,
											"end": 10925,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10948,
											"end": 10952,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 10993,
											"end": 10997,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 10990,
											"end": 10991,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10980,
											"end": 10998,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 11020,
											"end": 11021,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11034,
											"end": 11199,
											"name": "tag",
											"source": 5,
											"value": "478"
										},
										{
											"begin": 11034,
											"end": 11199,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11048,
											"end": 11054,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 11045,
											"end": 11046,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 11042,
											"end": 11055,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 11034,
											"end": 11199,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 11034,
											"end": 11199,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "480"
										},
										{
											"begin": 11034,
											"end": 11199,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 11126,
											"end": 11140,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 11126,
											"end": 11140,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 11113,
											"end": 11124,
											"name": "DUP11",
											"source": 5
										},
										{
											"begin": 11113,
											"end": 11124,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11113,
											"end": 11124,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 11106,
											"end": 11141,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 11169,
											"end": 11185,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11169,
											"end": 11185,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 11169,
											"end": 11185,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 11169,
											"end": 11185,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11063,
											"end": 11073,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11063,
											"end": 11073,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 11034,
											"end": 11199,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "478"
										},
										{
											"begin": 11034,
											"end": 11199,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11034,
											"end": 11199,
											"name": "tag",
											"source": 5,
											"value": "480"
										},
										{
											"begin": 11034,
											"end": 11199,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11038,
											"end": 11041,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11038,
											"end": 11041,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11038,
											"end": 11041,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11228,
											"end": 11234,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11223,
											"end": 11226,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 11219,
											"end": 11235,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 11212,
											"end": 11235,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 11212,
											"end": 11235,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10712,
											"end": 11245,
											"name": "tag",
											"source": 5,
											"value": "475"
										},
										{
											"begin": 10712,
											"end": 11245,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10712,
											"end": 11245,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10712,
											"end": 11245,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10712,
											"end": 11245,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10712,
											"end": 11245,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11276,
											"end": 11282,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 11270,
											"end": 11283,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 11292,
											"end": 11360,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "481"
										},
										{
											"begin": 11351,
											"end": 11359,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 11346,
											"end": 11349,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 11339,
											"end": 11343,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 11331,
											"end": 11337,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 11327,
											"end": 11344,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 11292,
											"end": 11360,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "369"
										},
										{
											"begin": 11292,
											"end": 11360,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11292,
											"end": 11360,
											"name": "tag",
											"source": 5,
											"value": "481"
										},
										{
											"begin": 11292,
											"end": 11360,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11376,
											"end": 11394,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 11376,
											"end": 11394,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 10379,
											"end": 11400,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10379,
											"end": 11400,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11592,
											"end": 12078,
											"name": "tag",
											"source": 5,
											"value": "263"
										},
										{
											"begin": 11592,
											"end": 12078,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11844,
											"end": 11910,
											"name": "PUSH",
											"source": 5,
											"value": "7B226E616D65223A20224161766547686F737465722023000000000000000000"
										},
										{
											"begin": 11839,
											"end": 11842,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 11832,
											"end": 11911,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 11814,
											"end": 11817,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11940,
											"end": 11946,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11934,
											"end": 11947,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 11956,
											"end": 12031,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "484"
										},
										{
											"begin": 12024,
											"end": 12030,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 12019,
											"end": 12021,
											"name": "PUSH",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 12014,
											"end": 12017,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 12010,
											"end": 12022,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 12003,
											"end": 12007,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 11995,
											"end": 12001,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 11991,
											"end": 12008,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 11956,
											"end": 12031,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "369"
										},
										{
											"begin": 11956,
											"end": 12031,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11956,
											"end": 12031,
											"name": "tag",
											"source": 5,
											"value": "484"
										},
										{
											"begin": 11956,
											"end": 12031,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12051,
											"end": 12067,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 12051,
											"end": 12067,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 12051,
											"end": 12067,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 12051,
											"end": 12067,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 12069,
											"end": 12071,
											"name": "PUSH",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 12047,
											"end": 12072,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 12047,
											"end": 12072,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 11592,
											"end": 12078,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11592,
											"end": 12078,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 12083,
											"end": 13013,
											"name": "tag",
											"source": 5,
											"value": "265"
										},
										{
											"begin": 12083,
											"end": 13013,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12315,
											"end": 12318,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 12353,
											"end": 12359,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 12347,
											"end": 12360,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 12369,
											"end": 12435,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "486"
										},
										{
											"begin": 12428,
											"end": 12434,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 12423,
											"end": 12426,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 12416,
											"end": 12420,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 12408,
											"end": 12414,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 12404,
											"end": 12421,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 12369,
											"end": 12435,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "369"
										},
										{
											"begin": 12369,
											"end": 12435,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 12369,
											"end": 12435,
											"name": "tag",
											"source": 5,
											"value": "486"
										},
										{
											"begin": 12369,
											"end": 12435,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12496,
											"end": 12562,
											"name": "PUSH",
											"source": 5,
											"value": "222C226465736372697074696F6E223A224120636F6C6C656374696F6E206F66"
										},
										{
											"begin": 12457,
											"end": 12473,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 12457,
											"end": 12473,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 12482,
											"end": 12563,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 12482,
											"end": 12563,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 12482,
											"end": 12563,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12597,
											"end": 12631,
											"name": "PUSH",
											"source": 5,
											"value": "2031352C303030204161766547686F7374657220656E61626C65642062792045"
										},
										{
											"begin": 12590,
											"end": 12594,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 12579,
											"end": 12595,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 12579,
											"end": 12595,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 12572,
											"end": 12632,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 12664,
											"end": 12698,
											"name": "PUSH",
											"source": 5,
											"value": "52433430342C20616E206578706572696D656E74616C20746F6B656E20737461"
										},
										{
											"begin": 12659,
											"end": 12661,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 12648,
											"end": 12662,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 12648,
											"end": 12662,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 12641,
											"end": 12699,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 12731,
											"end": 12797,
											"name": "PUSH",
											"source": 5,
											"value": "6E6461726420696E7370697265642062792050616E646F7261222C2265787465"
										},
										{
											"begin": 12726,
											"end": 12728,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 12715,
											"end": 12729,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 12715,
											"end": 12729,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 12708,
											"end": 12798,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 12831,
											"end": 12897,
											"name": "PUSH",
											"source": 5,
											"value": "726E616C5F75726C223A2268747470733A2F2F6161766567686F737465722E6F"
										},
										{
											"begin": 12825,
											"end": 12828,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 12814,
											"end": 12829,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 12814,
											"end": 12829,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 12807,
											"end": 12898,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "373634B73291161134B6B0B3B2911D11"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "81"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12925,
											"end": 12928,
											"name": "PUSH",
											"source": 5,
											"value": "A0"
										},
										{
											"begin": 12914,
											"end": 12929,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 12914,
											"end": 12929,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 12907,
											"end": 12976,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 13003,
											"end": 13006,
											"name": "PUSH",
											"source": 5,
											"value": "B0"
										},
										{
											"begin": 12992,
											"end": 13007,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 12992,
											"end": 13007,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 12083,
											"end": 13013,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12083,
											"end": 13013,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 13018,
											"end": 13514,
											"name": "tag",
											"source": 5,
											"value": "268"
										},
										{
											"begin": 13018,
											"end": 13514,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13197,
											"end": 13200,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 13235,
											"end": 13241,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 13229,
											"end": 13242,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 13251,
											"end": 13317,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "488"
										},
										{
											"begin": 13310,
											"end": 13316,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 13305,
											"end": 13308,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 13298,
											"end": 13302,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 13290,
											"end": 13296,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 13286,
											"end": 13303,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 13251,
											"end": 13317,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "369"
										},
										{
											"begin": 13251,
											"end": 13317,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 13251,
											"end": 13317,
											"name": "tag",
											"source": 5,
											"value": "488"
										},
										{
											"begin": 13251,
											"end": 13317,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13380,
											"end": 13393,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 13380,
											"end": 13393,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 13339,
											"end": 13355,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 13339,
											"end": 13355,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 13339,
											"end": 13355,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 13339,
											"end": 13355,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 13402,
											"end": 13472,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "481"
										},
										{
											"begin": 13380,
											"end": 13393,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 13339,
											"end": 13355,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 13449,
											"end": 13453,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 13437,
											"end": 13454,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 13437,
											"end": 13454,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 13402,
											"end": 13472,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "369"
										},
										{
											"begin": 13402,
											"end": 13472,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 13519,
											"end": 14086,
											"name": "tag",
											"source": 5,
											"value": "270"
										},
										{
											"begin": 13519,
											"end": 14086,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13781,
											"end": 13847,
											"name": "PUSH",
											"source": 5,
											"value": "222C2261747472696275746573223A5B7B2274726169745F74797065223A2243"
										},
										{
											"begin": 13776,
											"end": 13779,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 13769,
											"end": 13848,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 13887,
											"end": 13919,
											"name": "PUSH",
											"source": 5,
											"value": "37B637B91116113B30B63AB2911D11"
										},
										{
											"begin": 13882,
											"end": 13885,
											"name": "PUSH",
											"source": 5,
											"value": "89"
										},
										{
											"begin": 13878,
											"end": 13920,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 13873,
											"end": 13875,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 13868,
											"end": 13871,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 13864,
											"end": 13876,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 13857,
											"end": 13921,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 13751,
											"end": 13754,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 13950,
											"end": 13956,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 13944,
											"end": 13957,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 13966,
											"end": 14039,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "491"
										},
										{
											"begin": 14032,
											"end": 14038,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 14027,
											"end": 14029,
											"name": "PUSH",
											"source": 5,
											"value": "2F"
										},
										{
											"begin": 14022,
											"end": 14025,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 14018,
											"end": 14030,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 14013,
											"end": 14015,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 14005,
											"end": 14011,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 14001,
											"end": 14016,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 13966,
											"end": 14039,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "369"
										},
										{
											"begin": 13966,
											"end": 14039,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 13966,
											"end": 14039,
											"name": "tag",
											"source": 5,
											"value": "491"
										},
										{
											"begin": 13966,
											"end": 14039,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14059,
											"end": 14075,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 14059,
											"end": 14075,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 14059,
											"end": 14075,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 14059,
											"end": 14075,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 14077,
											"end": 14079,
											"name": "PUSH",
											"source": 5,
											"value": "2F"
										},
										{
											"begin": 14055,
											"end": 14080,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 14055,
											"end": 14080,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 13519,
											"end": 14086,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13519,
											"end": 14086,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 14091,
											"end": 14540,
											"name": "tag",
											"source": 5,
											"value": "274"
										},
										{
											"begin": 14091,
											"end": 14540,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14343,
											"end": 14372,
											"name": "PUSH",
											"source": 5,
											"value": "646174613A6170706C69636174696F6E2F6A736F6E3B757466382C0000000000"
										},
										{
											"begin": 14338,
											"end": 14341,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 14331,
											"end": 14373,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 14313,
											"end": 14316,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 14402,
											"end": 14408,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 14396,
											"end": 14409,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 14418,
											"end": 14493,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "493"
										},
										{
											"begin": 14486,
											"end": 14492,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 14481,
											"end": 14483,
											"name": "PUSH",
											"source": 5,
											"value": "1B"
										},
										{
											"begin": 14476,
											"end": 14479,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 14472,
											"end": 14484,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 14465,
											"end": 14469,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 14457,
											"end": 14463,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 14453,
											"end": 14470,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 14418,
											"end": 14493,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "369"
										},
										{
											"begin": 14418,
											"end": 14493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 14418,
											"end": 14493,
											"name": "tag",
											"source": 5,
											"value": "493"
										},
										{
											"begin": 14418,
											"end": 14493,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14513,
											"end": 14529,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 14513,
											"end": 14529,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 14513,
											"end": 14529,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 14513,
											"end": 14529,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 14531,
											"end": 14533,
											"name": "PUSH",
											"source": 5,
											"value": "1B"
										},
										{
											"begin": 14509,
											"end": 14534,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 14509,
											"end": 14534,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 14091,
											"end": 14540,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14091,
											"end": 14540,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 14545,
											"end": 14961,
											"name": "tag",
											"source": 5,
											"value": "376"
										},
										{
											"begin": 14545,
											"end": 14961,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14634,
											"end": 14635,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 14671,
											"end": 14676,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 14634,
											"end": 14635,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 14685,
											"end": 14955,
											"name": "tag",
											"source": 5,
											"value": "495"
										},
										{
											"begin": 14685,
											"end": 14955,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14706,
											"end": 14713,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 14696,
											"end": 14704,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 14693,
											"end": 14714,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 14685,
											"end": 14955,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 14685,
											"end": 14955,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "497"
										},
										{
											"begin": 14685,
											"end": 14955,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 14765,
											"end": 14769,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 14761,
											"end": 14762,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 14757,
											"end": 14763,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 14753,
											"end": 14770,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 14747,
											"end": 14751,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 14744,
											"end": 14771,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 14741,
											"end": 14794,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 14741,
											"end": 14794,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "499"
										},
										{
											"begin": 14741,
											"end": 14794,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 14774,
											"end": 14792,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "499"
										},
										{
											"begin": 14774,
											"end": 14792,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "375"
										},
										{
											"begin": 14774,
											"end": 14792,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 14774,
											"end": 14792,
											"name": "tag",
											"source": 5,
											"value": "499"
										},
										{
											"begin": 14774,
											"end": 14792,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14824,
											"end": 14831,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 14814,
											"end": 14822,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 14810,
											"end": 14832,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 14807,
											"end": 14862,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 14807,
											"end": 14862,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "500"
										},
										{
											"begin": 14807,
											"end": 14862,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 14844,
											"end": 14860,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 14844,
											"end": 14860,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 14844,
											"end": 14860,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 14844,
											"end": 14860,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 14807,
											"end": 14862,
											"name": "tag",
											"source": 5,
											"value": "500"
										},
										{
											"begin": 14807,
											"end": 14862,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14923,
											"end": 14945,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 14923,
											"end": 14945,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 14923,
											"end": 14945,
											"name": "SHR",
											"source": 5
										},
										{
											"begin": 14923,
											"end": 14945,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 14883,
											"end": 14898,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 14883,
											"end": 14898,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 14883,
											"end": 14898,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 14883,
											"end": 14898,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 14685,
											"end": 14955,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "495"
										},
										{
											"begin": 14685,
											"end": 14955,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 14685,
											"end": 14955,
											"name": "tag",
											"source": 5,
											"value": "497"
										},
										{
											"begin": 14685,
											"end": 14955,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14689,
											"end": 14692,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14545,
											"end": 14961,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 14545,
											"end": 14961,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14545,
											"end": 14961,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 14545,
											"end": 14961,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 14545,
											"end": 14961,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14545,
											"end": 14961,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 14966,
											"end": 15772,
											"name": "tag",
											"source": 5,
											"value": "377"
										},
										{
											"begin": 14966,
											"end": 15772,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15015,
											"end": 15020,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 15045,
											"end": 15053,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 15035,
											"end": 15115,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "502"
										},
										{
											"begin": 15035,
											"end": 15115,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15086,
											"end": 15087,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 15100,
											"end": 15105,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "145"
										},
										{
											"begin": 15100,
											"end": 15105,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 15035,
											"end": 15115,
											"name": "tag",
											"source": 5,
											"value": "502"
										},
										{
											"begin": 15035,
											"end": 15115,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15134,
											"end": 15138,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 15124,
											"end": 15200,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "503"
										},
										{
											"begin": 15124,
											"end": 15200,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15171,
											"end": 15172,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 15185,
											"end": 15190,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "145"
										},
										{
											"begin": 15185,
											"end": 15190,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 15124,
											"end": 15200,
											"name": "tag",
											"source": 5,
											"value": "503"
										},
										{
											"begin": 15124,
											"end": 15200,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15216,
											"end": 15220,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 15234,
											"end": 15235,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 15229,
											"end": 15288,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 15229,
											"end": 15288,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 15229,
											"end": 15288,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "505"
										},
										{
											"begin": 15229,
											"end": 15288,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 15302,
											"end": 15303,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 15297,
											"end": 15427,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 15297,
											"end": 15427,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 15297,
											"end": 15427,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "506"
										},
										{
											"begin": 15297,
											"end": 15427,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 15209,
											"end": 15427,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "504"
										},
										{
											"begin": 15209,
											"end": 15427,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 15229,
											"end": 15288,
											"name": "tag",
											"source": 5,
											"value": "505"
										},
										{
											"begin": 15229,
											"end": 15288,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15259,
											"end": 15260,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 15250,
											"end": 15260,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 15250,
											"end": 15260,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 15273,
											"end": 15278,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 15273,
											"end": 15278,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "145"
										},
										{
											"begin": 15273,
											"end": 15278,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 15297,
											"end": 15427,
											"name": "tag",
											"source": 5,
											"value": "506"
										},
										{
											"begin": 15297,
											"end": 15427,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15334,
											"end": 15337,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 15324,
											"end": 15332,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 15321,
											"end": 15338,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 15318,
											"end": 15361,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 15318,
											"end": 15361,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "508"
										},
										{
											"begin": 15318,
											"end": 15361,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 15341,
											"end": 15359,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "508"
										},
										{
											"begin": 15341,
											"end": 15359,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "375"
										},
										{
											"begin": 15341,
											"end": 15359,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 15341,
											"end": 15359,
											"name": "tag",
											"source": 5,
											"value": "508"
										},
										{
											"begin": 15341,
											"end": 15359,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15397,
											"end": 15398,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 15383,
											"end": 15399,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 15383,
											"end": 15399,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 15412,
											"end": 15417,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "145"
										},
										{
											"begin": 15412,
											"end": 15417,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 15209,
											"end": 15427,
											"name": "tag",
											"source": 5,
											"value": "504"
										},
										{
											"begin": 15209,
											"end": 15427,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15209,
											"end": 15427,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 15511,
											"end": 15513,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 15501,
											"end": 15509,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 15498,
											"end": 15514,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 15492,
											"end": 15495,
											"name": "PUSH",
											"source": 5,
											"value": "133"
										},
										{
											"begin": 15486,
											"end": 15490,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 15483,
											"end": 15496,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 15479,
											"end": 15515,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 15473,
											"end": 15475,
											"name": "PUSH",
											"source": 5,
											"value": "4E"
										},
										{
											"begin": 15463,
											"end": 15471,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 15460,
											"end": 15476,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 15455,
											"end": 15457,
											"name": "PUSH",
											"source": 5,
											"value": "B"
										},
										{
											"begin": 15449,
											"end": 15453,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 15446,
											"end": 15458,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 15442,
											"end": 15477,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 15439,
											"end": 15516,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 15436,
											"end": 15595,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 15436,
											"end": 15595,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "509"
										},
										{
											"begin": 15436,
											"end": 15595,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15548,
											"end": 15567,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 15548,
											"end": 15567,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 15548,
											"end": 15567,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 15580,
											"end": 15585,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "145"
										},
										{
											"begin": 15580,
											"end": 15585,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 15436,
											"end": 15595,
											"name": "tag",
											"source": 5,
											"value": "509"
										},
										{
											"begin": 15436,
											"end": 15595,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15627,
											"end": 15661,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "510"
										},
										{
											"begin": 15652,
											"end": 15660,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 15646,
											"end": 15650,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 15627,
											"end": 15661,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "376"
										},
										{
											"begin": 15627,
											"end": 15661,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 15627,
											"end": 15661,
											"name": "tag",
											"source": 5,
											"value": "510"
										},
										{
											"begin": 15627,
											"end": 15661,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15697,
											"end": 15703,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 15693,
											"end": 15694,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 15689,
											"end": 15695,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 15685,
											"end": 15704,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 15676,
											"end": 15683,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 15673,
											"end": 15705,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 15670,
											"end": 15728,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 15670,
											"end": 15728,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "512"
										},
										{
											"begin": 15670,
											"end": 15728,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 15708,
											"end": 15726,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "512"
										},
										{
											"begin": 15708,
											"end": 15726,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "375"
										},
										{
											"begin": 15708,
											"end": 15726,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 15708,
											"end": 15726,
											"name": "tag",
											"source": 5,
											"value": "512"
										},
										{
											"begin": 15708,
											"end": 15726,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15746,
											"end": 15766,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 15746,
											"end": 15766,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 14966,
											"end": 15772,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14966,
											"end": 15772,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 15777,
											"end": 15917,
											"name": "tag",
											"source": 5,
											"value": "295"
										},
										{
											"begin": 15777,
											"end": 15917,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15835,
											"end": 15840,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 15864,
											"end": 15911,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "222"
										},
										{
											"begin": 15905,
											"end": 15909,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 15895,
											"end": 15903,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 15891,
											"end": 15910,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 15885,
											"end": 15889,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 15864,
											"end": 15911,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "377"
										},
										{
											"begin": 15864,
											"end": 15911,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 16054,
											"end": 16271,
											"name": "tag",
											"source": 5,
											"value": "301"
										},
										{
											"begin": 16054,
											"end": 16271,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 16094,
											"end": 16095,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 16120,
											"end": 16121,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 16110,
											"end": 16242,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "517"
										},
										{
											"begin": 16110,
											"end": 16242,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 16164,
											"end": 16174,
											"name": "PUSH",
											"source": 5,
											"value": "4E487B71"
										},
										{
											"begin": 16159,
											"end": 16162,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 16155,
											"end": 16175,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 16152,
											"end": 16153,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 16145,
											"end": 16176,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 16199,
											"end": 16203,
											"name": "PUSH",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 16196,
											"end": 16197,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 16189,
											"end": 16204,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 16227,
											"end": 16231,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 16224,
											"end": 16225,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 16217,
											"end": 16232,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 16110,
											"end": 16242,
											"name": "tag",
											"source": 5,
											"value": "517"
										},
										{
											"begin": 16110,
											"end": 16242,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16256,
											"end": 16265,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 16256,
											"end": 16265,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 16054,
											"end": 16271,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/AaveGhoster.sol",
								"contracts/ERC404.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"baseTokenURI()": "d547cfb7",
							"dataURI()": "f28ca1dd",
							"decimals()": "313ce567",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"minted()": "4f02c420",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"ownerOf(uint256)": "6352211e",
							"revokeOwnership()": "2b968958",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"setDataURI(string)": "18d217c3",
							"setNameSymbol(string,string)": "504334c2",
							"setTokenURI(string)": "e0df5b6f",
							"setWhitelist(address,bool)": "53d6fd59",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b",
							"whitelist(address)": "9b19251a"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AlreadyExists\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidRecipient\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidSender\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotFound\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Unauthorized\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UnsafeRecipient\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"ERC20Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"ERC721Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountOrId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"baseTokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"dataURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minted\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"revokeOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_dataURI\",\"type\":\"string\"}],\"name\":\"setDataURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"}],\"name\":\"setNameSymbol\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_tokenURI\",\"type\":\"string\"}],\"name\":\"setTokenURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"state\",\"type\":\"bool\"}],\"name\":\"setWhitelist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountOrId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"whitelist\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"This function assumes id / native if amount less than or equal to current max id\"},\"transferFrom(address,address,uint256)\":{\"details\":\"This function assumes id / native if amount less than or equal to current max id\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"approve(address,uint256)\":{\"notice\":\"Function for token approvals\"},\"ownerOf(uint256)\":{\"notice\":\"Function to find owner of a given native token\"},\"safeTransferFrom(address,address,uint256)\":{\"notice\":\"Function for native transfers with contract support\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"notice\":\"Function for native transfers with contract support and callback data\"},\"setApprovalForAll(address,bool)\":{\"notice\":\"Function native approvals\"},\"setWhitelist(address,bool)\":{\"notice\":\"Initialization function to set pairs / etc         saving gas by avoiding mint / burn on unnecessary targets\"},\"tokenURI(uint256)\":{\"notice\":\"tokenURI must be implemented by child contract\"},\"transfer(address,uint256)\":{\"notice\":\"Function for fractional transfers\"},\"transferFrom(address,address,uint256)\":{\"notice\":\"Function for mixed transfers\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/AaveGhoster.sol\":\"AaveGhoster\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x67a2b2ae89fb58296365a5a812a632a6ee362535394a7b6031e12111b1f498e1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d371806a8c2d915e2b96b8ce9379e7ff8cab58abc822137332f8989f9e85e263\",\"dweb:/ipfs/QmSZRkuVNnGBAWcgjxNUXAhxj1ULGKL2YgAo2wWrJ2fNAo\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x3c2ebcf13322b0447982e0763851269e9df977261616b98c548aef656cde2cde\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://51a50f8345de0874e93ade40fd70cbad49a072e91079b75b4679bb831c84a037\",\"dweb:/ipfs/QmdGgSJzcPcPmjGuEhQt2avC54H81CBcckkSwSpeK5jXdd\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x8f869b2d076970ca6c502f4a5a31e89d410af3971c4871933a037ad055d6f13a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef0e29cd5bedfe971de1719c106a04423789e8343e29e88efbd00475bf53e8ed\",\"dweb:/ipfs/QmUs8ayyPBrGEuqe58GBpAoXvf3P8LwNSniR3xn6eLpQit\"]},\"contracts/AaveGhoster.sol\":{\"keccak256\":\"0x859ec9ac49d5fff892d3af02530ad0510404d4345487fcd3c861f1d54e2118d7\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://81da73de811ff6c72ec82be64b209b77ad612e18c8dc134b24c57355a9fa3af5\",\"dweb:/ipfs/QmQNkCdUi2JS2nJpZHv1kXPCuzcRsTP2ys9TELwHrjtZFf\"]},\"contracts/ERC404.sol\":{\"keccak256\":\"0xbb1ef4e5866d3b8bcbf5f248e0b13e43498e649488be2e77108166bbd8debd89\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://34f1aa6e7f34b2a692d542d312b84a414243a6214fd78efecb10110c8afcde63\",\"dweb:/ipfs/QmbKc56M7fkTiQR8tPYnRhUfz5m1eNZ5PJJi2BbijrYJwY\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1737,
								"contract": "contracts/AaveGhoster.sol:AaveGhoster",
								"label": "owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 1903,
								"contract": "contracts/AaveGhoster.sol:AaveGhoster",
								"label": "name",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 1906,
								"contract": "contracts/AaveGhoster.sol:AaveGhoster",
								"label": "symbol",
								"offset": 0,
								"slot": "2",
								"type": "t_string_storage"
							},
							{
								"astId": 1915,
								"contract": "contracts/AaveGhoster.sol:AaveGhoster",
								"label": "minted",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 1920,
								"contract": "contracts/AaveGhoster.sol:AaveGhoster",
								"label": "balanceOf",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 1927,
								"contract": "contracts/AaveGhoster.sol:AaveGhoster",
								"label": "allowance",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 1932,
								"contract": "contracts/AaveGhoster.sol:AaveGhoster",
								"label": "getApproved",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 1939,
								"contract": "contracts/AaveGhoster.sol:AaveGhoster",
								"label": "isApprovedForAll",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 1944,
								"contract": "contracts/AaveGhoster.sol:AaveGhoster",
								"label": "_ownerOf",
								"offset": 0,
								"slot": "8",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 1950,
								"contract": "contracts/AaveGhoster.sol:AaveGhoster",
								"label": "_owned",
								"offset": 0,
								"slot": "9",
								"type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)"
							},
							{
								"astId": 1955,
								"contract": "contracts/AaveGhoster.sol:AaveGhoster",
								"label": "_ownedIndex",
								"offset": 0,
								"slot": "10",
								"type": "t_mapping(t_uint256,t_uint256)"
							},
							{
								"astId": 1960,
								"contract": "contracts/AaveGhoster.sol:AaveGhoster",
								"label": "whitelist",
								"offset": 0,
								"slot": "11",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 1421,
								"contract": "contracts/AaveGhoster.sol:AaveGhoster",
								"label": "dataURI",
								"offset": 0,
								"slot": "12",
								"type": "t_string_storage"
							},
							{
								"astId": 1423,
								"contract": "contracts/AaveGhoster.sol:AaveGhoster",
								"label": "baseTokenURI",
								"offset": 0,
								"slot": "13",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_uint256)dyn_storage": {
								"base": "t_uint256",
								"encoding": "dynamic_array",
								"label": "uint256[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256[])",
								"numberOfBytes": "32",
								"value": "t_array(t_uint256)dyn_storage"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_mapping(t_uint256,t_uint256)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"approve(address,uint256)": {
								"notice": "Function for token approvals"
							},
							"ownerOf(uint256)": {
								"notice": "Function to find owner of a given native token"
							},
							"safeTransferFrom(address,address,uint256)": {
								"notice": "Function for native transfers with contract support"
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"notice": "Function for native transfers with contract support and callback data"
							},
							"setApprovalForAll(address,bool)": {
								"notice": "Function native approvals"
							},
							"setWhitelist(address,bool)": {
								"notice": "Initialization function to set pairs / etc         saving gas by avoiding mint / burn on unnecessary targets"
							},
							"tokenURI(uint256)": {
								"notice": "tokenURI must be implemented by child contract"
							},
							"transfer(address,uint256)": {
								"notice": "Function for fractional transfers"
							},
							"transferFrom(address,address,uint256)": {
								"notice": "Function for mixed transfers"
							}
						},
						"version": 1
					}
				}
			},
			"contracts/ERC404.sol": {
				"ERC404": {
					"abi": [
						{
							"inputs": [],
							"name": "AlreadyExists",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidRecipient",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidSender",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotFound",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "Unauthorized",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "UnsafeRecipient",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "ERC20Transfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "ERC721Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amountOrId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "minted",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "revokeOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "state",
									"type": "bool"
								}
							],
							"name": "setWhitelist",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amountOrId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "whitelist",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "In order to support full functionality of ERC20 and ERC721         supply assumptions are made that slightly constraint usage.         Ensure decimals are sufficiently large (standard 18 recommended)         as ids are effectively encoded in the lowest range of amounts.         NFTs are spent on ERC20 functions in a FILO queue, this is by         design.",
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "This function assumes id / native if amount less than or equal to current max id"
							},
							"transferFrom(address,address,uint256)": {
								"details": "This function assumes id / native if amount less than or equal to current max id"
							}
						},
						"stateVariables": {
							"_owned": {
								"details": "Array of owned ids in native representation"
							},
							"_ownedIndex": {
								"details": "Tracks indices for the _owned mapping"
							},
							"_ownerOf": {
								"details": "Owner of id in native representation"
							},
							"allowance": {
								"details": "Allowance of user in fractional representation"
							},
							"balanceOf": {
								"details": "Balance of user in fractional representation"
							},
							"decimals": {
								"details": "Decimals for fractional representation"
							},
							"getApproved": {
								"details": "Approval in native representaion"
							},
							"isApprovedForAll": {
								"details": "Approval for all in native representation"
							},
							"minted": {
								"details": "Current mint counter, monotonically increasing to ensure accurate ownership"
							},
							"name": {
								"details": "Token name"
							},
							"symbol": {
								"details": "Token symbol"
							},
							"totalSupply": {
								"details": "Total supply in fractionalized representation"
							},
							"whitelist": {
								"details": "Addresses whitelisted from minting / burning for gas savings (pairs, routers, etc)"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"minted()": "4f02c420",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"ownerOf(uint256)": "6352211e",
							"revokeOwnership()": "2b968958",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"setWhitelist(address,bool)": "53d6fd59",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b",
							"whitelist(address)": "9b19251a"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AlreadyExists\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidRecipient\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidSender\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotFound\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Unauthorized\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UnsafeRecipient\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"ERC20Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"ERC721Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountOrId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minted\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"revokeOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"state\",\"type\":\"bool\"}],\"name\":\"setWhitelist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountOrId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"whitelist\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"In order to support full functionality of ERC20 and ERC721         supply assumptions are made that slightly constraint usage.         Ensure decimals are sufficiently large (standard 18 recommended)         as ids are effectively encoded in the lowest range of amounts.         NFTs are spent on ERC20 functions in a FILO queue, this is by         design.\",\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"This function assumes id / native if amount less than or equal to current max id\"},\"transferFrom(address,address,uint256)\":{\"details\":\"This function assumes id / native if amount less than or equal to current max id\"}},\"stateVariables\":{\"_owned\":{\"details\":\"Array of owned ids in native representation\"},\"_ownedIndex\":{\"details\":\"Tracks indices for the _owned mapping\"},\"_ownerOf\":{\"details\":\"Owner of id in native representation\"},\"allowance\":{\"details\":\"Allowance of user in fractional representation\"},\"balanceOf\":{\"details\":\"Balance of user in fractional representation\"},\"decimals\":{\"details\":\"Decimals for fractional representation\"},\"getApproved\":{\"details\":\"Approval in native representaion\"},\"isApprovedForAll\":{\"details\":\"Approval for all in native representation\"},\"minted\":{\"details\":\"Current mint counter, monotonically increasing to ensure accurate ownership\"},\"name\":{\"details\":\"Token name\"},\"symbol\":{\"details\":\"Token symbol\"},\"totalSupply\":{\"details\":\"Total supply in fractionalized representation\"},\"whitelist\":{\"details\":\"Addresses whitelisted from minting / burning for gas savings (pairs, routers, etc)\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"approve(address,uint256)\":{\"notice\":\"Function for token approvals\"},\"ownerOf(uint256)\":{\"notice\":\"Function to find owner of a given native token\"},\"safeTransferFrom(address,address,uint256)\":{\"notice\":\"Function for native transfers with contract support\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"notice\":\"Function for native transfers with contract support and callback data\"},\"setApprovalForAll(address,bool)\":{\"notice\":\"Function native approvals\"},\"setWhitelist(address,bool)\":{\"notice\":\"Initialization function to set pairs / etc         saving gas by avoiding mint / burn on unnecessary targets\"},\"tokenURI(uint256)\":{\"notice\":\"tokenURI must be implemented by child contract\"},\"transfer(address,uint256)\":{\"notice\":\"Function for fractional transfers\"},\"transferFrom(address,address,uint256)\":{\"notice\":\"Function for mixed transfers\"}},\"notice\":\"ERC404         A gas-efficient, mixed ERC20 / ERC721 implementation         with native liquidity and fractionalization.         This is an experimental standard designed to integrate         with pre-existing ERC20 / ERC721 support as smoothly as         possible.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ERC404.sol\":\"ERC404\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/ERC404.sol\":{\"keccak256\":\"0xbb1ef4e5866d3b8bcbf5f248e0b13e43498e649488be2e77108166bbd8debd89\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://34f1aa6e7f34b2a692d542d312b84a414243a6214fd78efecb10110c8afcde63\",\"dweb:/ipfs/QmbKc56M7fkTiQR8tPYnRhUfz5m1eNZ5PJJi2BbijrYJwY\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1737,
								"contract": "contracts/ERC404.sol:ERC404",
								"label": "owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 1903,
								"contract": "contracts/ERC404.sol:ERC404",
								"label": "name",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 1906,
								"contract": "contracts/ERC404.sol:ERC404",
								"label": "symbol",
								"offset": 0,
								"slot": "2",
								"type": "t_string_storage"
							},
							{
								"astId": 1915,
								"contract": "contracts/ERC404.sol:ERC404",
								"label": "minted",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 1920,
								"contract": "contracts/ERC404.sol:ERC404",
								"label": "balanceOf",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 1927,
								"contract": "contracts/ERC404.sol:ERC404",
								"label": "allowance",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 1932,
								"contract": "contracts/ERC404.sol:ERC404",
								"label": "getApproved",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 1939,
								"contract": "contracts/ERC404.sol:ERC404",
								"label": "isApprovedForAll",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 1944,
								"contract": "contracts/ERC404.sol:ERC404",
								"label": "_ownerOf",
								"offset": 0,
								"slot": "8",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 1950,
								"contract": "contracts/ERC404.sol:ERC404",
								"label": "_owned",
								"offset": 0,
								"slot": "9",
								"type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)"
							},
							{
								"astId": 1955,
								"contract": "contracts/ERC404.sol:ERC404",
								"label": "_ownedIndex",
								"offset": 0,
								"slot": "10",
								"type": "t_mapping(t_uint256,t_uint256)"
							},
							{
								"astId": 1960,
								"contract": "contracts/ERC404.sol:ERC404",
								"label": "whitelist",
								"offset": 0,
								"slot": "11",
								"type": "t_mapping(t_address,t_bool)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_uint256)dyn_storage": {
								"base": "t_uint256",
								"encoding": "dynamic_array",
								"label": "uint256[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256[])",
								"numberOfBytes": "32",
								"value": "t_array(t_uint256)dyn_storage"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_mapping(t_uint256,t_uint256)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"approve(address,uint256)": {
								"notice": "Function for token approvals"
							},
							"ownerOf(uint256)": {
								"notice": "Function to find owner of a given native token"
							},
							"safeTransferFrom(address,address,uint256)": {
								"notice": "Function for native transfers with contract support"
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"notice": "Function for native transfers with contract support and callback data"
							},
							"setApprovalForAll(address,bool)": {
								"notice": "Function native approvals"
							},
							"setWhitelist(address,bool)": {
								"notice": "Initialization function to set pairs / etc         saving gas by avoiding mint / burn on unnecessary targets"
							},
							"tokenURI(uint256)": {
								"notice": "tokenURI must be implemented by child contract"
							},
							"transfer(address,uint256)": {
								"notice": "Function for fractional transfers"
							},
							"transferFrom(address,address,uint256)": {
								"notice": "Function for mixed transfers"
							}
						},
						"notice": "ERC404         A gas-efficient, mixed ERC20 / ERC721 implementation         with native liquidity and fractionalization.         This is an experimental standard designed to integrate         with pre-existing ERC20 / ERC721 support as smoothly as         possible.",
						"version": 1
					}
				},
				"ERC721Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"name": "onERC721Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC721Received(address,address,uint256,bytes)": "150b7a02"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ERC404.sol\":\"ERC721Receiver\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/ERC404.sol\":{\"keccak256\":\"0xbb1ef4e5866d3b8bcbf5f248e0b13e43498e649488be2e77108166bbd8debd89\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://34f1aa6e7f34b2a692d542d312b84a414243a6214fd78efecb10110c8afcde63\",\"dweb:/ipfs/QmbKc56M7fkTiQR8tPYnRhUfz5m1eNZ5PJJi2BbijrYJwY\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Ownable": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "Unauthorized",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "revokeOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"revokeOwnership()": "2b968958",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Unauthorized\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"revokeOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ERC404.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/ERC404.sol\":{\"keccak256\":\"0xbb1ef4e5866d3b8bcbf5f248e0b13e43498e649488be2e77108166bbd8debd89\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://34f1aa6e7f34b2a692d542d312b84a414243a6214fd78efecb10110c8afcde63\",\"dweb:/ipfs/QmbKc56M7fkTiQR8tPYnRhUfz5m1eNZ5PJJi2BbijrYJwY\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1737,
								"contract": "contracts/ERC404.sol:Ownable",
								"label": "owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/utils/Strings.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
					"exportedSymbols": {
						"Math": [
							1308
						],
						"SignedMath": [
							1413
						],
						"Strings": [
							254
						]
					},
					"id": 255,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
							"file": "./math/Math.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 255,
							"sourceUnit": 1309,
							"src": "127:37:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Math",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1308,
										"src": "135:4:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SignedMath.sol",
							"file": "./math/SignedMath.sol",
							"id": 5,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 255,
							"sourceUnit": 1414,
							"src": "165:49:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 4,
										"name": "SignedMath",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1413,
										"src": "173:10:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Strings",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 6,
								"nodeType": "StructuredDocumentation",
								"src": "216:34:0",
								"text": " @dev String operations."
							},
							"fullyImplemented": true,
							"id": 254,
							"linearizedBaseContracts": [
								254
							],
							"name": "Strings",
							"nameLocation": "259:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 9,
									"mutability": "constant",
									"name": "HEX_DIGITS",
									"nameLocation": "298:10:0",
									"nodeType": "VariableDeclaration",
									"scope": 254,
									"src": "273:56:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes16",
										"typeString": "bytes16"
									},
									"typeName": {
										"id": 7,
										"name": "bytes16",
										"nodeType": "ElementaryTypeName",
										"src": "273:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes16",
											"typeString": "bytes16"
										}
									},
									"value": {
										"hexValue": "30313233343536373839616263646566",
										"id": 8,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "311:18:0",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f",
											"typeString": "literal_string \"0123456789abcdef\""
										},
										"value": "0123456789abcdef"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 12,
									"mutability": "constant",
									"name": "ADDRESS_LENGTH",
									"nameLocation": "358:14:0",
									"nodeType": "VariableDeclaration",
									"scope": 254,
									"src": "335:42:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 10,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "335:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3230",
										"id": 11,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "375:2:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_20_by_1",
											"typeString": "int_const 20"
										},
										"value": "20"
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 13,
										"nodeType": "StructuredDocumentation",
										"src": "384:81:0",
										"text": " @dev The `value` string doesn't fit in the specified `length`."
									},
									"errorSelector": "e22e27eb",
									"id": 19,
									"name": "StringsInsufficientHexLength",
									"nameLocation": "476:28:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 18,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 15,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "513:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 19,
												"src": "505:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 14,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "505:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 17,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "528:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 19,
												"src": "520:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 16,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "520:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "504:31:0"
									},
									"src": "470:66:0"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "708:627:0",
										"statements": [
											{
												"id": 65,
												"nodeType": "UncheckedBlock",
												"src": "718:611:0",
												"statements": [
													{
														"assignments": [
															28
														],
														"declarations": [
															{
																"constant": false,
																"id": 28,
																"mutability": "mutable",
																"name": "length",
																"nameLocation": "750:6:0",
																"nodeType": "VariableDeclaration",
																"scope": 65,
																"src": "742:14:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 27,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "742:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 35,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 34,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 31,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 22,
																		"src": "770:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 29,
																		"name": "Math",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1308,
																		"src": "759:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Math_$1308_$",
																			"typeString": "type(library Math)"
																		}
																	},
																	"id": 30,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "764:5:0",
																	"memberName": "log10",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1128,
																	"src": "759:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (uint256)"
																	}
																},
																"id": 32,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "759:17:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "31",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "779:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "759:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "742:38:0"
													},
													{
														"assignments": [
															37
														],
														"declarations": [
															{
																"constant": false,
																"id": 37,
																"mutability": "mutable",
																"name": "buffer",
																"nameLocation": "808:6:0",
																"nodeType": "VariableDeclaration",
																"scope": 65,
																"src": "794:20:0",
																"stateVariable": false,
																"storageLocation": "memory",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string"
																},
																"typeName": {
																	"id": 36,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "794:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 42,
														"initialValue": {
															"arguments": [
																{
																	"id": 40,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 28,
																	"src": "828:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 39,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "NewExpression",
																"src": "817:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																},
																"typeName": {
																	"id": 38,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "821:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																}
															},
															"id": 41,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "817:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "794:41:0"
													},
													{
														"assignments": [
															44
														],
														"declarations": [
															{
																"constant": false,
																"id": 44,
																"mutability": "mutable",
																"name": "ptr",
																"nameLocation": "857:3:0",
																"nodeType": "VariableDeclaration",
																"scope": 65,
																"src": "849:11:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 43,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "849:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 45,
														"nodeType": "VariableDeclarationStatement",
														"src": "849:11:0"
													},
													{
														"AST": {
															"nativeSrc": "930:67:0",
															"nodeType": "YulBlock",
															"src": "930:67:0",
															"statements": [
																{
																	"nativeSrc": "948:35:0",
																	"nodeType": "YulAssignment",
																	"src": "948:35:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "buffer",
																				"nativeSrc": "959:6:0",
																				"nodeType": "YulIdentifier",
																				"src": "959:6:0"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "971:2:0",
																						"nodeType": "YulLiteral",
																						"src": "971:2:0",
																						"type": "",
																						"value": "32"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "975:6:0",
																						"nodeType": "YulIdentifier",
																						"src": "975:6:0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "967:3:0",
																					"nodeType": "YulIdentifier",
																					"src": "967:3:0"
																				},
																				"nativeSrc": "967:15:0",
																				"nodeType": "YulFunctionCall",
																				"src": "967:15:0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "955:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "955:3:0"
																		},
																		"nativeSrc": "955:28:0",
																		"nodeType": "YulFunctionCall",
																		"src": "955:28:0"
																	},
																	"variableNames": [
																		{
																			"name": "ptr",
																			"nativeSrc": "948:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "948:3:0"
																		}
																	]
																}
															]
														},
														"documentation": "@solidity memory-safe-assembly",
														"evmVersion": "paris",
														"externalReferences": [
															{
																"declaration": 37,
																"isOffset": false,
																"isSlot": false,
																"src": "959:6:0",
																"valueSize": 1
															},
															{
																"declaration": 28,
																"isOffset": false,
																"isSlot": false,
																"src": "975:6:0",
																"valueSize": 1
															},
															{
																"declaration": 44,
																"isOffset": false,
																"isSlot": false,
																"src": "948:3:0",
																"valueSize": 1
															}
														],
														"id": 46,
														"nodeType": "InlineAssembly",
														"src": "921:76:0"
													},
													{
														"body": {
															"id": 61,
															"nodeType": "Block",
															"src": "1023:269:0",
															"statements": [
																{
																	"expression": {
																		"id": 49,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "--",
																		"prefix": false,
																		"src": "1041:5:0",
																		"subExpression": {
																			"id": 48,
																			"name": "ptr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 44,
																			"src": "1041:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 50,
																	"nodeType": "ExpressionStatement",
																	"src": "1041:5:0"
																},
																{
																	"AST": {
																		"nativeSrc": "1124:86:0",
																		"nodeType": "YulBlock",
																		"src": "1124:86:0",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "ptr",
																							"nativeSrc": "1154:3:0",
																							"nodeType": "YulIdentifier",
																							"src": "1154:3:0"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value",
																											"nativeSrc": "1168:5:0",
																											"nodeType": "YulIdentifier",
																											"src": "1168:5:0"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "1175:2:0",
																											"nodeType": "YulLiteral",
																											"src": "1175:2:0",
																											"type": "",
																											"value": "10"
																										}
																									],
																									"functionName": {
																										"name": "mod",
																										"nativeSrc": "1164:3:0",
																										"nodeType": "YulIdentifier",
																										"src": "1164:3:0"
																									},
																									"nativeSrc": "1164:14:0",
																									"nodeType": "YulFunctionCall",
																									"src": "1164:14:0"
																								},
																								{
																									"name": "HEX_DIGITS",
																									"nativeSrc": "1180:10:0",
																									"nodeType": "YulIdentifier",
																									"src": "1180:10:0"
																								}
																							],
																							"functionName": {
																								"name": "byte",
																								"nativeSrc": "1159:4:0",
																								"nodeType": "YulIdentifier",
																								"src": "1159:4:0"
																							},
																							"nativeSrc": "1159:32:0",
																							"nodeType": "YulFunctionCall",
																							"src": "1159:32:0"
																						}
																					],
																					"functionName": {
																						"name": "mstore8",
																						"nativeSrc": "1146:7:0",
																						"nodeType": "YulIdentifier",
																						"src": "1146:7:0"
																					},
																					"nativeSrc": "1146:46:0",
																					"nodeType": "YulFunctionCall",
																					"src": "1146:46:0"
																				},
																				"nativeSrc": "1146:46:0",
																				"nodeType": "YulExpressionStatement",
																				"src": "1146:46:0"
																			}
																		]
																	},
																	"documentation": "@solidity memory-safe-assembly",
																	"evmVersion": "paris",
																	"externalReferences": [
																		{
																			"declaration": 9,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1180:10:0",
																			"valueSize": 1
																		},
																		{
																			"declaration": 44,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1154:3:0",
																			"valueSize": 1
																		},
																		{
																			"declaration": 22,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1168:5:0",
																			"valueSize": 1
																		}
																	],
																	"id": 51,
																	"nodeType": "InlineAssembly",
																	"src": "1115:95:0"
																},
																{
																	"expression": {
																		"id": 54,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 52,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 22,
																			"src": "1227:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"hexValue": "3130",
																			"id": 53,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1236:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10_by_1",
																				"typeString": "int_const 10"
																			},
																			"value": "10"
																		},
																		"src": "1227:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 55,
																	"nodeType": "ExpressionStatement",
																	"src": "1227:11:0"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 58,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 56,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 22,
																			"src": "1260:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 57,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1269:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1260:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 60,
																	"nodeType": "IfStatement",
																	"src": "1256:21:0",
																	"trueBody": {
																		"id": 59,
																		"nodeType": "Break",
																		"src": "1272:5:0"
																	}
																}
															]
														},
														"condition": {
															"hexValue": "74727565",
															"id": 47,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1017:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														"id": 62,
														"nodeType": "WhileStatement",
														"src": "1010:282:0"
													},
													{
														"expression": {
															"id": 63,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 37,
															"src": "1312:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 26,
														"id": 64,
														"nodeType": "Return",
														"src": "1305:13:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 20,
										"nodeType": "StructuredDocumentation",
										"src": "542:90:0",
										"text": " @dev Converts a `uint256` to its ASCII `string` decimal representation."
									},
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "646:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 22,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "663:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "655:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 21,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "655:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "654:15:0"
									},
									"returnParameters": {
										"id": 26,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 25,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "693:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 24,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "693:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:15:0"
									},
									"scope": 254,
									"src": "637:698:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 92,
										"nodeType": "Block",
										"src": "1511:92:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 80,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 78,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 70,
																	"src": "1542:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 79,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1550:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "1542:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseExpression": {
																"hexValue": "",
																"id": 82,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1560:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																},
																"value": ""
															},
															"id": 83,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "Conditional",
															"src": "1542:20:0",
															"trueExpression": {
																"hexValue": "2d",
																"id": 81,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1554:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561",
																	"typeString": "literal_string \"-\""
																},
																"value": "-"
															},
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 87,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 70,
																			"src": "1588:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		],
																		"expression": {
																			"id": 85,
																			"name": "SignedMath",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1413,
																			"src": "1573:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_SignedMath_$1413_$",
																				"typeString": "type(library SignedMath)"
																			}
																		},
																		"id": 86,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1584:3:0",
																		"memberName": "abs",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1412,
																		"src": "1573:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_int256_$returns$_t_uint256_$",
																			"typeString": "function (int256) pure returns (uint256)"
																		}
																	},
																	"id": 88,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1573:21:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 84,
																"name": "toString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 67,
																"src": "1564:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																}
															},
															"id": 89,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1564:31:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"expression": {
															"id": 76,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1528:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																"typeString": "type(string storage pointer)"
															},
															"typeName": {
																"id": 75,
																"name": "string",
																"nodeType": "ElementaryTypeName",
																"src": "1528:6:0",
																"typeDescriptions": {}
															}
														},
														"id": 77,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1535:6:0",
														"memberName": "concat",
														"nodeType": "MemberAccess",
														"src": "1528:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () pure returns (string memory)"
														}
													},
													"id": 90,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1528:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 74,
												"id": 91,
												"nodeType": "Return",
												"src": "1521:75:0"
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1341:89:0",
										"text": " @dev Converts a `int256` to its ASCII `string` decimal representation."
									},
									"id": 93,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toStringSigned",
									"nameLocation": "1444:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 71,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 70,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1466:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 93,
												"src": "1459:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 69,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1459:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1458:14:0"
									},
									"returnParameters": {
										"id": 74,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 73,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 93,
												"src": "1496:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 72,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1496:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1495:15:0"
									},
									"scope": 254,
									"src": "1435:168:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 112,
										"nodeType": "Block",
										"src": "1782:100:0",
										"statements": [
											{
												"id": 111,
												"nodeType": "UncheckedBlock",
												"src": "1792:84:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 102,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 96,
																	"src": "1835:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 108,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 105,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 96,
																				"src": "1854:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 103,
																				"name": "Math",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1308,
																				"src": "1842:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_Math_$1308_$",
																					"typeString": "type(library Math)"
																				}
																			},
																			"id": 104,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "1847:6:0",
																			"memberName": "log256",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1250,
																			"src": "1842:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256) pure returns (uint256)"
																			}
																		},
																		"id": 106,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1842:18:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 107,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1863:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "1842:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 101,
																"name": "toHexString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	113,
																	196,
																	216
																],
																"referencedDeclaration": 196,
																"src": "1823:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256,uint256) pure returns (string memory)"
																}
															},
															"id": 109,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1823:42:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 100,
														"id": 110,
														"nodeType": "Return",
														"src": "1816:49:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 94,
										"nodeType": "StructuredDocumentation",
										"src": "1609:94:0",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."
									},
									"id": 113,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1717:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 97,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 96,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1737:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 113,
												"src": "1729:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 95,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1729:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1728:15:0"
									},
									"returnParameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 99,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 113,
												"src": "1767:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 98,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1767:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1766:15:0"
									},
									"scope": 254,
									"src": "1708:174:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 195,
										"nodeType": "Block",
										"src": "2095:435:0",
										"statements": [
											{
												"assignments": [
													124
												],
												"declarations": [
													{
														"constant": false,
														"id": 124,
														"mutability": "mutable",
														"name": "localValue",
														"nameLocation": "2113:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 195,
														"src": "2105:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 123,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2105:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 126,
												"initialValue": {
													"id": 125,
													"name": "value",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 116,
													"src": "2126:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2105:26:0"
											},
											{
												"assignments": [
													128
												],
												"declarations": [
													{
														"constant": false,
														"id": 128,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "2154:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 195,
														"src": "2141:19:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 127,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "2141:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 137,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 135,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 133,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 131,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2173:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 132,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 118,
																	"src": "2177:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2173:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "32",
																"id": 134,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2186:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "2173:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 130,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "2163:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 129,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "2167:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 136,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2163:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2141:47:0"
											},
											{
												"expression": {
													"id": 142,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 138,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 128,
															"src": "2198:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 140,
														"indexExpression": {
															"hexValue": "30",
															"id": 139,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2205:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2198:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 141,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2210:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
															"typeString": "literal_string \"0\""
														},
														"value": "0"
													},
													"src": "2198:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 143,
												"nodeType": "ExpressionStatement",
												"src": "2198:15:0"
											},
											{
												"expression": {
													"id": 148,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 144,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 128,
															"src": "2223:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 146,
														"indexExpression": {
															"hexValue": "31",
															"id": 145,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2230:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2223:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "78",
														"id": 147,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2235:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83",
															"typeString": "literal_string \"x\""
														},
														"value": "x"
													},
													"src": "2223:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 149,
												"nodeType": "ExpressionStatement",
												"src": "2223:15:0"
											},
											{
												"body": {
													"id": 178,
													"nodeType": "Block",
													"src": "2293:95:0",
													"statements": [
														{
															"expression": {
																"id": 172,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 164,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 128,
																		"src": "2307:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 166,
																	"indexExpression": {
																		"id": 165,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 151,
																		"src": "2314:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2307:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 167,
																		"name": "HEX_DIGITS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 9,
																		"src": "2319:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes16",
																			"typeString": "bytes16"
																		}
																	},
																	"id": 171,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 170,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 168,
																			"name": "localValue",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 124,
																			"src": "2330:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"hexValue": "307866",
																			"id": 169,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2343:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_15_by_1",
																				"typeString": "int_const 15"
																			},
																			"value": "0xf"
																		},
																		"src": "2330:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2319:28:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "2307:40:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 173,
															"nodeType": "ExpressionStatement",
															"src": "2307:40:0"
														},
														{
															"expression": {
																"id": 176,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 174,
																	"name": "localValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 124,
																	"src": "2361:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 175,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2376:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "2361:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 177,
															"nodeType": "ExpressionStatement",
															"src": "2361:16:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 160,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 158,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 151,
														"src": "2281:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "31",
														"id": 159,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2285:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "2281:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 179,
												"initializationExpression": {
													"assignments": [
														151
													],
													"declarations": [
														{
															"constant": false,
															"id": 151,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2261:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 179,
															"src": "2253:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 150,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2253:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 157,
													"initialValue": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 156,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 154,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "32",
																"id": 152,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2265:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 153,
																"name": "length",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 118,
																"src": "2269:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2265:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 155,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2278:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "2265:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2253:26:0"
												},
												"isSimpleCounterLoop": false,
												"loopExpression": {
													"expression": {
														"id": 162,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": true,
														"src": "2288:3:0",
														"subExpression": {
															"id": 161,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 151,
															"src": "2290:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 163,
													"nodeType": "ExpressionStatement",
													"src": "2288:3:0"
												},
												"nodeType": "ForStatement",
												"src": "2248:140:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 182,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 180,
														"name": "localValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 124,
														"src": "2401:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 181,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2415:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2401:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 189,
												"nodeType": "IfStatement",
												"src": "2397:96:0",
												"trueBody": {
													"id": 188,
													"nodeType": "Block",
													"src": "2418:75:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 184,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 116,
																		"src": "2468:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 185,
																		"name": "length",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 118,
																		"src": "2475:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 183,
																	"name": "StringsInsufficientHexLength",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 19,
																	"src": "2439:28:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (uint256,uint256) pure"
																	}
																},
																"id": 186,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2439:43:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 187,
															"nodeType": "RevertStatement",
															"src": "2432:50:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 192,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 128,
															"src": "2516:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 191,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2509:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 190,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2509:6:0",
															"typeDescriptions": {}
														}
													},
													"id": 193,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2509:14:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 122,
												"id": 194,
												"nodeType": "Return",
												"src": "2502:21:0"
											}
										]
									},
									"documentation": {
										"id": 114,
										"nodeType": "StructuredDocumentation",
										"src": "1888:112:0",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."
									},
									"id": 196,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2014:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 119,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 116,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2034:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 196,
												"src": "2026:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 115,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2026:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 118,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "2049:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 196,
												"src": "2041:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 117,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2041:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2025:31:0"
									},
									"returnParameters": {
										"id": 122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 121,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 196,
												"src": "2080:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 120,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2080:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2079:15:0"
									},
									"scope": 254,
									"src": "2005:525:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 215,
										"nodeType": "Block",
										"src": "2762:75:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 209,
																			"name": "addr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 199,
																			"src": "2807:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 208,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2799:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint160_$",
																			"typeString": "type(uint160)"
																		},
																		"typeName": {
																			"id": 207,
																			"name": "uint160",
																			"nodeType": "ElementaryTypeName",
																			"src": "2799:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 210,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2799:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																],
																"id": 206,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2791:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 205,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2791:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 211,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2791:22:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 212,
															"name": "ADDRESS_LENGTH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 12,
															"src": "2815:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 204,
														"name": "toHexString",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															113,
															196,
															216
														],
														"referencedDeclaration": 196,
														"src": "2779:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (string memory)"
														}
													},
													"id": 213,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2779:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 203,
												"id": 214,
												"nodeType": "Return",
												"src": "2772:58:0"
											}
										]
									},
									"documentation": {
										"id": 197,
										"nodeType": "StructuredDocumentation",
										"src": "2536:148:0",
										"text": " @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n representation."
									},
									"id": 216,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2698:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 200,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 199,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "2718:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "2710:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 198,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2710:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2709:14:0"
									},
									"returnParameters": {
										"id": 203,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 202,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "2747:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 201,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2747:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2746:15:0"
									},
									"scope": 254,
									"src": "2689:148:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 252,
										"nodeType": "Block",
										"src": "2992:104:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 250,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 236,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 228,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 219,
																		"src": "3015:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 227,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3009:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 226,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "3009:5:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 229,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3009:8:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 230,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3018:6:0",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "3009:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 233,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 221,
																		"src": "3034:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 232,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3028:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 231,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "3028:5:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 234,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3028:8:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 235,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3037:6:0",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "3028:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3009:34:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"id": 249,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 240,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 219,
																			"src": "3063:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 239,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3057:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 238,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "3057:5:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 241,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3057:8:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 237,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "3047:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 242,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3047:19:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 246,
																			"name": "b",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 221,
																			"src": "3086:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 245,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3080:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 244,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "3080:5:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 247,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3080:8:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 243,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "3070:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 248,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3070:19:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"src": "3047:42:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3009:80:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 225,
												"id": 251,
												"nodeType": "Return",
												"src": "3002:87:0"
											}
										]
									},
									"documentation": {
										"id": 217,
										"nodeType": "StructuredDocumentation",
										"src": "2843:66:0",
										"text": " @dev Returns true if the two strings are equal."
									},
									"id": 253,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "equal",
									"nameLocation": "2923:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 222,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2943:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 253,
												"src": "2929:15:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 218,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2929:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 221,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2960:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 253,
												"src": "2946:15:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 220,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2946:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2928:34:0"
									},
									"returnParameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 253,
												"src": "2986:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 223,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2986:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2985:6:0"
									},
									"scope": 254,
									"src": "2914:182:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 255,
							"src": "251:2847:0",
							"usedErrors": [
								19
							],
							"usedEvents": []
						}
					],
					"src": "101:2997:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
					"exportedSymbols": {
						"Math": [
							1308
						]
					},
					"id": 1309,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 256,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "103:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Math",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 257,
								"nodeType": "StructuredDocumentation",
								"src": "129:73:1",
								"text": " @dev Standard math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 1308,
							"linearizedBaseContracts": [
								1308
							],
							"name": "Math",
							"nameLocation": "211:4:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 258,
										"nodeType": "StructuredDocumentation",
										"src": "222:50:1",
										"text": " @dev Muldiv operation overflow."
									},
									"errorSelector": "227bc153",
									"id": 260,
									"name": "MathOverflowedMulDiv",
									"nameLocation": "283:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 259,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "303:2:1"
									},
									"src": "277:29:1"
								},
								{
									"canonicalName": "Math.Rounding",
									"id": 265,
									"members": [
										{
											"id": 261,
											"name": "Floor",
											"nameLocation": "336:5:1",
											"nodeType": "EnumValue",
											"src": "336:5:1"
										},
										{
											"id": 262,
											"name": "Ceil",
											"nameLocation": "379:4:1",
											"nodeType": "EnumValue",
											"src": "379:4:1"
										},
										{
											"id": 263,
											"name": "Trunc",
											"nameLocation": "421:5:1",
											"nodeType": "EnumValue",
											"src": "421:5:1"
										},
										{
											"id": 264,
											"name": "Expand",
											"nameLocation": "451:6:1",
											"nodeType": "EnumValue",
											"src": "451:6:1"
										}
									],
									"name": "Rounding",
									"nameLocation": "317:8:1",
									"nodeType": "EnumDefinition",
									"src": "312:169:1"
								},
								{
									"body": {
										"id": 296,
										"nodeType": "Block",
										"src": "661:140:1",
										"statements": [
											{
												"id": 295,
												"nodeType": "UncheckedBlock",
												"src": "671:124:1",
												"statements": [
													{
														"assignments": [
															278
														],
														"declarations": [
															{
																"constant": false,
																"id": 278,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "703:1:1",
																"nodeType": "VariableDeclaration",
																"scope": 295,
																"src": "695:9:1",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 277,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "695:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 282,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 281,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 279,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 268,
																"src": "707:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 280,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 270,
																"src": "711:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "707:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "695:17:1"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 285,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 283,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 278,
																"src": "730:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 284,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 268,
																"src": "734:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "730:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 290,
														"nodeType": "IfStatement",
														"src": "726:28:1",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 286,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "745:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 287,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "752:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 288,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "744:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 276,
															"id": 289,
															"nodeType": "Return",
															"src": "737:17:1"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 291,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "776:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 292,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 278,
																	"src": "782:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 293,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "775:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 276,
														"id": 294,
														"nodeType": "Return",
														"src": "768:16:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 266,
										"nodeType": "StructuredDocumentation",
										"src": "487:93:1",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag."
									},
									"id": 297,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "594:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 271,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 268,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "609:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 297,
												"src": "601:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 267,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "601:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 270,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "620:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 297,
												"src": "612:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 269,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "612:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "600:22:1"
									},
									"returnParameters": {
										"id": 276,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 273,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 297,
												"src": "646:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 272,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "646:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 275,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 297,
												"src": "652:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 274,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "645:15:1"
									},
									"scope": 1308,
									"src": "585:216:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 324,
										"nodeType": "Block",
										"src": "984:113:1",
										"statements": [
											{
												"id": 323,
												"nodeType": "UncheckedBlock",
												"src": "994:97:1",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 311,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 309,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 302,
																"src": "1022:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 310,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 300,
																"src": "1026:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1022:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 316,
														"nodeType": "IfStatement",
														"src": "1018:28:1",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 312,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1037:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 313,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1044:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 314,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1036:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 308,
															"id": 315,
															"nodeType": "Return",
															"src": "1029:17:1"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 317,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1068:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 320,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 318,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 300,
																		"src": "1074:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 319,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 302,
																		"src": "1078:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1074:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 321,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1067:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 308,
														"id": 322,
														"nodeType": "Return",
														"src": "1060:20:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 298,
										"nodeType": "StructuredDocumentation",
										"src": "807:96:1",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag."
									},
									"id": 325,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "917:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 303,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 300,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "932:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 325,
												"src": "924:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 299,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "924:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 302,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "943:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 325,
												"src": "935:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 301,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "935:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "923:22:1"
									},
									"returnParameters": {
										"id": 308,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 305,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 325,
												"src": "969:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 304,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "969:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 307,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 325,
												"src": "975:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 306,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "975:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "968:15:1"
									},
									"scope": 1308,
									"src": "908:189:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 366,
										"nodeType": "Block",
										"src": "1283:417:1",
										"statements": [
											{
												"id": 365,
												"nodeType": "UncheckedBlock",
												"src": "1293:401:1",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 339,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 337,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 328,
																"src": "1551:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 338,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1556:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1551:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 344,
														"nodeType": "IfStatement",
														"src": "1547:28:1",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 340,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1567:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 341,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1573:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 342,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1566:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 336,
															"id": 343,
															"nodeType": "Return",
															"src": "1559:16:1"
														}
													},
													{
														"assignments": [
															346
														],
														"declarations": [
															{
																"constant": false,
																"id": 346,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1597:1:1",
																"nodeType": "VariableDeclaration",
																"scope": 365,
																"src": "1589:9:1",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 345,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1589:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 350,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 349,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 347,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 328,
																"src": "1601:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 348,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 330,
																"src": "1605:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1601:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1589:17:1"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 355,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 353,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 351,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 346,
																	"src": "1624:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 352,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 328,
																	"src": "1628:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1624:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 354,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 330,
																"src": "1633:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1624:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 360,
														"nodeType": "IfStatement",
														"src": "1620:33:1",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 356,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1644:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 357,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1651:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 358,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1643:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 336,
															"id": 359,
															"nodeType": "Return",
															"src": "1636:17:1"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 361,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1675:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 362,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 346,
																	"src": "1681:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 363,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1674:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 336,
														"id": 364,
														"nodeType": "Return",
														"src": "1667:16:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 326,
										"nodeType": "StructuredDocumentation",
										"src": "1103:99:1",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag."
									},
									"id": 367,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1216:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 331,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 328,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1231:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 367,
												"src": "1223:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 327,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 330,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1242:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 367,
												"src": "1234:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 329,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1222:22:1"
									},
									"returnParameters": {
										"id": 336,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 333,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 367,
												"src": "1268:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 332,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1268:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 335,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 367,
												"src": "1274:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 334,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1274:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1267:15:1"
									},
									"scope": 1308,
									"src": "1207:493:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 394,
										"nodeType": "Block",
										"src": "1887:114:1",
										"statements": [
											{
												"id": 393,
												"nodeType": "UncheckedBlock",
												"src": "1897:98:1",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 381,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 379,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 372,
																"src": "1925:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 380,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1930:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1925:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 386,
														"nodeType": "IfStatement",
														"src": "1921:29:1",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 382,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1941:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 383,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1948:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 384,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1940:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 378,
															"id": 385,
															"nodeType": "Return",
															"src": "1933:17:1"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 387,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1972:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 390,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 388,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 370,
																		"src": "1978:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 389,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 372,
																		"src": "1982:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1978:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 391,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1971:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 378,
														"id": 392,
														"nodeType": "Return",
														"src": "1964:20:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 368,
										"nodeType": "StructuredDocumentation",
										"src": "1706:100:1",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag."
									},
									"id": 395,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1820:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 373,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 370,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1835:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 395,
												"src": "1827:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 369,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1827:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 372,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1846:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 395,
												"src": "1838:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 371,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1838:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1826:22:1"
									},
									"returnParameters": {
										"id": 378,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 375,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 395,
												"src": "1872:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 374,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1872:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 377,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 395,
												"src": "1878:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 376,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1878:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1871:15:1"
									},
									"scope": 1308,
									"src": "1811:190:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 422,
										"nodeType": "Block",
										"src": "2198:114:1",
										"statements": [
											{
												"id": 421,
												"nodeType": "UncheckedBlock",
												"src": "2208:98:1",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 409,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 407,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 400,
																"src": "2236:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 408,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2241:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2236:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 414,
														"nodeType": "IfStatement",
														"src": "2232:29:1",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 410,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2252:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 411,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2259:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 412,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2251:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 406,
															"id": 413,
															"nodeType": "Return",
															"src": "2244:17:1"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 415,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2283:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 418,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 416,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 398,
																		"src": "2289:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 417,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 400,
																		"src": "2293:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2289:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 419,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2282:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 406,
														"id": 420,
														"nodeType": "Return",
														"src": "2275:20:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 396,
										"nodeType": "StructuredDocumentation",
										"src": "2007:110:1",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag."
									},
									"id": 423,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2131:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 401,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 398,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2146:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 423,
												"src": "2138:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 397,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2138:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 400,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2157:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 423,
												"src": "2149:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 399,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2149:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2137:22:1"
									},
									"returnParameters": {
										"id": 406,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 403,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 423,
												"src": "2183:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 402,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2183:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 405,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 423,
												"src": "2189:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 404,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2189:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2182:15:1"
									},
									"scope": 1308,
									"src": "2122:190:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 440,
										"nodeType": "Block",
										"src": "2449:37:1",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 435,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 433,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 426,
															"src": "2466:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 434,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 428,
															"src": "2470:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2466:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 437,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 428,
														"src": "2478:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 438,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2466:13:1",
													"trueExpression": {
														"id": 436,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 426,
														"src": "2474:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 432,
												"id": 439,
												"nodeType": "Return",
												"src": "2459:20:1"
											}
										]
									},
									"documentation": {
										"id": 424,
										"nodeType": "StructuredDocumentation",
										"src": "2318:59:1",
										"text": " @dev Returns the largest of two numbers."
									},
									"id": 441,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "2391:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 429,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 426,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2403:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 441,
												"src": "2395:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 425,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2395:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 428,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2414:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 441,
												"src": "2406:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 427,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2406:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2394:22:1"
									},
									"returnParameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 441,
												"src": "2440:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 430,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2440:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2439:9:1"
									},
									"scope": 1308,
									"src": "2382:104:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 458,
										"nodeType": "Block",
										"src": "2624:37:1",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 453,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 451,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 444,
															"src": "2641:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 452,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 446,
															"src": "2645:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2641:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 455,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 446,
														"src": "2653:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 456,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2641:13:1",
													"trueExpression": {
														"id": 454,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 444,
														"src": "2649:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 450,
												"id": 457,
												"nodeType": "Return",
												"src": "2634:20:1"
											}
										]
									},
									"documentation": {
										"id": 442,
										"nodeType": "StructuredDocumentation",
										"src": "2492:60:1",
										"text": " @dev Returns the smallest of two numbers."
									},
									"id": 459,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "2566:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 447,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 444,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2578:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 459,
												"src": "2570:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 443,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 446,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2589:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 459,
												"src": "2581:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 445,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2581:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:22:1"
									},
									"returnParameters": {
										"id": 450,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 449,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 459,
												"src": "2615:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 448,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2615:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2614:9:1"
									},
									"scope": 1308,
									"src": "2557:104:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 481,
										"nodeType": "Block",
										"src": "2845:82:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 479,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 471,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 469,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 462,
																	"src": "2900:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 470,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 464,
																	"src": "2904:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2900:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 472,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2899:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 478,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 475,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 473,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 462,
																		"src": "2910:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "^",
																	"rightExpression": {
																		"id": 474,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 464,
																		"src": "2914:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2910:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 476,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2909:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "32",
															"id": 477,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2919:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "2909:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2899:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 468,
												"id": 480,
												"nodeType": "Return",
												"src": "2892:28:1"
											}
										]
									},
									"documentation": {
										"id": 460,
										"nodeType": "StructuredDocumentation",
										"src": "2667:102:1",
										"text": " @dev Returns the average of two numbers. The result is rounded towards\n zero."
									},
									"id": 482,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "2783:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 465,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 462,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2799:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "2791:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 461,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2791:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 464,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2810:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "2802:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 463,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2802:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2790:22:1"
									},
									"returnParameters": {
										"id": 468,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 467,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "2836:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 466,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2836:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2835:9:1"
									},
									"scope": 1308,
									"src": "2774:153:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 515,
										"nodeType": "Block",
										"src": "3219:260:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 494,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 492,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 487,
														"src": "3233:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 493,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3238:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3233:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 500,
												"nodeType": "IfStatement",
												"src": "3229:127:1",
												"trueBody": {
													"id": 499,
													"nodeType": "Block",
													"src": "3241:115:1",
													"statements": [
														{
															"expression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 497,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 495,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 485,
																	"src": "3340:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 496,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 487,
																	"src": "3344:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3340:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 491,
															"id": 498,
															"nodeType": "Return",
															"src": "3333:12:1"
														}
													]
												}
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 503,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 501,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 485,
															"src": "3444:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 502,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3449:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "3444:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 512,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 510,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 507,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 505,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 485,
																			"src": "3458:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 506,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3462:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "3458:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 508,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3457:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 509,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 487,
																"src": "3467:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3457:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 511,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3471:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "3457:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 513,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "3444:28:1",
													"trueExpression": {
														"hexValue": "30",
														"id": 504,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3453:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 491,
												"id": 514,
												"nodeType": "Return",
												"src": "3437:35:1"
											}
										]
									},
									"documentation": {
										"id": 483,
										"nodeType": "StructuredDocumentation",
										"src": "2933:210:1",
										"text": " @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."
									},
									"id": 516,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ceilDiv",
									"nameLocation": "3157:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 488,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 485,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3173:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 516,
												"src": "3165:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 484,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3165:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 487,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3184:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 516,
												"src": "3176:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 486,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3176:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3164:22:1"
									},
									"returnParameters": {
										"id": 491,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 490,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 516,
												"src": "3210:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 489,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3210:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3209:9:1"
									},
									"scope": 1308,
									"src": "3148:331:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 641,
										"nodeType": "Block",
										"src": "3901:4018:1",
										"statements": [
											{
												"id": 640,
												"nodeType": "UncheckedBlock",
												"src": "3911:4002:1",
												"statements": [
													{
														"assignments": [
															529
														],
														"declarations": [
															{
																"constant": false,
																"id": 529,
																"mutability": "mutable",
																"name": "prod0",
																"nameLocation": "4240:5:1",
																"nodeType": "VariableDeclaration",
																"scope": 640,
																"src": "4232:13:1",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 528,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4232:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 533,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 532,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 530,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 519,
																"src": "4248:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 531,
																"name": "y",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 521,
																"src": "4252:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4248:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4232:21:1"
													},
													{
														"assignments": [
															535
														],
														"declarations": [
															{
																"constant": false,
																"id": 535,
																"mutability": "mutable",
																"name": "prod1",
																"nameLocation": "4320:5:1",
																"nodeType": "VariableDeclaration",
																"scope": 640,
																"src": "4312:13:1",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 534,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4312:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 536,
														"nodeType": "VariableDeclarationStatement",
														"src": "4312:13:1"
													},
													{
														"AST": {
															"nativeSrc": "4392:122:1",
															"nodeType": "YulBlock",
															"src": "4392:122:1",
															"statements": [
																{
																	"nativeSrc": "4410:30:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4410:30:1",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "4427:1:1",
																				"nodeType": "YulIdentifier",
																				"src": "4427:1:1"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "4430:1:1",
																				"nodeType": "YulIdentifier",
																				"src": "4430:1:1"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4437:1:1",
																						"nodeType": "YulLiteral",
																						"src": "4437:1:1",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "4433:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "4433:3:1"
																				},
																				"nativeSrc": "4433:6:1",
																				"nodeType": "YulFunctionCall",
																				"src": "4433:6:1"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "4420:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "4420:6:1"
																		},
																		"nativeSrc": "4420:20:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4420:20:1"
																	},
																	"variables": [
																		{
																			"name": "mm",
																			"nativeSrc": "4414:2:1",
																			"nodeType": "YulTypedName",
																			"src": "4414:2:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4457:43:1",
																	"nodeType": "YulAssignment",
																	"src": "4457:43:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "4474:2:1",
																						"nodeType": "YulIdentifier",
																						"src": "4474:2:1"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "4478:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "4478:5:1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "4470:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "4470:3:1"
																				},
																				"nativeSrc": "4470:14:1",
																				"nodeType": "YulFunctionCall",
																				"src": "4470:14:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "4489:2:1",
																						"nodeType": "YulIdentifier",
																						"src": "4489:2:1"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "4493:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "4493:5:1"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "4486:2:1",
																					"nodeType": "YulIdentifier",
																					"src": "4486:2:1"
																				},
																				"nativeSrc": "4486:13:1",
																				"nodeType": "YulFunctionCall",
																				"src": "4486:13:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4466:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4466:3:1"
																		},
																		"nativeSrc": "4466:34:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4466:34:1"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "4457:5:1",
																			"nodeType": "YulIdentifier",
																			"src": "4457:5:1"
																		}
																	]
																}
															]
														},
														"evmVersion": "paris",
														"externalReferences": [
															{
																"declaration": 529,
																"isOffset": false,
																"isSlot": false,
																"src": "4478:5:1",
																"valueSize": 1
															},
															{
																"declaration": 529,
																"isOffset": false,
																"isSlot": false,
																"src": "4493:5:1",
																"valueSize": 1
															},
															{
																"declaration": 535,
																"isOffset": false,
																"isSlot": false,
																"src": "4457:5:1",
																"valueSize": 1
															},
															{
																"declaration": 519,
																"isOffset": false,
																"isSlot": false,
																"src": "4427:1:1",
																"valueSize": 1
															},
															{
																"declaration": 521,
																"isOffset": false,
																"isSlot": false,
																"src": "4430:1:1",
																"valueSize": 1
															}
														],
														"id": 537,
														"nodeType": "InlineAssembly",
														"src": "4383:131:1"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 540,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 538,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 535,
																"src": "4595:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 539,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4604:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4595:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 546,
														"nodeType": "IfStatement",
														"src": "4591:368:1",
														"trueBody": {
															"id": 545,
															"nodeType": "Block",
															"src": "4607:352:1",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 543,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 541,
																			"name": "prod0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 529,
																			"src": "4925:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 542,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 523,
																			"src": "4933:11:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4925:19:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 527,
																	"id": 544,
																	"nodeType": "Return",
																	"src": "4918:26:1"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 549,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 547,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 523,
																"src": "5065:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 548,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 535,
																"src": "5080:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5065:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 554,
														"nodeType": "IfStatement",
														"src": "5061:88:1",
														"trueBody": {
															"id": 553,
															"nodeType": "Block",
															"src": "5087:62:1",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 550,
																			"name": "MathOverflowedMulDiv",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 260,
																			"src": "5112:20:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 551,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5112:22:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 552,
																	"nodeType": "RevertStatement",
																	"src": "5105:29:1"
																}
															]
														}
													},
													{
														"assignments": [
															556
														],
														"declarations": [
															{
																"constant": false,
																"id": 556,
																"mutability": "mutable",
																"name": "remainder",
																"nameLocation": "5412:9:1",
																"nodeType": "VariableDeclaration",
																"scope": 640,
																"src": "5404:17:1",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 555,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5404:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 557,
														"nodeType": "VariableDeclarationStatement",
														"src": "5404:17:1"
													},
													{
														"AST": {
															"nativeSrc": "5444:291:1",
															"nodeType": "YulBlock",
															"src": "5444:291:1",
															"statements": [
																{
																	"nativeSrc": "5513:38:1",
																	"nodeType": "YulAssignment",
																	"src": "5513:38:1",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "5533:1:1",
																				"nodeType": "YulIdentifier",
																				"src": "5533:1:1"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "5536:1:1",
																				"nodeType": "YulIdentifier",
																				"src": "5536:1:1"
																			},
																			{
																				"name": "denominator",
																				"nativeSrc": "5539:11:1",
																				"nodeType": "YulIdentifier",
																				"src": "5539:11:1"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "5526:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "5526:6:1"
																		},
																		"nativeSrc": "5526:25:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5526:25:1"
																	},
																	"variableNames": [
																		{
																			"name": "remainder",
																			"nativeSrc": "5513:9:1",
																			"nodeType": "YulIdentifier",
																			"src": "5513:9:1"
																		}
																	]
																},
																{
																	"nativeSrc": "5633:41:1",
																	"nodeType": "YulAssignment",
																	"src": "5633:41:1",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod1",
																				"nativeSrc": "5646:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "5646:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "remainder",
																						"nativeSrc": "5656:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "5656:9:1"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "5667:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "5667:5:1"
																					}
																				],
																				"functionName": {
																					"name": "gt",
																					"nativeSrc": "5653:2:1",
																					"nodeType": "YulIdentifier",
																					"src": "5653:2:1"
																				},
																				"nativeSrc": "5653:20:1",
																				"nodeType": "YulFunctionCall",
																				"src": "5653:20:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5642:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "5642:3:1"
																		},
																		"nativeSrc": "5642:32:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5642:32:1"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "5633:5:1",
																			"nodeType": "YulIdentifier",
																			"src": "5633:5:1"
																		}
																	]
																},
																{
																	"nativeSrc": "5691:30:1",
																	"nodeType": "YulAssignment",
																	"src": "5691:30:1",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "5704:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "5704:5:1"
																			},
																			{
																				"name": "remainder",
																				"nativeSrc": "5711:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "5711:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5700:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "5700:3:1"
																		},
																		"nativeSrc": "5700:21:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5700:21:1"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "5691:5:1",
																			"nodeType": "YulIdentifier",
																			"src": "5691:5:1"
																		}
																	]
																}
															]
														},
														"evmVersion": "paris",
														"externalReferences": [
															{
																"declaration": 523,
																"isOffset": false,
																"isSlot": false,
																"src": "5539:11:1",
																"valueSize": 1
															},
															{
																"declaration": 529,
																"isOffset": false,
																"isSlot": false,
																"src": "5667:5:1",
																"valueSize": 1
															},
															{
																"declaration": 529,
																"isOffset": false,
																"isSlot": false,
																"src": "5691:5:1",
																"valueSize": 1
															},
															{
																"declaration": 529,
																"isOffset": false,
																"isSlot": false,
																"src": "5704:5:1",
																"valueSize": 1
															},
															{
																"declaration": 535,
																"isOffset": false,
																"isSlot": false,
																"src": "5633:5:1",
																"valueSize": 1
															},
															{
																"declaration": 535,
																"isOffset": false,
																"isSlot": false,
																"src": "5646:5:1",
																"valueSize": 1
															},
															{
																"declaration": 556,
																"isOffset": false,
																"isSlot": false,
																"src": "5513:9:1",
																"valueSize": 1
															},
															{
																"declaration": 556,
																"isOffset": false,
																"isSlot": false,
																"src": "5656:9:1",
																"valueSize": 1
															},
															{
																"declaration": 556,
																"isOffset": false,
																"isSlot": false,
																"src": "5711:9:1",
																"valueSize": 1
															},
															{
																"declaration": 519,
																"isOffset": false,
																"isSlot": false,
																"src": "5533:1:1",
																"valueSize": 1
															},
															{
																"declaration": 521,
																"isOffset": false,
																"isSlot": false,
																"src": "5536:1:1",
																"valueSize": 1
															}
														],
														"id": 558,
														"nodeType": "InlineAssembly",
														"src": "5435:300:1"
													},
													{
														"assignments": [
															560
														],
														"declarations": [
															{
																"constant": false,
																"id": 560,
																"mutability": "mutable",
																"name": "twos",
																"nameLocation": "5947:4:1",
																"nodeType": "VariableDeclaration",
																"scope": 640,
																"src": "5939:12:1",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 559,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5939:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 567,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 566,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 561,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 523,
																"src": "5954:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 564,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "30",
																			"id": 562,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5969:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 563,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 523,
																			"src": "5973:11:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "5969:15:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 565,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "5968:17:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5954:31:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "5939:46:1"
													},
													{
														"AST": {
															"nativeSrc": "6008:362:1",
															"nodeType": "YulBlock",
															"src": "6008:362:1",
															"statements": [
																{
																	"nativeSrc": "6073:37:1",
																	"nodeType": "YulAssignment",
																	"src": "6073:37:1",
																	"value": {
																		"arguments": [
																			{
																				"name": "denominator",
																				"nativeSrc": "6092:11:1",
																				"nodeType": "YulIdentifier",
																				"src": "6092:11:1"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "6105:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "6105:4:1"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "6088:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "6088:3:1"
																		},
																		"nativeSrc": "6088:22:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6088:22:1"
																	},
																	"variableNames": [
																		{
																			"name": "denominator",
																			"nativeSrc": "6073:11:1",
																			"nodeType": "YulIdentifier",
																			"src": "6073:11:1"
																		}
																	]
																},
																{
																	"nativeSrc": "6177:25:1",
																	"nodeType": "YulAssignment",
																	"src": "6177:25:1",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "6190:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "6190:5:1"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "6197:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "6197:4:1"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "6186:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "6186:3:1"
																		},
																		"nativeSrc": "6186:16:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6186:16:1"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "6177:5:1",
																			"nodeType": "YulIdentifier",
																			"src": "6177:5:1"
																		}
																	]
																},
																{
																	"nativeSrc": "6317:39:1",
																	"nodeType": "YulAssignment",
																	"src": "6317:39:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "6337:1:1",
																								"nodeType": "YulLiteral",
																								"src": "6337:1:1",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"name": "twos",
																								"nativeSrc": "6340:4:1",
																								"nodeType": "YulIdentifier",
																								"src": "6340:4:1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "6333:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "6333:3:1"
																						},
																						"nativeSrc": "6333:12:1",
																						"nodeType": "YulFunctionCall",
																						"src": "6333:12:1"
																					},
																					{
																						"name": "twos",
																						"nativeSrc": "6347:4:1",
																						"nodeType": "YulIdentifier",
																						"src": "6347:4:1"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nativeSrc": "6329:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "6329:3:1"
																				},
																				"nativeSrc": "6329:23:1",
																				"nodeType": "YulFunctionCall",
																				"src": "6329:23:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6354:1:1",
																				"nodeType": "YulLiteral",
																				"src": "6354:1:1",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6325:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "6325:3:1"
																		},
																		"nativeSrc": "6325:31:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6325:31:1"
																	},
																	"variableNames": [
																		{
																			"name": "twos",
																			"nativeSrc": "6317:4:1",
																			"nodeType": "YulIdentifier",
																			"src": "6317:4:1"
																		}
																	]
																}
															]
														},
														"evmVersion": "paris",
														"externalReferences": [
															{
																"declaration": 523,
																"isOffset": false,
																"isSlot": false,
																"src": "6073:11:1",
																"valueSize": 1
															},
															{
																"declaration": 523,
																"isOffset": false,
																"isSlot": false,
																"src": "6092:11:1",
																"valueSize": 1
															},
															{
																"declaration": 529,
																"isOffset": false,
																"isSlot": false,
																"src": "6177:5:1",
																"valueSize": 1
															},
															{
																"declaration": 529,
																"isOffset": false,
																"isSlot": false,
																"src": "6190:5:1",
																"valueSize": 1
															},
															{
																"declaration": 560,
																"isOffset": false,
																"isSlot": false,
																"src": "6105:4:1",
																"valueSize": 1
															},
															{
																"declaration": 560,
																"isOffset": false,
																"isSlot": false,
																"src": "6197:4:1",
																"valueSize": 1
															},
															{
																"declaration": 560,
																"isOffset": false,
																"isSlot": false,
																"src": "6317:4:1",
																"valueSize": 1
															},
															{
																"declaration": 560,
																"isOffset": false,
																"isSlot": false,
																"src": "6340:4:1",
																"valueSize": 1
															},
															{
																"declaration": 560,
																"isOffset": false,
																"isSlot": false,
																"src": "6347:4:1",
																"valueSize": 1
															}
														],
														"id": 568,
														"nodeType": "InlineAssembly",
														"src": "5999:371:1"
													},
													{
														"expression": {
															"id": 573,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 569,
																"name": "prod0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 529,
																"src": "6436:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "|=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 572,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 570,
																	"name": "prod1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 535,
																	"src": "6445:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 571,
																	"name": "twos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 560,
																	"src": "6453:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6445:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6436:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 574,
														"nodeType": "ExpressionStatement",
														"src": "6436:21:1"
													},
													{
														"assignments": [
															576
														],
														"declarations": [
															{
																"constant": false,
																"id": 576,
																"mutability": "mutable",
																"name": "inverse",
																"nameLocation": "6783:7:1",
																"nodeType": "VariableDeclaration",
																"scope": 640,
																"src": "6775:15:1",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 575,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "6775:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 583,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 582,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 579,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "33",
																			"id": 577,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "6794:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 578,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 523,
																			"src": "6798:11:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6794:15:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 580,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "6793:17:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"hexValue": "32",
																"id": 581,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6813:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "6793:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "6775:39:1"
													},
													{
														"expression": {
															"id": 590,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 584,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 576,
																"src": "7031:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 589,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 585,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7042:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 588,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 586,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 523,
																		"src": "7046:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 587,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 576,
																		"src": "7060:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7046:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7042:25:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7031:36:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 591,
														"nodeType": "ExpressionStatement",
														"src": "7031:36:1"
													},
													{
														"expression": {
															"id": 598,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 592,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 576,
																"src": "7100:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 597,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 593,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7111:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 596,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 594,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 523,
																		"src": "7115:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 595,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 576,
																		"src": "7129:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7115:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7111:25:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7100:36:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 599,
														"nodeType": "ExpressionStatement",
														"src": "7100:36:1"
													},
													{
														"expression": {
															"id": 606,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 600,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 576,
																"src": "7170:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 605,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 601,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7181:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 604,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 602,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 523,
																		"src": "7185:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 603,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 576,
																		"src": "7199:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7185:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7181:25:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7170:36:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 607,
														"nodeType": "ExpressionStatement",
														"src": "7170:36:1"
													},
													{
														"expression": {
															"id": 614,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 608,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 576,
																"src": "7240:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 613,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 609,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7251:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 612,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 610,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 523,
																		"src": "7255:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 611,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 576,
																		"src": "7269:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7255:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7251:25:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7240:36:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 615,
														"nodeType": "ExpressionStatement",
														"src": "7240:36:1"
													},
													{
														"expression": {
															"id": 622,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 616,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 576,
																"src": "7310:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 621,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 617,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7321:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 620,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 618,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 523,
																		"src": "7325:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 619,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 576,
																		"src": "7339:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7325:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7321:25:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7310:36:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 623,
														"nodeType": "ExpressionStatement",
														"src": "7310:36:1"
													},
													{
														"expression": {
															"id": 630,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 624,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 576,
																"src": "7381:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 629,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 625,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7392:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 628,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 626,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 523,
																		"src": "7396:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 627,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 576,
																		"src": "7410:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7396:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7392:25:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7381:36:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 631,
														"nodeType": "ExpressionStatement",
														"src": "7381:36:1"
													},
													{
														"expression": {
															"id": 636,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 632,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 526,
																"src": "7851:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 635,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 633,
																	"name": "prod0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 529,
																	"src": "7860:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 634,
																	"name": "inverse",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 576,
																	"src": "7868:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7860:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7851:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 637,
														"nodeType": "ExpressionStatement",
														"src": "7851:24:1"
													},
													{
														"expression": {
															"id": 638,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 526,
															"src": "7896:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 527,
														"id": 639,
														"nodeType": "Return",
														"src": "7889:13:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 517,
										"nodeType": "StructuredDocumentation",
										"src": "3485:313:1",
										"text": " @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."
									},
									"id": 642,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "3812:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 524,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 519,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "3827:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 642,
												"src": "3819:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 518,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3819:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 521,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "3838:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 642,
												"src": "3830:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 520,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3830:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 523,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "3849:11:1",
												"nodeType": "VariableDeclaration",
												"scope": 642,
												"src": "3841:19:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 522,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3841:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3818:43:1"
									},
									"returnParameters": {
										"id": 527,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 526,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "3893:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 642,
												"src": "3885:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 525,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3885:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3884:16:1"
									},
									"scope": 1308,
									"src": "3803:4116:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 684,
										"nodeType": "Block",
										"src": "8161:192:1",
										"statements": [
											{
												"assignments": [
													658
												],
												"declarations": [
													{
														"constant": false,
														"id": 658,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "8179:6:1",
														"nodeType": "VariableDeclaration",
														"scope": 684,
														"src": "8171:14:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 657,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8171:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 664,
												"initialValue": {
													"arguments": [
														{
															"id": 660,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 645,
															"src": "8195:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 661,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 647,
															"src": "8198:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 662,
															"name": "denominator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 649,
															"src": "8201:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 659,
														"name": "mulDiv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															642,
															685
														],
														"referencedDeclaration": 642,
														"src": "8188:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 663,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8188:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8171:42:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 675,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 666,
																"name": "rounding",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 652,
																"src": "8244:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Rounding_$265",
																	"typeString": "enum Math.Rounding"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_enum$_Rounding_$265",
																	"typeString": "enum Math.Rounding"
																}
															],
															"id": 665,
															"name": "unsignedRoundsUp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1307,
															"src": "8227:16:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$265_$returns$_t_bool_$",
																"typeString": "function (enum Math.Rounding) pure returns (bool)"
															}
														},
														"id": 667,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8227:26:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 674,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 669,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 645,
																	"src": "8264:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 670,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 647,
																	"src": "8267:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 671,
																	"name": "denominator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 649,
																	"src": "8270:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 668,
																"name": "mulmod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967280,
																"src": "8257:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 672,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8257:25:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 673,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8285:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8257:29:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "8227:59:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 681,
												"nodeType": "IfStatement",
												"src": "8223:101:1",
												"trueBody": {
													"id": 680,
													"nodeType": "Block",
													"src": "8288:36:1",
													"statements": [
														{
															"expression": {
																"id": 678,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 676,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 658,
																	"src": "8302:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 677,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8312:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8302:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 679,
															"nodeType": "ExpressionStatement",
															"src": "8302:11:1"
														}
													]
												}
											},
											{
												"expression": {
													"id": 682,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 658,
													"src": "8340:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 656,
												"id": 683,
												"nodeType": "Return",
												"src": "8333:13:1"
											}
										]
									},
									"documentation": {
										"id": 643,
										"nodeType": "StructuredDocumentation",
										"src": "7925:121:1",
										"text": " @notice Calculates x * y / denominator with full precision, following the selected rounding direction."
									},
									"id": 685,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "8060:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 653,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 645,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "8075:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 685,
												"src": "8067:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 644,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8067:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 647,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "8086:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 685,
												"src": "8078:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 646,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8078:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 649,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "8097:11:1",
												"nodeType": "VariableDeclaration",
												"scope": 685,
												"src": "8089:19:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 648,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8089:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 652,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "8119:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 685,
												"src": "8110:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$265",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 651,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 650,
														"name": "Rounding",
														"nameLocations": [
															"8110:8:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 265,
														"src": "8110:8:1"
													},
													"referencedDeclaration": 265,
													"src": "8110:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$265",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8066:62:1"
									},
									"returnParameters": {
										"id": 656,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 655,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 685,
												"src": "8152:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 654,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8152:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8151:9:1"
									},
									"scope": 1308,
									"src": "8051:302:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 796,
										"nodeType": "Block",
										"src": "8644:1585:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 695,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 693,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 688,
														"src": "8658:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 694,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8663:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8658:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 699,
												"nodeType": "IfStatement",
												"src": "8654:45:1",
												"trueBody": {
													"id": 698,
													"nodeType": "Block",
													"src": "8666:33:1",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 696,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8687:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 692,
															"id": 697,
															"nodeType": "Return",
															"src": "8680:8:1"
														}
													]
												}
											},
											{
												"assignments": [
													701
												],
												"declarations": [
													{
														"constant": false,
														"id": 701,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "9386:6:1",
														"nodeType": "VariableDeclaration",
														"scope": 796,
														"src": "9378:14:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 700,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9378:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 710,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 709,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 702,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9395:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 707,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 704,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 688,
																			"src": "9406:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 703,
																		"name": "log2",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			964,
																			999
																		],
																		"referencedDeclaration": 964,
																		"src": "9401:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) pure returns (uint256)"
																		}
																	},
																	"id": 705,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9401:7:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 706,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9412:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9401:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 708,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9400:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9395:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9378:36:1"
											},
											{
												"id": 795,
												"nodeType": "UncheckedBlock",
												"src": "9815:408:1",
												"statements": [
													{
														"expression": {
															"id": 720,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 711,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 701,
																"src": "9839:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 719,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 716,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 712,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 701,
																				"src": "9849:6:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 715,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 713,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 688,
																					"src": "9858:1:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 714,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 701,
																					"src": "9862:6:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9858:10:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9849:19:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 717,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9848:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 718,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9873:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9848:26:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9839:35:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 721,
														"nodeType": "ExpressionStatement",
														"src": "9839:35:1"
													},
													{
														"expression": {
															"id": 731,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 722,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 701,
																"src": "9888:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 730,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 727,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 723,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 701,
																				"src": "9898:6:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 726,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 724,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 688,
																					"src": "9907:1:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 725,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 701,
																					"src": "9911:6:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9907:10:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9898:19:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 728,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9897:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 729,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9922:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9897:26:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9888:35:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 732,
														"nodeType": "ExpressionStatement",
														"src": "9888:35:1"
													},
													{
														"expression": {
															"id": 742,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 733,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 701,
																"src": "9937:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 741,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 738,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 734,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 701,
																				"src": "9947:6:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 737,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 735,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 688,
																					"src": "9956:1:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 736,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 701,
																					"src": "9960:6:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9956:10:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9947:19:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 739,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9946:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 740,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9971:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9946:26:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9937:35:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 743,
														"nodeType": "ExpressionStatement",
														"src": "9937:35:1"
													},
													{
														"expression": {
															"id": 753,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 744,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 701,
																"src": "9986:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 752,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 749,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 745,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 701,
																				"src": "9996:6:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 748,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 746,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 688,
																					"src": "10005:1:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 747,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 701,
																					"src": "10009:6:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10005:10:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9996:19:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 750,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9995:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 751,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10020:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9995:26:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9986:35:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 754,
														"nodeType": "ExpressionStatement",
														"src": "9986:35:1"
													},
													{
														"expression": {
															"id": 764,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 755,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 701,
																"src": "10035:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 763,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 760,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 756,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 701,
																				"src": "10045:6:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 759,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 757,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 688,
																					"src": "10054:1:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 758,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 701,
																					"src": "10058:6:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10054:10:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10045:19:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 761,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10044:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 762,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10069:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10044:26:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10035:35:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 765,
														"nodeType": "ExpressionStatement",
														"src": "10035:35:1"
													},
													{
														"expression": {
															"id": 775,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 766,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 701,
																"src": "10084:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 774,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 771,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 767,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 701,
																				"src": "10094:6:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 770,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 768,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 688,
																					"src": "10103:1:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 769,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 701,
																					"src": "10107:6:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10103:10:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10094:19:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 772,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10093:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 773,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10118:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10093:26:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10084:35:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 776,
														"nodeType": "ExpressionStatement",
														"src": "10084:35:1"
													},
													{
														"expression": {
															"id": 786,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 777,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 701,
																"src": "10133:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 785,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 782,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 778,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 701,
																				"src": "10143:6:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 781,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 779,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 688,
																					"src": "10152:1:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 780,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 701,
																					"src": "10156:6:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10152:10:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10143:19:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 783,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10142:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 784,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10167:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10142:26:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10133:35:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 787,
														"nodeType": "ExpressionStatement",
														"src": "10133:35:1"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 789,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 701,
																	"src": "10193:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 792,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 790,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 688,
																		"src": "10201:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 791,
																		"name": "result",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 701,
																		"src": "10205:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "10201:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 788,
																"name": "min",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 459,
																"src": "10189:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 793,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10189:23:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 692,
														"id": 794,
														"nodeType": "Return",
														"src": "10182:30:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 686,
										"nodeType": "StructuredDocumentation",
										"src": "8359:223:1",
										"text": " @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."
									},
									"id": 797,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "8596:4:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 689,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 688,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "8609:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 797,
												"src": "8601:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 687,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8601:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8600:11:1"
									},
									"returnParameters": {
										"id": 692,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 691,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 797,
												"src": "8635:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 690,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8635:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8634:9:1"
									},
									"scope": 1308,
									"src": "8587:1642:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 831,
										"nodeType": "Block",
										"src": "10405:164:1",
										"statements": [
											{
												"id": 830,
												"nodeType": "UncheckedBlock",
												"src": "10415:148:1",
												"statements": [
													{
														"assignments": [
															809
														],
														"declarations": [
															{
																"constant": false,
																"id": 809,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "10447:6:1",
																"nodeType": "VariableDeclaration",
																"scope": 830,
																"src": "10439:14:1",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 808,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "10439:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 813,
														"initialValue": {
															"arguments": [
																{
																	"id": 811,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 800,
																	"src": "10461:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 810,
																"name": "sqrt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	797,
																	832
																],
																"referencedDeclaration": 797,
																"src": "10456:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 812,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10456:7:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "10439:24:1"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 828,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 814,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 809,
																"src": "10484:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 823,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 816,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 803,
																						"src": "10511:8:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$265",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$265",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 815,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1307,
																					"src": "10494:16:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$265_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 817,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "10494:26:1",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 822,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 820,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 818,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 809,
																						"src": "10524:6:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 819,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 809,
																						"src": "10533:6:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "10524:15:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 821,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 800,
																					"src": "10542:1:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10524:19:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "10494:49:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 825,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10550:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 826,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "10494:57:1",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 824,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10546:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 827,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "10493:59:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "10484:68:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 807,
														"id": 829,
														"nodeType": "Return",
														"src": "10477:75:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 798,
										"nodeType": "StructuredDocumentation",
										"src": "10235:89:1",
										"text": " @notice Calculates sqrt(a), following the selected rounding direction."
									},
									"id": 832,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "10338:4:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 804,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 800,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "10351:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 832,
												"src": "10343:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 799,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10343:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 803,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "10363:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 832,
												"src": "10354:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$265",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 802,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 801,
														"name": "Rounding",
														"nameLocations": [
															"10354:8:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 265,
														"src": "10354:8:1"
													},
													"referencedDeclaration": 265,
													"src": "10354:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$265",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10342:30:1"
									},
									"returnParameters": {
										"id": 807,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 806,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 832,
												"src": "10396:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 805,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10396:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10395:9:1"
									},
									"scope": 1308,
									"src": "10329:240:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 963,
										"nodeType": "Block",
										"src": "10760:922:1",
										"statements": [
											{
												"assignments": [
													841
												],
												"declarations": [
													{
														"constant": false,
														"id": 841,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "10778:6:1",
														"nodeType": "VariableDeclaration",
														"scope": 963,
														"src": "10770:14:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 840,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10770:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 843,
												"initialValue": {
													"hexValue": "30",
													"id": 842,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "10787:1:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10770:18:1"
											},
											{
												"id": 960,
												"nodeType": "UncheckedBlock",
												"src": "10798:855:1",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 848,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 846,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 844,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 835,
																	"src": "10826:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 845,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10835:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "10826:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 847,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10841:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10826:16:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 858,
														"nodeType": "IfStatement",
														"src": "10822:99:1",
														"trueBody": {
															"id": 857,
															"nodeType": "Block",
															"src": "10844:77:1",
															"statements": [
																{
																	"expression": {
																		"id": 851,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 849,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 835,
																			"src": "10862:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 850,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10872:3:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "10862:13:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 852,
																	"nodeType": "ExpressionStatement",
																	"src": "10862:13:1"
																},
																{
																	"expression": {
																		"id": 855,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 853,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 841,
																			"src": "10893:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 854,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10903:3:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "10893:13:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 856,
																	"nodeType": "ExpressionStatement",
																	"src": "10893:13:1"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 863,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 861,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 859,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 835,
																	"src": "10938:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 860,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10947:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "10938:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 862,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10952:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10938:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 873,
														"nodeType": "IfStatement",
														"src": "10934:96:1",
														"trueBody": {
															"id": 872,
															"nodeType": "Block",
															"src": "10955:75:1",
															"statements": [
																{
																	"expression": {
																		"id": 866,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 864,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 835,
																			"src": "10973:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 865,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10983:2:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "10973:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 867,
																	"nodeType": "ExpressionStatement",
																	"src": "10973:12:1"
																},
																{
																	"expression": {
																		"id": 870,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 868,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 841,
																			"src": "11003:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 869,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11013:2:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "11003:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 871,
																	"nodeType": "ExpressionStatement",
																	"src": "11003:12:1"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 878,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 876,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 874,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 835,
																	"src": "11047:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 875,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11056:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "11047:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 877,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11061:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11047:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 888,
														"nodeType": "IfStatement",
														"src": "11043:96:1",
														"trueBody": {
															"id": 887,
															"nodeType": "Block",
															"src": "11064:75:1",
															"statements": [
																{
																	"expression": {
																		"id": 881,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 879,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 835,
																			"src": "11082:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 880,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11092:2:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11082:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 882,
																	"nodeType": "ExpressionStatement",
																	"src": "11082:12:1"
																},
																{
																	"expression": {
																		"id": 885,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 883,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 841,
																			"src": "11112:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 884,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11122:2:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11112:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 886,
																	"nodeType": "ExpressionStatement",
																	"src": "11112:12:1"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 893,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 891,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 889,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 835,
																	"src": "11156:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 890,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11165:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "11156:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 892,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11170:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11156:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 903,
														"nodeType": "IfStatement",
														"src": "11152:96:1",
														"trueBody": {
															"id": 902,
															"nodeType": "Block",
															"src": "11173:75:1",
															"statements": [
																{
																	"expression": {
																		"id": 896,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 894,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 835,
																			"src": "11191:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 895,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11201:2:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11191:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 897,
																	"nodeType": "ExpressionStatement",
																	"src": "11191:12:1"
																},
																{
																	"expression": {
																		"id": 900,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 898,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 841,
																			"src": "11221:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 899,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11231:2:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11221:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 901,
																	"nodeType": "ExpressionStatement",
																	"src": "11221:12:1"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 908,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 906,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 904,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 835,
																	"src": "11265:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 905,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11274:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "11265:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 907,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11278:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11265:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 918,
														"nodeType": "IfStatement",
														"src": "11261:93:1",
														"trueBody": {
															"id": 917,
															"nodeType": "Block",
															"src": "11281:73:1",
															"statements": [
																{
																	"expression": {
																		"id": 911,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 909,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 835,
																			"src": "11299:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 910,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11309:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "11299:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 912,
																	"nodeType": "ExpressionStatement",
																	"src": "11299:11:1"
																},
																{
																	"expression": {
																		"id": 915,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 913,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 841,
																			"src": "11328:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 914,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11338:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "11328:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 916,
																	"nodeType": "ExpressionStatement",
																	"src": "11328:11:1"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 923,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 921,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 919,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 835,
																	"src": "11371:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 920,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11380:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "11371:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 922,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11384:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11371:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 933,
														"nodeType": "IfStatement",
														"src": "11367:93:1",
														"trueBody": {
															"id": 932,
															"nodeType": "Block",
															"src": "11387:73:1",
															"statements": [
																{
																	"expression": {
																		"id": 926,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 924,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 835,
																			"src": "11405:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 925,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11415:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "11405:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 927,
																	"nodeType": "ExpressionStatement",
																	"src": "11405:11:1"
																},
																{
																	"expression": {
																		"id": 930,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 928,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 841,
																			"src": "11434:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 929,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11444:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "11434:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 931,
																	"nodeType": "ExpressionStatement",
																	"src": "11434:11:1"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 938,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 936,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 934,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 835,
																	"src": "11477:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 935,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11486:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "11477:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 937,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11490:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11477:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 948,
														"nodeType": "IfStatement",
														"src": "11473:93:1",
														"trueBody": {
															"id": 947,
															"nodeType": "Block",
															"src": "11493:73:1",
															"statements": [
																{
																	"expression": {
																		"id": 941,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 939,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 835,
																			"src": "11511:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 940,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11521:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "11511:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 942,
																	"nodeType": "ExpressionStatement",
																	"src": "11511:11:1"
																},
																{
																	"expression": {
																		"id": 945,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 943,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 841,
																			"src": "11540:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 944,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11550:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "11540:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 946,
																	"nodeType": "ExpressionStatement",
																	"src": "11540:11:1"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 953,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 951,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 949,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 835,
																	"src": "11583:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 950,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11592:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "11583:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 952,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11596:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11583:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 959,
														"nodeType": "IfStatement",
														"src": "11579:64:1",
														"trueBody": {
															"id": 958,
															"nodeType": "Block",
															"src": "11599:44:1",
															"statements": [
																{
																	"expression": {
																		"id": 956,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 954,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 841,
																			"src": "11617:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 955,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11627:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "11617:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 957,
																	"nodeType": "ExpressionStatement",
																	"src": "11617:11:1"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 961,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 841,
													"src": "11669:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 839,
												"id": 962,
												"nodeType": "Return",
												"src": "11662:13:1"
											}
										]
									},
									"documentation": {
										"id": 833,
										"nodeType": "StructuredDocumentation",
										"src": "10575:119:1",
										"text": " @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 964,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "10708:4:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 836,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 835,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10721:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 964,
												"src": "10713:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 834,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10713:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10712:15:1"
									},
									"returnParameters": {
										"id": 839,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 838,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 964,
												"src": "10751:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 837,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10751:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10750:9:1"
									},
									"scope": 1308,
									"src": "10699:983:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 998,
										"nodeType": "Block",
										"src": "11915:168:1",
										"statements": [
											{
												"id": 997,
												"nodeType": "UncheckedBlock",
												"src": "11925:152:1",
												"statements": [
													{
														"assignments": [
															976
														],
														"declarations": [
															{
																"constant": false,
																"id": 976,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "11957:6:1",
																"nodeType": "VariableDeclaration",
																"scope": 997,
																"src": "11949:14:1",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 975,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "11949:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 980,
														"initialValue": {
															"arguments": [
																{
																	"id": 978,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 967,
																	"src": "11971:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 977,
																"name": "log2",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	964,
																	999
																],
																"referencedDeclaration": 964,
																"src": "11966:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 979,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11966:11:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "11949:28:1"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 995,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 981,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 976,
																"src": "11998:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 990,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 983,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 970,
																						"src": "12025:8:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$265",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$265",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 982,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1307,
																					"src": "12008:16:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$265_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 984,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "12008:26:1",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 989,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 987,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 985,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "12038:1:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"id": 986,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 976,
																						"src": "12043:6:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "12038:11:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 988,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 967,
																					"src": "12052:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "12038:19:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "12008:49:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 992,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12064:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 993,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "12008:57:1",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 991,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12060:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 994,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "12007:59:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "11998:68:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 974,
														"id": 996,
														"nodeType": "Return",
														"src": "11991:75:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 965,
										"nodeType": "StructuredDocumentation",
										"src": "11688:142:1",
										"text": " @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 999,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "11844:4:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 971,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 967,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11857:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 999,
												"src": "11849:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 966,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11849:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 970,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "11873:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 999,
												"src": "11864:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$265",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 969,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 968,
														"name": "Rounding",
														"nameLocations": [
															"11864:8:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 265,
														"src": "11864:8:1"
													},
													"referencedDeclaration": 265,
													"src": "11864:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$265",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11848:34:1"
									},
									"returnParameters": {
										"id": 974,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 973,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 999,
												"src": "11906:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 972,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11906:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11905:9:1"
									},
									"scope": 1308,
									"src": "11835:248:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1127,
										"nodeType": "Block",
										"src": "12276:854:1",
										"statements": [
											{
												"assignments": [
													1008
												],
												"declarations": [
													{
														"constant": false,
														"id": 1008,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "12294:6:1",
														"nodeType": "VariableDeclaration",
														"scope": 1127,
														"src": "12286:14:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1007,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12286:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1010,
												"initialValue": {
													"hexValue": "30",
													"id": 1009,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "12303:1:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12286:18:1"
											},
											{
												"id": 1124,
												"nodeType": "UncheckedBlock",
												"src": "12314:787:1",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1015,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1011,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1002,
																"src": "12342:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																},
																"id": 1014,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1012,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12351:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 1013,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12357:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "12351:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																}
															},
															"src": "12342:17:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1027,
														"nodeType": "IfStatement",
														"src": "12338:103:1",
														"trueBody": {
															"id": 1026,
															"nodeType": "Block",
															"src": "12361:80:1",
															"statements": [
																{
																	"expression": {
																		"id": 1020,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1016,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1002,
																			"src": "12379:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			},
																			"id": 1019,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1017,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12388:2:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3634",
																				"id": 1018,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12394:2:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_64_by_1",
																					"typeString": "int_const 64"
																				},
																				"value": "64"
																			},
																			"src": "12388:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			}
																		},
																		"src": "12379:17:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1021,
																	"nodeType": "ExpressionStatement",
																	"src": "12379:17:1"
																},
																{
																	"expression": {
																		"id": 1024,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1022,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1008,
																			"src": "12414:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1023,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12424:2:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "12414:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1025,
																	"nodeType": "ExpressionStatement",
																	"src": "12414:12:1"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1032,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1028,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1002,
																"src": "12458:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																},
																"id": 1031,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1029,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12467:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 1030,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12473:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "12467:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																}
															},
															"src": "12458:17:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1044,
														"nodeType": "IfStatement",
														"src": "12454:103:1",
														"trueBody": {
															"id": 1043,
															"nodeType": "Block",
															"src": "12477:80:1",
															"statements": [
																{
																	"expression": {
																		"id": 1037,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1033,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1002,
																			"src": "12495:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			},
																			"id": 1036,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1034,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12504:2:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3332",
																				"id": 1035,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12510:2:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_32_by_1",
																					"typeString": "int_const 32"
																				},
																				"value": "32"
																			},
																			"src": "12504:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			}
																		},
																		"src": "12495:17:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1038,
																	"nodeType": "ExpressionStatement",
																	"src": "12495:17:1"
																},
																{
																	"expression": {
																		"id": 1041,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1039,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1008,
																			"src": "12530:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1040,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12540:2:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "12530:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1042,
																	"nodeType": "ExpressionStatement",
																	"src": "12530:12:1"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1049,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1045,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1002,
																"src": "12574:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																},
																"id": 1048,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1046,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12583:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 1047,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12589:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "12583:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																}
															},
															"src": "12574:17:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1061,
														"nodeType": "IfStatement",
														"src": "12570:103:1",
														"trueBody": {
															"id": 1060,
															"nodeType": "Block",
															"src": "12593:80:1",
															"statements": [
																{
																	"expression": {
																		"id": 1054,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1050,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1002,
																			"src": "12611:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			},
																			"id": 1053,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1051,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12620:2:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3136",
																				"id": 1052,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12626:2:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_16_by_1",
																					"typeString": "int_const 16"
																				},
																				"value": "16"
																			},
																			"src": "12620:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			}
																		},
																		"src": "12611:17:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1055,
																	"nodeType": "ExpressionStatement",
																	"src": "12611:17:1"
																},
																{
																	"expression": {
																		"id": 1058,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1056,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1008,
																			"src": "12646:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1057,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12656:2:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "12646:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1059,
																	"nodeType": "ExpressionStatement",
																	"src": "12646:12:1"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1066,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1062,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1002,
																"src": "12690:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																},
																"id": 1065,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1063,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12699:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 1064,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12705:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "12699:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																}
															},
															"src": "12690:16:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1078,
														"nodeType": "IfStatement",
														"src": "12686:100:1",
														"trueBody": {
															"id": 1077,
															"nodeType": "Block",
															"src": "12708:78:1",
															"statements": [
																{
																	"expression": {
																		"id": 1071,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1067,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1002,
																			"src": "12726:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			},
																			"id": 1070,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1068,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12735:2:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "38",
																				"id": 1069,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12741:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_8_by_1",
																					"typeString": "int_const 8"
																				},
																				"value": "8"
																			},
																			"src": "12735:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			}
																		},
																		"src": "12726:16:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1072,
																	"nodeType": "ExpressionStatement",
																	"src": "12726:16:1"
																},
																{
																	"expression": {
																		"id": 1075,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1073,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1008,
																			"src": "12760:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1074,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12770:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "12760:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1076,
																	"nodeType": "ExpressionStatement",
																	"src": "12760:11:1"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1083,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1079,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1002,
																"src": "12803:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"id": 1082,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1080,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12812:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 1081,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12818:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "12812:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																}
															},
															"src": "12803:16:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1095,
														"nodeType": "IfStatement",
														"src": "12799:100:1",
														"trueBody": {
															"id": 1094,
															"nodeType": "Block",
															"src": "12821:78:1",
															"statements": [
																{
																	"expression": {
																		"id": 1088,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1084,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1002,
																			"src": "12839:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			},
																			"id": 1087,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1085,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12848:2:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "34",
																				"id": 1086,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12854:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4_by_1",
																					"typeString": "int_const 4"
																				},
																				"value": "4"
																			},
																			"src": "12848:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			}
																		},
																		"src": "12839:16:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1089,
																	"nodeType": "ExpressionStatement",
																	"src": "12839:16:1"
																},
																{
																	"expression": {
																		"id": 1092,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1090,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1008,
																			"src": "12873:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1091,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12883:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "12873:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1093,
																	"nodeType": "ExpressionStatement",
																	"src": "12873:11:1"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1100,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1096,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1002,
																"src": "12916:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"id": 1099,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1097,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12925:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 1098,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12931:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "12925:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																}
															},
															"src": "12916:16:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1112,
														"nodeType": "IfStatement",
														"src": "12912:100:1",
														"trueBody": {
															"id": 1111,
															"nodeType": "Block",
															"src": "12934:78:1",
															"statements": [
																{
																	"expression": {
																		"id": 1105,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1101,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1002,
																			"src": "12952:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"id": 1104,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1102,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12961:2:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "32",
																				"id": 1103,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12967:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"src": "12961:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			}
																		},
																		"src": "12952:16:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1106,
																	"nodeType": "ExpressionStatement",
																	"src": "12952:16:1"
																},
																{
																	"expression": {
																		"id": 1109,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1107,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1008,
																			"src": "12986:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1108,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12996:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "12986:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1110,
																	"nodeType": "ExpressionStatement",
																	"src": "12986:11:1"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1117,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1113,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1002,
																"src": "13029:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"id": 1116,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1114,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13038:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1115,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13044:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "13038:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																}
															},
															"src": "13029:16:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1123,
														"nodeType": "IfStatement",
														"src": "13025:66:1",
														"trueBody": {
															"id": 1122,
															"nodeType": "Block",
															"src": "13047:44:1",
															"statements": [
																{
																	"expression": {
																		"id": 1120,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1118,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1008,
																			"src": "13065:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 1119,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13075:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "13065:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1121,
																	"nodeType": "ExpressionStatement",
																	"src": "13065:11:1"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 1125,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1008,
													"src": "13117:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1006,
												"id": 1126,
												"nodeType": "Return",
												"src": "13110:13:1"
											}
										]
									},
									"documentation": {
										"id": 1000,
										"nodeType": "StructuredDocumentation",
										"src": "12089:120:1",
										"text": " @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 1128,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "12223:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1003,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1002,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12237:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 1128,
												"src": "12229:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1001,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12229:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12228:15:1"
									},
									"returnParameters": {
										"id": 1006,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1005,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1128,
												"src": "12267:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1004,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12267:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12266:9:1"
									},
									"scope": 1308,
									"src": "12214:916:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1162,
										"nodeType": "Block",
										"src": "13365:170:1",
										"statements": [
											{
												"id": 1161,
												"nodeType": "UncheckedBlock",
												"src": "13375:154:1",
												"statements": [
													{
														"assignments": [
															1140
														],
														"declarations": [
															{
																"constant": false,
																"id": 1140,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "13407:6:1",
																"nodeType": "VariableDeclaration",
																"scope": 1161,
																"src": "13399:14:1",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1139,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "13399:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1144,
														"initialValue": {
															"arguments": [
																{
																	"id": 1142,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1131,
																	"src": "13422:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1141,
																"name": "log10",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1128,
																	1163
																],
																"referencedDeclaration": 1128,
																"src": "13416:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1143,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13416:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "13399:29:1"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1159,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1145,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1140,
																"src": "13449:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1154,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 1147,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1134,
																						"src": "13476:8:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$265",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$265",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 1146,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1307,
																					"src": "13459:16:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$265_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 1148,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "13459:26:1",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1153,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1151,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3130",
																						"id": 1149,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "13489:2:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_10_by_1",
																							"typeString": "int_const 10"
																						},
																						"value": "10"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "**",
																					"rightExpression": {
																						"id": 1150,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1140,
																						"src": "13495:6:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "13489:12:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1152,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1131,
																					"src": "13504:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "13489:20:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "13459:50:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1156,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13516:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1157,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "13459:58:1",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1155,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13512:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1158,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "13458:60:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "13449:69:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1138,
														"id": 1160,
														"nodeType": "Return",
														"src": "13442:76:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1129,
										"nodeType": "StructuredDocumentation",
										"src": "13136:143:1",
										"text": " @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1163,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "13293:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1135,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1131,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13307:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 1163,
												"src": "13299:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1130,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13299:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1134,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "13323:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1163,
												"src": "13314:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$265",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1133,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1132,
														"name": "Rounding",
														"nameLocations": [
															"13314:8:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 265,
														"src": "13314:8:1"
													},
													"referencedDeclaration": 265,
													"src": "13314:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$265",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13298:34:1"
									},
									"returnParameters": {
										"id": 1138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1137,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1163,
												"src": "13356:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1136,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13356:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13355:9:1"
									},
									"scope": 1308,
									"src": "13284:251:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1249,
										"nodeType": "Block",
										"src": "13855:600:1",
										"statements": [
											{
												"assignments": [
													1172
												],
												"declarations": [
													{
														"constant": false,
														"id": 1172,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "13873:6:1",
														"nodeType": "VariableDeclaration",
														"scope": 1249,
														"src": "13865:14:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1171,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "13865:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1174,
												"initialValue": {
													"hexValue": "30",
													"id": 1173,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "13882:1:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13865:18:1"
											},
											{
												"id": 1246,
												"nodeType": "UncheckedBlock",
												"src": "13893:533:1",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1179,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1177,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1175,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1166,
																	"src": "13921:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 1176,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13930:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "13921:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1178,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13936:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "13921:16:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1189,
														"nodeType": "IfStatement",
														"src": "13917:98:1",
														"trueBody": {
															"id": 1188,
															"nodeType": "Block",
															"src": "13939:76:1",
															"statements": [
																{
																	"expression": {
																		"id": 1182,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1180,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1166,
																			"src": "13957:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 1181,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13967:3:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "13957:13:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1183,
																	"nodeType": "ExpressionStatement",
																	"src": "13957:13:1"
																},
																{
																	"expression": {
																		"id": 1186,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1184,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1172,
																			"src": "13988:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1185,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13998:2:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "13988:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1187,
																	"nodeType": "ExpressionStatement",
																	"src": "13988:12:1"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1194,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1192,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1190,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1166,
																	"src": "14032:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 1191,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14041:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "14032:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1193,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14046:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14032:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1204,
														"nodeType": "IfStatement",
														"src": "14028:95:1",
														"trueBody": {
															"id": 1203,
															"nodeType": "Block",
															"src": "14049:74:1",
															"statements": [
																{
																	"expression": {
																		"id": 1197,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1195,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1166,
																			"src": "14067:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1196,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14077:2:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "14067:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1198,
																	"nodeType": "ExpressionStatement",
																	"src": "14067:12:1"
																},
																{
																	"expression": {
																		"id": 1201,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1199,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1172,
																			"src": "14097:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1200,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14107:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "14097:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1202,
																	"nodeType": "ExpressionStatement",
																	"src": "14097:11:1"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1209,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1207,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1205,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1166,
																	"src": "14140:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 1206,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14149:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "14140:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1208,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14154:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14140:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1219,
														"nodeType": "IfStatement",
														"src": "14136:95:1",
														"trueBody": {
															"id": 1218,
															"nodeType": "Block",
															"src": "14157:74:1",
															"statements": [
																{
																	"expression": {
																		"id": 1212,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1210,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1166,
																			"src": "14175:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1211,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14185:2:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "14175:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1213,
																	"nodeType": "ExpressionStatement",
																	"src": "14175:12:1"
																},
																{
																	"expression": {
																		"id": 1216,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1214,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1172,
																			"src": "14205:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1215,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14215:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "14205:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1217,
																	"nodeType": "ExpressionStatement",
																	"src": "14205:11:1"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1224,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1222,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1220,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1166,
																	"src": "14248:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 1221,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14257:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "14248:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1223,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14262:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14248:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1234,
														"nodeType": "IfStatement",
														"src": "14244:95:1",
														"trueBody": {
															"id": 1233,
															"nodeType": "Block",
															"src": "14265:74:1",
															"statements": [
																{
																	"expression": {
																		"id": 1227,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1225,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1166,
																			"src": "14283:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1226,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14293:2:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "14283:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1228,
																	"nodeType": "ExpressionStatement",
																	"src": "14283:12:1"
																},
																{
																	"expression": {
																		"id": 1231,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1229,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1172,
																			"src": "14313:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1230,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14323:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "14313:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1232,
																	"nodeType": "ExpressionStatement",
																	"src": "14313:11:1"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1239,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1237,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1235,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1166,
																	"src": "14356:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 1236,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14365:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "14356:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1238,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14369:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14356:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1245,
														"nodeType": "IfStatement",
														"src": "14352:64:1",
														"trueBody": {
															"id": 1244,
															"nodeType": "Block",
															"src": "14372:44:1",
															"statements": [
																{
																	"expression": {
																		"id": 1242,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1240,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1172,
																			"src": "14390:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 1241,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14400:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "14390:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1243,
																	"nodeType": "ExpressionStatement",
																	"src": "14390:11:1"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 1247,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1172,
													"src": "14442:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1170,
												"id": 1248,
												"nodeType": "Return",
												"src": "14435:13:1"
											}
										]
									},
									"documentation": {
										"id": 1164,
										"nodeType": "StructuredDocumentation",
										"src": "13541:246:1",
										"text": " @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."
									},
									"id": 1250,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "13801:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1166,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13816:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 1250,
												"src": "13808:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1165,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13808:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13807:15:1"
									},
									"returnParameters": {
										"id": 1170,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1169,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1250,
												"src": "13846:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1168,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13846:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13845:9:1"
									},
									"scope": 1308,
									"src": "13792:663:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1287,
										"nodeType": "Block",
										"src": "14692:177:1",
										"statements": [
											{
												"id": 1286,
												"nodeType": "UncheckedBlock",
												"src": "14702:161:1",
												"statements": [
													{
														"assignments": [
															1262
														],
														"declarations": [
															{
																"constant": false,
																"id": 1262,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "14734:6:1",
																"nodeType": "VariableDeclaration",
																"scope": 1286,
																"src": "14726:14:1",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1261,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "14726:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1266,
														"initialValue": {
															"arguments": [
																{
																	"id": 1264,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1253,
																	"src": "14750:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1263,
																"name": "log256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1250,
																	1288
																],
																"referencedDeclaration": 1250,
																"src": "14743:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1265,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14743:13:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "14726:30:1"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1284,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1267,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1262,
																"src": "14777:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1279,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 1269,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1256,
																						"src": "14804:8:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$265",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$265",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 1268,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1307,
																					"src": "14787:16:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$265_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 1270,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "14787:26:1",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1278,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1276,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 1271,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "14817:1:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 1274,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 1272,
																									"name": "result",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1262,
																									"src": "14823:6:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "<<",
																								"rightExpression": {
																									"hexValue": "33",
																									"id": 1273,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "14833:1:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_3_by_1",
																										"typeString": "int_const 3"
																									},
																									"value": "3"
																								},
																								"src": "14823:11:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 1275,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "14822:13:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "14817:18:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1277,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1253,
																					"src": "14838:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "14817:26:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "14787:56:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1281,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14850:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1282,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "14787:64:1",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1280,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14846:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1283,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "14786:66:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "14777:75:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1260,
														"id": 1285,
														"nodeType": "Return",
														"src": "14770:82:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1251,
										"nodeType": "StructuredDocumentation",
										"src": "14461:144:1",
										"text": " @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1288,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "14619:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1257,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1253,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "14634:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 1288,
												"src": "14626:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1252,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14626:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1256,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "14650:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1288,
												"src": "14641:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$265",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1255,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1254,
														"name": "Rounding",
														"nameLocations": [
															"14641:8:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 265,
														"src": "14641:8:1"
													},
													"referencedDeclaration": 265,
													"src": "14641:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$265",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14625:34:1"
									},
									"returnParameters": {
										"id": 1260,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1259,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1288,
												"src": "14683:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1258,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14683:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14682:9:1"
									},
									"scope": 1308,
									"src": "14610:259:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1306,
										"nodeType": "Block",
										"src": "15067:48:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 1304,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"id": 1302,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 1299,
																	"name": "rounding",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1292,
																	"src": "15090:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Rounding_$265",
																		"typeString": "enum Math.Rounding"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_enum$_Rounding_$265",
																		"typeString": "enum Math.Rounding"
																	}
																],
																"id": 1298,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "15084:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint8_$",
																	"typeString": "type(uint8)"
																},
																"typeName": {
																	"id": 1297,
																	"name": "uint8",
																	"nodeType": "ElementaryTypeName",
																	"src": "15084:5:1",
																	"typeDescriptions": {}
																}
															},
															"id": 1300,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15084:15:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "%",
														"rightExpression": {
															"hexValue": "32",
															"id": 1301,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15102:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "15084:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "31",
														"id": 1303,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "15107:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "15084:24:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1296,
												"id": 1305,
												"nodeType": "Return",
												"src": "15077:31:1"
											}
										]
									},
									"documentation": {
										"id": 1289,
										"nodeType": "StructuredDocumentation",
										"src": "14875:113:1",
										"text": " @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."
									},
									"id": 1307,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unsignedRoundsUp",
									"nameLocation": "15002:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1293,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1292,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "15028:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1307,
												"src": "15019:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$265",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1291,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1290,
														"name": "Rounding",
														"nameLocations": [
															"15019:8:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 265,
														"src": "15019:8:1"
													},
													"referencedDeclaration": 265,
													"src": "15019:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$265",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15018:19:1"
									},
									"returnParameters": {
										"id": 1296,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1295,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1307,
												"src": "15061:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1294,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15061:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15060:6:1"
									},
									"scope": 1308,
									"src": "14993:122:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1309,
							"src": "203:14914:1",
							"usedErrors": [
								260
							],
							"usedEvents": []
						}
					],
					"src": "103:15014:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SignedMath.sol",
					"exportedSymbols": {
						"SignedMath": [
							1413
						]
					},
					"id": 1414,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1310,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "109:24:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SignedMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1311,
								"nodeType": "StructuredDocumentation",
								"src": "135:80:2",
								"text": " @dev Standard signed math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 1413,
							"linearizedBaseContracts": [
								1413
							],
							"name": "SignedMath",
							"nameLocation": "224:10:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1328,
										"nodeType": "Block",
										"src": "376:37:2",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 1323,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1321,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1314,
															"src": "393:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 1322,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1316,
															"src": "397:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "393:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 1325,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1316,
														"src": "405:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 1326,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "393:13:2",
													"trueExpression": {
														"id": 1324,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1314,
														"src": "401:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 1320,
												"id": 1327,
												"nodeType": "Return",
												"src": "386:20:2"
											}
										]
									},
									"documentation": {
										"id": 1312,
										"nodeType": "StructuredDocumentation",
										"src": "241:66:2",
										"text": " @dev Returns the largest of two signed numbers."
									},
									"id": 1329,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "321:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1317,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1314,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "332:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 1329,
												"src": "325:8:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1313,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "325:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1316,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "342:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 1329,
												"src": "335:8:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1315,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "335:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "324:20:2"
									},
									"returnParameters": {
										"id": 1320,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1319,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1329,
												"src": "368:6:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1318,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "368:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "367:8:2"
									},
									"scope": 1413,
									"src": "312:101:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1346,
										"nodeType": "Block",
										"src": "555:37:2",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 1341,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1339,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1332,
															"src": "572:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 1340,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1334,
															"src": "576:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "572:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 1343,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1334,
														"src": "584:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 1344,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "572:13:2",
													"trueExpression": {
														"id": 1342,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1332,
														"src": "580:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 1338,
												"id": 1345,
												"nodeType": "Return",
												"src": "565:20:2"
											}
										]
									},
									"documentation": {
										"id": 1330,
										"nodeType": "StructuredDocumentation",
										"src": "419:67:2",
										"text": " @dev Returns the smallest of two signed numbers."
									},
									"id": 1347,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "500:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1335,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1332,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "511:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 1347,
												"src": "504:8:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1331,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "504:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1334,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "521:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 1347,
												"src": "514:8:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1333,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "514:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "503:20:2"
									},
									"returnParameters": {
										"id": 1338,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1337,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1347,
												"src": "547:6:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1336,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "547:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "546:8:2"
									},
									"scope": 1413,
									"src": "491:101:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1390,
										"nodeType": "Block",
										"src": "797:162:2",
										"statements": [
											{
												"assignments": [
													1358
												],
												"declarations": [
													{
														"constant": false,
														"id": 1358,
														"mutability": "mutable",
														"name": "x",
														"nameLocation": "866:1:2",
														"nodeType": "VariableDeclaration",
														"scope": 1390,
														"src": "859:8:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 1357,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "859:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1371,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 1370,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 1361,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1359,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1350,
																	"src": "871:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 1360,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1352,
																	"src": "875:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "871:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 1362,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "870:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 1368,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 1365,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1363,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1350,
																				"src": "882:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 1364,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1352,
																				"src": "886:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "882:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 1366,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "881:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1367,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "892:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "881:12:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 1369,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "880:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "870:24:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "859:35:2"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 1388,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1372,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1358,
														"src": "911:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 1386,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1380,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 1377,
																						"name": "x",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1358,
																						"src": "931:1:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					],
																					"id": 1376,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "923:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint256_$",
																						"typeString": "type(uint256)"
																					},
																					"typeName": {
																						"id": 1375,
																						"name": "uint256",
																						"nodeType": "ElementaryTypeName",
																						"src": "923:7:2",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 1378,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "923:10:2",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">>",
																			"rightExpression": {
																				"hexValue": "323535",
																				"id": 1379,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "937:3:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_255_by_1",
																					"typeString": "int_const 255"
																				},
																				"value": "255"
																			},
																			"src": "923:17:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1374,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "916:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_int256_$",
																			"typeString": "type(int256)"
																		},
																		"typeName": {
																			"id": 1373,
																			"name": "int256",
																			"nodeType": "ElementaryTypeName",
																			"src": "916:6:2",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1381,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "916:25:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 1384,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1382,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1350,
																				"src": "945:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 1383,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1352,
																				"src": "949:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "945:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 1385,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "944:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "916:35:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 1387,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "915:37:2",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "911:41:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 1356,
												"id": 1389,
												"nodeType": "Return",
												"src": "904:48:2"
											}
										]
									},
									"documentation": {
										"id": 1348,
										"nodeType": "StructuredDocumentation",
										"src": "598:126:2",
										"text": " @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."
									},
									"id": 1391,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "738:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1353,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1350,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "753:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 1391,
												"src": "746:8:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1349,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "746:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1352,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "763:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 1391,
												"src": "756:8:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1351,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "756:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "745:20:2"
									},
									"returnParameters": {
										"id": 1356,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1355,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1391,
												"src": "789:6:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1354,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "789:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "788:8:2"
									},
									"scope": 1413,
									"src": "729:230:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1411,
										"nodeType": "Block",
										"src": "1103:158:2",
										"statements": [
											{
												"id": 1410,
												"nodeType": "UncheckedBlock",
												"src": "1113:142:2",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 1403,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1401,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1394,
																			"src": "1228:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1402,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1233:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1228:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseExpression": {
																		"id": 1406,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "-",
																		"prefix": true,
																		"src": "1241:2:2",
																		"subExpression": {
																			"id": 1405,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1394,
																			"src": "1242:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"id": 1407,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "Conditional",
																	"src": "1228:15:2",
																	"trueExpression": {
																		"id": 1404,
																		"name": "n",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1394,
																		"src": "1237:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																],
																"id": 1400,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1220:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 1399,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1220:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 1408,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1220:24:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1398,
														"id": 1409,
														"nodeType": "Return",
														"src": "1213:31:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1392,
										"nodeType": "StructuredDocumentation",
										"src": "965:78:2",
										"text": " @dev Returns the absolute unsigned value of a signed value."
									},
									"id": 1412,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "abs",
									"nameLocation": "1057:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1395,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1394,
												"mutability": "mutable",
												"name": "n",
												"nameLocation": "1068:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 1412,
												"src": "1061:8:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1393,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1061:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1060:10:2"
									},
									"returnParameters": {
										"id": 1398,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1397,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1412,
												"src": "1094:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1396,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1094:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1093:9:2"
									},
									"scope": 1413,
									"src": "1048:213:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1414,
							"src": "216:1047:2",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "109:1154:2"
				},
				"id": 2
			},
			"contracts/AaveGhoster.sol": {
				"ast": {
					"absolutePath": "contracts/AaveGhoster.sol",
					"exportedSymbols": {
						"AaveGhoster": [
							1723
						],
						"ERC404": [
							2723
						],
						"ERC721Receiver": [
							1847
						],
						"Math": [
							1308
						],
						"Ownable": [
							1828
						],
						"SignedMath": [
							1413
						],
						"Strings": [
							254
						]
					},
					"id": 1724,
					"license": "UNLICENSED",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1415,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "39:23:3"
						},
						{
							"absolutePath": "contracts/ERC404.sol",
							"file": "./ERC404.sol",
							"id": 1416,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1724,
							"sourceUnit": 2724,
							"src": "66:22:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
							"file": "@openzeppelin/contracts/utils/Strings.sol",
							"id": 1417,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1724,
							"sourceUnit": 255,
							"src": "90:51:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1418,
										"name": "ERC404",
										"nameLocations": [
											"169:6:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2723,
										"src": "169:6:3"
									},
									"id": 1419,
									"nodeType": "InheritanceSpecifier",
									"src": "169:6:3"
								}
							],
							"canonicalName": "AaveGhoster",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1723,
							"linearizedBaseContracts": [
								1723,
								2723,
								1828
							],
							"name": "AaveGhoster",
							"nameLocation": "154:11:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "f28ca1dd",
									"id": 1421,
									"mutability": "mutable",
									"name": "dataURI",
									"nameLocation": "197:7:3",
									"nodeType": "VariableDeclaration",
									"scope": 1723,
									"src": "183:21:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 1420,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "183:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "d547cfb7",
									"id": 1423,
									"mutability": "mutable",
									"name": "baseTokenURI",
									"nameLocation": "225:12:3",
									"nodeType": "VariableDeclaration",
									"scope": 1723,
									"src": "211:26:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 1422,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "211:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 1445,
										"nodeType": "Block",
										"src": "346:55:3",
										"statements": [
											{
												"expression": {
													"id": 1443,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1435,
															"name": "balanceOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1920,
															"src": "357:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1437,
														"indexExpression": {
															"id": 1436,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1425,
															"src": "367:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "357:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_rational_15000000000000000000000_by_1",
															"typeString": "int_const 15000000000000000000000"
														},
														"id": 1442,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"leftExpression": {
															"hexValue": "3135303030",
															"id": 1438,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "377:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_15000_by_1",
																"typeString": "int_const 15000"
															},
															"value": "15000"
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_rational_1000000000000000000_by_1",
																"typeString": "int_const 1000000000000000000"
															},
															"id": 1441,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "3130",
																"id": 1439,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "385:2:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"value": "10"
															},
															"nodeType": "BinaryOperation",
															"operator": "**",
															"rightExpression": {
																"hexValue": "3138",
																"id": 1440,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "391:2:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_18_by_1",
																	"typeString": "int_const 18"
																},
																"value": "18"
															},
															"src": "385:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000000000000000000_by_1",
																"typeString": "int_const 1000000000000000000"
															}
														},
														"src": "377:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_15000000000000000000000_by_1",
															"typeString": "int_const 15000000000000000000000"
														}
													},
													"src": "357:36:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1444,
												"nodeType": "ExpressionStatement",
												"src": "357:36:3"
											}
										]
									},
									"id": 1446,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "4161766547686f73746572",
													"id": 1428,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "297:13:3",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_2ed10b9dd9c8cd1abe9968dcfcd942ef4d290183eb46c3784ded287c5a7b5f86",
														"typeString": "literal_string \"AaveGhoster\""
													},
													"value": "AaveGhoster"
												},
												{
													"hexValue": "4141564547484f53544552",
													"id": 1429,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "312:13:3",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_c37e85c905e78778c0cd8df0b0918959d56a01f55c5154b901b84d9e5a068a22",
														"typeString": "literal_string \"AAVEGHOSTER\""
													},
													"value": "AAVEGHOSTER"
												},
												{
													"hexValue": "3138",
													"id": 1430,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "327:2:3",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												{
													"hexValue": "3135303030",
													"id": 1431,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "331:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_15000_by_1",
														"typeString": "int_const 15000"
													},
													"value": "15000"
												},
												{
													"id": 1432,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1425,
													"src": "338:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 1433,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1427,
												"name": "ERC404",
												"nameLocations": [
													"290:6:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2723,
												"src": "290:6:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "290:55:3"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1426,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1425,
												"mutability": "mutable",
												"name": "_owner",
												"nameLocation": "276:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 1446,
												"src": "268:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1424,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "268:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "257:32:3"
									},
									"returnParameters": {
										"id": 1434,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "346:0:3"
									},
									"scope": 1723,
									"src": "246:155:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1457,
										"nodeType": "Block",
										"src": "470:37:3",
										"statements": [
											{
												"expression": {
													"id": 1455,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1453,
														"name": "dataURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1421,
														"src": "481:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1454,
														"name": "_dataURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1448,
														"src": "491:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "481:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 1456,
												"nodeType": "ExpressionStatement",
												"src": "481:18:3"
											}
										]
									},
									"functionSelector": "18d217c3",
									"id": 1458,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1451,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1450,
												"name": "onlyOwner",
												"nameLocations": [
													"460:9:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1749,
												"src": "460:9:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "460:9:3"
										}
									],
									"name": "setDataURI",
									"nameLocation": "418:10:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1449,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1448,
												"mutability": "mutable",
												"name": "_dataURI",
												"nameLocation": "443:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1458,
												"src": "429:22:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1447,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "429:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "428:24:3"
									},
									"returnParameters": {
										"id": 1452,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "470:0:3"
									},
									"scope": 1723,
									"src": "409:98:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1469,
										"nodeType": "Block",
										"src": "578:43:3",
										"statements": [
											{
												"expression": {
													"id": 1467,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1465,
														"name": "baseTokenURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1423,
														"src": "589:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1466,
														"name": "_tokenURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1460,
														"src": "604:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "589:24:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 1468,
												"nodeType": "ExpressionStatement",
												"src": "589:24:3"
											}
										]
									},
									"functionSelector": "e0df5b6f",
									"id": 1470,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1463,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1462,
												"name": "onlyOwner",
												"nameLocations": [
													"568:9:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1749,
												"src": "568:9:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "568:9:3"
										}
									],
									"name": "setTokenURI",
									"nameLocation": "524:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1460,
												"mutability": "mutable",
												"name": "_tokenURI",
												"nameLocation": "550:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 1470,
												"src": "536:23:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1459,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "536:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "535:25:3"
									},
									"returnParameters": {
										"id": 1464,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "578:0:3"
									},
									"scope": 1723,
									"src": "515:106:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1484,
										"nodeType": "Block",
										"src": "738:49:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1480,
															"name": "_name",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1472,
															"src": "764:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"id": 1481,
															"name": "_symbol",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1474,
															"src": "771:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1479,
														"name": "_setNameSymbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2722,
														"src": "749:14:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory,string memory)"
														}
													},
													"id": 1482,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "749:30:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1483,
												"nodeType": "ExpressionStatement",
												"src": "749:30:3"
											}
										]
									},
									"functionSelector": "504334c2",
									"id": 1485,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1477,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1476,
												"name": "onlyOwner",
												"nameLocations": [
													"728:9:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1749,
												"src": "728:9:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "728:9:3"
										}
									],
									"name": "setNameSymbol",
									"nameLocation": "638:13:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1475,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1472,
												"mutability": "mutable",
												"name": "_name",
												"nameLocation": "676:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1485,
												"src": "662:19:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1471,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "662:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1474,
												"mutability": "mutable",
												"name": "_symbol",
												"nameLocation": "706:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1485,
												"src": "692:21:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1473,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "692:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "651:69:3"
									},
									"returnParameters": {
										"id": 1478,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "738:0:3"
									},
									"scope": 1723,
									"src": "629:158:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2049
									],
									"body": {
										"id": 1721,
										"nodeType": "Block",
										"src": "870:2357:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1499,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1495,
																	"name": "baseTokenURI",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1423,
																	"src": "891:12:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage",
																		"typeString": "string storage ref"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_string_storage",
																		"typeString": "string storage ref"
																	}
																],
																"id": 1494,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "885:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																	"typeString": "type(bytes storage pointer)"
																},
																"typeName": {
																	"id": 1493,
																	"name": "bytes",
																	"nodeType": "ElementaryTypeName",
																	"src": "885:5:3",
																	"typeDescriptions": {}
																}
															},
															"id": 1496,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "885:19:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes storage pointer"
															}
														},
														"id": 1497,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "905:6:3",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "885:26:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1498,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "914:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "885:30:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1719,
													"nodeType": "Block",
													"src": "1006:2214:3",
													"statements": [
														{
															"assignments": [
																1512
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1512,
																	"mutability": "mutable",
																	"name": "seed",
																	"nameLocation": "1027:4:3",
																	"nodeType": "VariableDeclaration",
																	"scope": 1719,
																	"src": "1021:10:3",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	},
																	"typeName": {
																		"id": 1511,
																		"name": "uint8",
																		"nodeType": "ElementaryTypeName",
																		"src": "1021:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1525,
															"initialValue": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"id": 1520,
																								"name": "id",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1487,
																								"src": "1074:2:3",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							],
																							"expression": {
																								"id": 1518,
																								"name": "abi",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 4294967295,
																								"src": "1057:3:3",
																								"typeDescriptions": {
																									"typeIdentifier": "t_magic_abi",
																									"typeString": "abi"
																								}
																							},
																							"id": 1519,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberLocation": "1061:12:3",
																							"memberName": "encodePacked",
																							"nodeType": "MemberAccess",
																							"src": "1057:16:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																								"typeString": "function () pure returns (bytes memory)"
																							}
																						},
																						"id": 1521,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "1057:20:3",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes_memory_ptr",
																							"typeString": "bytes memory"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_bytes_memory_ptr",
																							"typeString": "bytes memory"
																						}
																					],
																					"id": 1517,
																					"name": "keccak256",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967288,
																					"src": "1047:9:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																						"typeString": "function (bytes memory) pure returns (bytes32)"
																					}
																				},
																				"id": 1522,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "1047:31:3",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			],
																			"id": 1516,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1040:6:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_bytes1_$",
																				"typeString": "type(bytes1)"
																			},
																			"typeName": {
																				"id": 1515,
																				"name": "bytes1",
																				"nodeType": "ElementaryTypeName",
																				"src": "1040:6:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1523,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1040:39:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes1",
																			"typeString": "bytes1"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes1",
																			"typeString": "bytes1"
																		}
																	],
																	"id": 1514,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1034:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint8_$",
																		"typeString": "type(uint8)"
																	},
																	"typeName": {
																		"id": 1513,
																		"name": "uint8",
																		"nodeType": "ElementaryTypeName",
																		"src": "1034:5:3",
																		"typeDescriptions": {}
																	}
																},
																"id": 1524,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1034:46:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "1021:59:3"
														},
														{
															"assignments": [
																1527
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1527,
																	"mutability": "mutable",
																	"name": "image",
																	"nameLocation": "1109:5:3",
																	"nodeType": "VariableDeclaration",
																	"scope": 1719,
																	"src": "1095:19:3",
																	"stateVariable": false,
																	"storageLocation": "memory",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string"
																	},
																	"typeName": {
																		"id": 1526,
																		"name": "string",
																		"nodeType": "ElementaryTypeName",
																		"src": "1095:6:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_storage_ptr",
																			"typeString": "string"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1528,
															"nodeType": "VariableDeclarationStatement",
															"src": "1095:19:3"
														},
														{
															"assignments": [
																1530
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1530,
																	"mutability": "mutable",
																	"name": "color",
																	"nameLocation": "1143:5:3",
																	"nodeType": "VariableDeclaration",
																	"scope": 1719,
																	"src": "1129:19:3",
																	"stateVariable": false,
																	"storageLocation": "memory",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string"
																	},
																	"typeName": {
																		"id": 1529,
																		"name": "string",
																		"nodeType": "ElementaryTypeName",
																		"src": "1129:6:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_storage_ptr",
																			"typeString": "string"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1531,
															"nodeType": "VariableDeclarationStatement",
															"src": "1129:19:3"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																},
																"id": 1534,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1532,
																	"name": "seed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1512,
																	"src": "1169:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"hexValue": "313030",
																	"id": 1533,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1177:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_100_by_1",
																		"typeString": "int_const 100"
																	},
																	"value": "100"
																},
																"src": "1169:11:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"condition": {
																	"commonType": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	},
																	"id": 1546,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1544,
																		"name": "seed",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1512,
																		"src": "1276:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"hexValue": "313630",
																		"id": 1545,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1284:3:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_160_by_1",
																			"typeString": "int_const 160"
																		},
																		"value": "160"
																	},
																	"src": "1276:11:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseBody": {
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		},
																		"id": 1558,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1556,
																			"name": "seed",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1512,
																			"src": "1382:4:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<=",
																		"rightExpression": {
																			"hexValue": "323130",
																			"id": 1557,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1390:3:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_210_by_1",
																				"typeString": "int_const 210"
																			},
																			"value": "210"
																		},
																		"src": "1382:11:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseBody": {
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			},
																			"id": 1570,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1568,
																				"name": "seed",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1512,
																				"src": "1490:4:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<=",
																			"rightExpression": {
																				"hexValue": "323430",
																				"id": 1569,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1498:3:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_240_by_1",
																					"typeString": "int_const 240"
																				},
																				"value": "240"
																			},
																			"src": "1490:11:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseBody": {
																			"condition": {
																				"commonType": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				},
																				"id": 1582,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1580,
																					"name": "seed",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1512,
																					"src": "1598:4:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint8",
																						"typeString": "uint8"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<=",
																				"rightExpression": {
																					"hexValue": "323535",
																					"id": 1581,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "1606:3:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_255_by_1",
																						"typeString": "int_const 255"
																					},
																					"value": "255"
																				},
																				"src": "1598:11:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"falseBody": {
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_uint16",
																						"typeString": "uint16"
																					},
																					"id": 1594,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1592,
																						"name": "seed",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1512,
																						"src": "1702:4:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint8",
																							"typeString": "uint8"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<=",
																					"rightExpression": {
																						"hexValue": "333030",
																						"id": 1593,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "1710:3:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_300_by_1",
																							"typeString": "int_const 300"
																						},
																						"value": "300"
																					},
																					"src": "1702:11:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"falseBody": {
																					"condition": {
																						"commonType": {
																							"typeIdentifier": "t_uint16",
																							"typeString": "uint16"
																						},
																						"id": 1606,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 1604,
																							"name": "seed",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1512,
																							"src": "1808:4:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint8",
																								"typeString": "uint8"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "<=",
																						"rightExpression": {
																							"hexValue": "333630",
																							"id": 1605,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "1816:3:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_360_by_1",
																								"typeString": "int_const 360"
																							},
																							"value": "360"
																						},
																						"src": "1808:11:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"falseBody": {
																						"condition": {
																							"commonType": {
																								"typeIdentifier": "t_uint16",
																								"typeString": "uint16"
																							},
																							"id": 1618,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"id": 1616,
																								"name": "seed",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1512,
																								"src": "1914:4:3",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint8",
																									"typeString": "uint8"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "<=",
																							"rightExpression": {
																								"hexValue": "343130",
																								"id": 1617,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "1922:3:3",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_410_by_1",
																									"typeString": "int_const 410"
																								},
																								"value": "410"
																							},
																							"src": "1914:11:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bool",
																								"typeString": "bool"
																							}
																						},
																						"falseBody": {
																							"condition": {
																								"commonType": {
																									"typeIdentifier": "t_uint16",
																									"typeString": "uint16"
																								},
																								"id": 1630,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 1628,
																									"name": "seed",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1512,
																									"src": "2019:4:3",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint8",
																										"typeString": "uint8"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "<=",
																								"rightExpression": {
																									"hexValue": "343530",
																									"id": 1629,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "2027:3:3",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_450_by_1",
																										"typeString": "int_const 450"
																									},
																									"value": "450"
																								},
																								"src": "2019:11:3",
																								"typeDescriptions": {
																									"typeIdentifier": "t_bool",
																									"typeString": "bool"
																								}
																							},
																							"falseBody": {
																								"condition": {
																									"commonType": {
																										"typeIdentifier": "t_uint16",
																										"typeString": "uint16"
																									},
																									"id": 1642,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"leftExpression": {
																										"id": 1640,
																										"name": "seed",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1512,
																										"src": "2126:4:3",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint8",
																											"typeString": "uint8"
																										}
																									},
																									"nodeType": "BinaryOperation",
																									"operator": "<=",
																									"rightExpression": {
																										"hexValue": "353130",
																										"id": 1641,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "number",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "2134:3:3",
																										"typeDescriptions": {
																											"typeIdentifier": "t_rational_510_by_1",
																											"typeString": "int_const 510"
																										},
																										"value": "510"
																									},
																									"src": "2126:11:3",
																									"typeDescriptions": {
																										"typeIdentifier": "t_bool",
																										"typeString": "bool"
																									}
																								},
																								"id": 1652,
																								"nodeType": "IfStatement",
																								"src": "2122:103:3",
																								"trueBody": {
																									"id": 1651,
																									"nodeType": "Block",
																									"src": "2139:86:3",
																									"statements": [
																										{
																											"expression": {
																												"id": 1645,
																												"isConstant": false,
																												"isLValue": false,
																												"isPure": false,
																												"lValueRequested": false,
																												"leftHandSide": {
																													"id": 1643,
																													"name": "image",
																													"nodeType": "Identifier",
																													"overloadedDeclarations": [],
																													"referencedDeclaration": 1527,
																													"src": "2158:5:3",
																													"typeDescriptions": {
																														"typeIdentifier": "t_string_memory_ptr",
																														"typeString": "string memory"
																													}
																												},
																												"nodeType": "Assignment",
																												"operator": "=",
																												"rightHandSide": {
																													"hexValue": "31302e706e67",
																													"id": 1644,
																													"isConstant": false,
																													"isLValue": false,
																													"isPure": true,
																													"kind": "string",
																													"lValueRequested": false,
																													"nodeType": "Literal",
																													"src": "2166:8:3",
																													"typeDescriptions": {
																														"typeIdentifier": "t_stringliteral_20b308e26c0fb6874aeb2f535cff9af2944431971c6e4668bcf9a66562054e72",
																														"typeString": "literal_string \"10.png\""
																													},
																													"value": "10.png"
																												},
																												"src": "2158:16:3",
																												"typeDescriptions": {
																													"typeIdentifier": "t_string_memory_ptr",
																													"typeString": "string memory"
																												}
																											},
																											"id": 1646,
																											"nodeType": "ExpressionStatement",
																											"src": "2158:16:3"
																										},
																										{
																											"expression": {
																												"id": 1649,
																												"isConstant": false,
																												"isLValue": false,
																												"isPure": false,
																												"lValueRequested": false,
																												"leftHandSide": {
																													"id": 1647,
																													"name": "color",
																													"nodeType": "Identifier",
																													"overloadedDeclarations": [],
																													"referencedDeclaration": 1530,
																													"src": "2193:5:3",
																													"typeDescriptions": {
																														"typeIdentifier": "t_string_memory_ptr",
																														"typeString": "string memory"
																													}
																												},
																												"nodeType": "Assignment",
																												"operator": "=",
																												"rightHandSide": {
																													"hexValue": "56696f6c6574",
																													"id": 1648,
																													"isConstant": false,
																													"isLValue": false,
																													"isPure": true,
																													"kind": "string",
																													"lValueRequested": false,
																													"nodeType": "Literal",
																													"src": "2201:8:3",
																													"typeDescriptions": {
																														"typeIdentifier": "t_stringliteral_93935b7e501ed19fa63891777541640e49e67e789f00a4509da11f8c050e00a7",
																														"typeString": "literal_string \"Violet\""
																													},
																													"value": "Violet"
																												},
																												"src": "2193:16:3",
																												"typeDescriptions": {
																													"typeIdentifier": "t_string_memory_ptr",
																													"typeString": "string memory"
																												}
																											},
																											"id": 1650,
																											"nodeType": "ExpressionStatement",
																											"src": "2193:16:3"
																										}
																									]
																								}
																							},
																							"id": 1653,
																							"nodeType": "IfStatement",
																							"src": "2015:210:3",
																							"trueBody": {
																								"id": 1639,
																								"nodeType": "Block",
																								"src": "2032:85:3",
																								"statements": [
																									{
																										"expression": {
																											"id": 1633,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": false,
																											"lValueRequested": false,
																											"leftHandSide": {
																												"id": 1631,
																												"name": "image",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 1527,
																												"src": "2051:5:3",
																												"typeDescriptions": {
																													"typeIdentifier": "t_string_memory_ptr",
																													"typeString": "string memory"
																												}
																											},
																											"nodeType": "Assignment",
																											"operator": "=",
																											"rightHandSide": {
																												"hexValue": "392e706e67",
																												"id": 1632,
																												"isConstant": false,
																												"isLValue": false,
																												"isPure": true,
																												"kind": "string",
																												"lValueRequested": false,
																												"nodeType": "Literal",
																												"src": "2059:7:3",
																												"typeDescriptions": {
																													"typeIdentifier": "t_stringliteral_99c2f239443c1135d562265029965416915e9b601d5cae80aa2e864cf3aab1f9",
																													"typeString": "literal_string \"9.png\""
																												},
																												"value": "9.png"
																											},
																											"src": "2051:15:3",
																											"typeDescriptions": {
																												"typeIdentifier": "t_string_memory_ptr",
																												"typeString": "string memory"
																											}
																										},
																										"id": 1634,
																										"nodeType": "ExpressionStatement",
																										"src": "2051:15:3"
																									},
																									{
																										"expression": {
																											"id": 1637,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": false,
																											"lValueRequested": false,
																											"leftHandSide": {
																												"id": 1635,
																												"name": "color",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 1530,
																												"src": "2085:5:3",
																												"typeDescriptions": {
																													"typeIdentifier": "t_string_memory_ptr",
																													"typeString": "string memory"
																												}
																											},
																											"nodeType": "Assignment",
																											"operator": "=",
																											"rightHandSide": {
																												"hexValue": "59656c6c6f77",
																												"id": 1636,
																												"isConstant": false,
																												"isLValue": false,
																												"isPure": true,
																												"kind": "string",
																												"lValueRequested": false,
																												"nodeType": "Literal",
																												"src": "2093:8:3",
																												"typeDescriptions": {
																													"typeIdentifier": "t_stringliteral_4801a9b30db0d42f15f53afea5a0e1f7f82e4390c319394ab1b3b77aa48e6578",
																													"typeString": "literal_string \"Yellow\""
																												},
																												"value": "Yellow"
																											},
																											"src": "2085:16:3",
																											"typeDescriptions": {
																												"typeIdentifier": "t_string_memory_ptr",
																												"typeString": "string memory"
																											}
																										},
																										"id": 1638,
																										"nodeType": "ExpressionStatement",
																										"src": "2085:16:3"
																									}
																								]
																							}
																						},
																						"id": 1654,
																						"nodeType": "IfStatement",
																						"src": "1910:315:3",
																						"trueBody": {
																							"id": 1627,
																							"nodeType": "Block",
																							"src": "1927:83:3",
																							"statements": [
																								{
																									"expression": {
																										"id": 1621,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"leftHandSide": {
																											"id": 1619,
																											"name": "image",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 1527,
																											"src": "1946:5:3",
																											"typeDescriptions": {
																												"typeIdentifier": "t_string_memory_ptr",
																												"typeString": "string memory"
																											}
																										},
																										"nodeType": "Assignment",
																										"operator": "=",
																										"rightHandSide": {
																											"hexValue": "382e706e67",
																											"id": 1620,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": true,
																											"kind": "string",
																											"lValueRequested": false,
																											"nodeType": "Literal",
																											"src": "1954:7:3",
																											"typeDescriptions": {
																												"typeIdentifier": "t_stringliteral_2e966c2831f1c8426a4f775d5bff02ed87b07ce780b9bbbbf4b573cb528128e6",
																												"typeString": "literal_string \"8.png\""
																											},
																											"value": "8.png"
																										},
																										"src": "1946:15:3",
																										"typeDescriptions": {
																											"typeIdentifier": "t_string_memory_ptr",
																											"typeString": "string memory"
																										}
																									},
																									"id": 1622,
																									"nodeType": "ExpressionStatement",
																									"src": "1946:15:3"
																								},
																								{
																									"expression": {
																										"id": 1625,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"leftHandSide": {
																											"id": 1623,
																											"name": "color",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 1530,
																											"src": "1980:5:3",
																											"typeDescriptions": {
																												"typeIdentifier": "t_string_memory_ptr",
																												"typeString": "string memory"
																											}
																										},
																										"nodeType": "Assignment",
																										"operator": "=",
																										"rightHandSide": {
																											"hexValue": "50696e6b",
																											"id": 1624,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": true,
																											"kind": "string",
																											"lValueRequested": false,
																											"nodeType": "Literal",
																											"src": "1988:6:3",
																											"typeDescriptions": {
																												"typeIdentifier": "t_stringliteral_2fd9bcc607da4e20e8591701ee20a794f35ccf1d3f837a3986e3c1929bcbceec",
																												"typeString": "literal_string \"Pink\""
																											},
																											"value": "Pink"
																										},
																										"src": "1980:14:3",
																										"typeDescriptions": {
																											"typeIdentifier": "t_string_memory_ptr",
																											"typeString": "string memory"
																										}
																									},
																									"id": 1626,
																									"nodeType": "ExpressionStatement",
																									"src": "1980:14:3"
																								}
																							]
																						}
																					},
																					"id": 1655,
																					"nodeType": "IfStatement",
																					"src": "1804:421:3",
																					"trueBody": {
																						"id": 1615,
																						"nodeType": "Block",
																						"src": "1821:84:3",
																						"statements": [
																							{
																								"expression": {
																									"id": 1609,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"leftHandSide": {
																										"id": 1607,
																										"name": "image",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1527,
																										"src": "1840:5:3",
																										"typeDescriptions": {
																											"typeIdentifier": "t_string_memory_ptr",
																											"typeString": "string memory"
																										}
																									},
																									"nodeType": "Assignment",
																									"operator": "=",
																									"rightHandSide": {
																										"hexValue": "372e706e67",
																										"id": 1608,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "string",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "1848:7:3",
																										"typeDescriptions": {
																											"typeIdentifier": "t_stringliteral_6c6318ba0aa428fda9bd5d9222ed05d7f36bd9f885c6564d3f652ce365e5f3be",
																											"typeString": "literal_string \"7.png\""
																										},
																										"value": "7.png"
																									},
																									"src": "1840:15:3",
																									"typeDescriptions": {
																										"typeIdentifier": "t_string_memory_ptr",
																										"typeString": "string memory"
																									}
																								},
																								"id": 1610,
																								"nodeType": "ExpressionStatement",
																								"src": "1840:15:3"
																							},
																							{
																								"expression": {
																									"id": 1613,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"leftHandSide": {
																										"id": 1611,
																										"name": "color",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1530,
																										"src": "1874:5:3",
																										"typeDescriptions": {
																											"typeIdentifier": "t_string_memory_ptr",
																											"typeString": "string memory"
																										}
																									},
																									"nodeType": "Assignment",
																									"operator": "=",
																									"rightHandSide": {
																										"hexValue": "426c61636b",
																										"id": 1612,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "string",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "1882:7:3",
																										"typeDescriptions": {
																											"typeIdentifier": "t_stringliteral_cae3132c4acb934bc8a5c772f8c705a3abd649863f689c11838778df34c77ecb",
																											"typeString": "literal_string \"Black\""
																										},
																										"value": "Black"
																									},
																									"src": "1874:15:3",
																									"typeDescriptions": {
																										"typeIdentifier": "t_string_memory_ptr",
																										"typeString": "string memory"
																									}
																								},
																								"id": 1614,
																								"nodeType": "ExpressionStatement",
																								"src": "1874:15:3"
																							}
																						]
																					}
																				},
																				"id": 1656,
																				"nodeType": "IfStatement",
																				"src": "1698:527:3",
																				"trueBody": {
																					"id": 1603,
																					"nodeType": "Block",
																					"src": "1715:84:3",
																					"statements": [
																						{
																							"expression": {
																								"id": 1597,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftHandSide": {
																									"id": 1595,
																									"name": "image",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1527,
																									"src": "1734:5:3",
																									"typeDescriptions": {
																										"typeIdentifier": "t_string_memory_ptr",
																										"typeString": "string memory"
																									}
																								},
																								"nodeType": "Assignment",
																								"operator": "=",
																								"rightHandSide": {
																									"hexValue": "362e706e67",
																									"id": 1596,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "string",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "1742:7:3",
																									"typeDescriptions": {
																										"typeIdentifier": "t_stringliteral_d328573d7183dada63b564b5d79f460ec107641d729638912206a7661085ca66",
																										"typeString": "literal_string \"6.png\""
																									},
																									"value": "6.png"
																								},
																								"src": "1734:15:3",
																								"typeDescriptions": {
																									"typeIdentifier": "t_string_memory_ptr",
																									"typeString": "string memory"
																								}
																							},
																							"id": 1598,
																							"nodeType": "ExpressionStatement",
																							"src": "1734:15:3"
																						},
																						{
																							"expression": {
																								"id": 1601,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftHandSide": {
																									"id": 1599,
																									"name": "color",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1530,
																									"src": "1768:5:3",
																									"typeDescriptions": {
																										"typeIdentifier": "t_string_memory_ptr",
																										"typeString": "string memory"
																									}
																								},
																								"nodeType": "Assignment",
																								"operator": "=",
																								"rightHandSide": {
																									"hexValue": "5768697465",
																									"id": 1600,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "string",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "1776:7:3",
																									"typeDescriptions": {
																										"typeIdentifier": "t_stringliteral_d8be6abfb290c7325c2b3f8da08d37efd1ef2b5da915d00ba3bd068eaab2e770",
																										"typeString": "literal_string \"White\""
																									},
																									"value": "White"
																								},
																								"src": "1768:15:3",
																								"typeDescriptions": {
																									"typeIdentifier": "t_string_memory_ptr",
																									"typeString": "string memory"
																								}
																							},
																							"id": 1602,
																							"nodeType": "ExpressionStatement",
																							"src": "1768:15:3"
																						}
																					]
																				}
																			},
																			"id": 1657,
																			"nodeType": "IfStatement",
																			"src": "1594:631:3",
																			"trueBody": {
																				"id": 1591,
																				"nodeType": "Block",
																				"src": "1611:82:3",
																				"statements": [
																					{
																						"expression": {
																							"id": 1585,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftHandSide": {
																								"id": 1583,
																								"name": "image",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1527,
																								"src": "1630:5:3",
																								"typeDescriptions": {
																									"typeIdentifier": "t_string_memory_ptr",
																									"typeString": "string memory"
																								}
																							},
																							"nodeType": "Assignment",
																							"operator": "=",
																							"rightHandSide": {
																								"hexValue": "352e706e67",
																								"id": 1584,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "string",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "1638:7:3",
																								"typeDescriptions": {
																									"typeIdentifier": "t_stringliteral_477956a6698e27d498d66aaea08db78e4940fb4f1554d714026acfe328796e51",
																									"typeString": "literal_string \"5.png\""
																								},
																								"value": "5.png"
																							},
																							"src": "1630:15:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_string_memory_ptr",
																								"typeString": "string memory"
																							}
																						},
																						"id": 1586,
																						"nodeType": "ExpressionStatement",
																						"src": "1630:15:3"
																					},
																					{
																						"expression": {
																							"id": 1589,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftHandSide": {
																								"id": 1587,
																								"name": "color",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1530,
																								"src": "1664:5:3",
																								"typeDescriptions": {
																									"typeIdentifier": "t_string_memory_ptr",
																									"typeString": "string memory"
																								}
																							},
																							"nodeType": "Assignment",
																							"operator": "=",
																							"rightHandSide": {
																								"hexValue": "526564",
																								"id": 1588,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "string",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "1672:5:3",
																								"typeDescriptions": {
																									"typeIdentifier": "t_stringliteral_2141cedb3aa6a133c84eaab9a808ba56cedf12b957dc92d9d5039a176ad0c99b",
																									"typeString": "literal_string \"Red\""
																								},
																								"value": "Red"
																							},
																							"src": "1664:13:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_string_memory_ptr",
																								"typeString": "string memory"
																							}
																						},
																						"id": 1590,
																						"nodeType": "ExpressionStatement",
																						"src": "1664:13:3"
																					}
																				]
																			}
																		},
																		"id": 1658,
																		"nodeType": "IfStatement",
																		"src": "1486:739:3",
																		"trueBody": {
																			"id": 1579,
																			"nodeType": "Block",
																			"src": "1503:85:3",
																			"statements": [
																				{
																					"expression": {
																						"id": 1573,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftHandSide": {
																							"id": 1571,
																							"name": "image",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1527,
																							"src": "1522:5:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_string_memory_ptr",
																								"typeString": "string memory"
																							}
																						},
																						"nodeType": "Assignment",
																						"operator": "=",
																						"rightHandSide": {
																							"hexValue": "342e706e67",
																							"id": 1572,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "string",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "1530:7:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_stringliteral_391944b693caba52f2d3e8d0232ea4edf3e9787a57a0834b31916ec021c0c1b2",
																								"typeString": "literal_string \"4.png\""
																							},
																							"value": "4.png"
																						},
																						"src": "1522:15:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_string_memory_ptr",
																							"typeString": "string memory"
																						}
																					},
																					"id": 1574,
																					"nodeType": "ExpressionStatement",
																					"src": "1522:15:3"
																				},
																				{
																					"expression": {
																						"id": 1577,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftHandSide": {
																							"id": 1575,
																							"name": "color",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1530,
																							"src": "1556:5:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_string_memory_ptr",
																								"typeString": "string memory"
																							}
																						},
																						"nodeType": "Assignment",
																						"operator": "=",
																						"rightHandSide": {
																							"hexValue": "4f72616e6765",
																							"id": 1576,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "string",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "1564:8:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_stringliteral_e4645c3f3bab4b05ce25b076f3b91e6cb84a8a6641b2137dd5c582836d559dbb",
																								"typeString": "literal_string \"Orange\""
																							},
																							"value": "Orange"
																						},
																						"src": "1556:16:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_string_memory_ptr",
																							"typeString": "string memory"
																						}
																					},
																					"id": 1578,
																					"nodeType": "ExpressionStatement",
																					"src": "1556:16:3"
																				}
																			]
																		}
																	},
																	"id": 1659,
																	"nodeType": "IfStatement",
																	"src": "1378:847:3",
																	"trueBody": {
																		"id": 1567,
																		"nodeType": "Block",
																		"src": "1395:85:3",
																		"statements": [
																			{
																				"expression": {
																					"id": 1561,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"id": 1559,
																						"name": "image",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1527,
																						"src": "1414:5:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_string_memory_ptr",
																							"typeString": "string memory"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "=",
																					"rightHandSide": {
																						"hexValue": "332e706e67",
																						"id": 1560,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "string",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "1422:7:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_stringliteral_e6e9a1106bba8da7d91b62e984e5fd5c2c8c86abe6240e77e1aac5c8e3f51249",
																							"typeString": "literal_string \"3.png\""
																						},
																						"value": "3.png"
																					},
																					"src": "1414:15:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				},
																				"id": 1562,
																				"nodeType": "ExpressionStatement",
																				"src": "1414:15:3"
																			},
																			{
																				"expression": {
																					"id": 1565,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"id": 1563,
																						"name": "color",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1530,
																						"src": "1448:5:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_string_memory_ptr",
																							"typeString": "string memory"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "=",
																					"rightHandSide": {
																						"hexValue": "507572706c65",
																						"id": 1564,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "string",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "1456:8:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_stringliteral_5964c6a3c85f82108f9dd24a7bca48e6443e395a6c28002cf69a3b6f4e96cf01",
																							"typeString": "literal_string \"Purple\""
																						},
																						"value": "Purple"
																					},
																					"src": "1448:16:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				},
																				"id": 1566,
																				"nodeType": "ExpressionStatement",
																				"src": "1448:16:3"
																			}
																		]
																	}
																},
																"id": 1660,
																"nodeType": "IfStatement",
																"src": "1272:953:3",
																"trueBody": {
																	"id": 1555,
																	"nodeType": "Block",
																	"src": "1289:83:3",
																	"statements": [
																		{
																			"expression": {
																				"id": 1549,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftHandSide": {
																					"id": 1547,
																					"name": "image",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1527,
																					"src": "1308:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				},
																				"nodeType": "Assignment",
																				"operator": "=",
																				"rightHandSide": {
																					"hexValue": "322e706e67",
																					"id": 1548,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "1316:7:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_47a2167c77ebd009e7e61f2b29d621744f91496dfb4e524c4820fe96546cb276",
																						"typeString": "literal_string \"2.png\""
																					},
																					"value": "2.png"
																				},
																				"src": "1308:15:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_string_memory_ptr",
																					"typeString": "string memory"
																				}
																			},
																			"id": 1550,
																			"nodeType": "ExpressionStatement",
																			"src": "1308:15:3"
																		},
																		{
																			"expression": {
																				"id": 1553,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftHandSide": {
																					"id": 1551,
																					"name": "color",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1530,
																					"src": "1342:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				},
																				"nodeType": "Assignment",
																				"operator": "=",
																				"rightHandSide": {
																					"hexValue": "426c7565",
																					"id": 1552,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "1350:6:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_4a4529eefd9b0876ecb7bdf2c14d57107d511091ab85cfb1b70d3384c94d6f84",
																						"typeString": "literal_string \"Blue\""
																					},
																					"value": "Blue"
																				},
																				"src": "1342:14:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_string_memory_ptr",
																					"typeString": "string memory"
																				}
																			},
																			"id": 1554,
																			"nodeType": "ExpressionStatement",
																			"src": "1342:14:3"
																		}
																	]
																}
															},
															"id": 1661,
															"nodeType": "IfStatement",
															"src": "1165:1060:3",
															"trueBody": {
																"id": 1543,
																"nodeType": "Block",
																"src": "1182:84:3",
																"statements": [
																	{
																		"expression": {
																			"id": 1537,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 1535,
																				"name": "image",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1527,
																				"src": "1201:5:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_string_memory_ptr",
																					"typeString": "string memory"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"hexValue": "312e706e67",
																				"id": 1536,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "string",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1209:7:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_stringliteral_5a55ed4178ccef03aff4462ced83bfeeaaf37e9da2a9d85b69103ca8274b2f05",
																					"typeString": "literal_string \"1.png\""
																				},
																				"value": "1.png"
																			},
																			"src": "1201:15:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		},
																		"id": 1538,
																		"nodeType": "ExpressionStatement",
																		"src": "1201:15:3"
																	},
																	{
																		"expression": {
																			"id": 1541,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 1539,
																				"name": "color",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1530,
																				"src": "1235:5:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_string_memory_ptr",
																					"typeString": "string memory"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"hexValue": "477265656e",
																				"id": 1540,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "string",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1243:7:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_stringliteral_4ffd8760e08f2acff97aaf4c03e6e4ddfc608bc3f6fec19ea4c9d65014dc87b0",
																					"typeString": "literal_string \"Green\""
																				},
																				"value": "Green"
																			},
																			"src": "1235:15:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		},
																		"id": 1542,
																		"nodeType": "ExpressionStatement",
																		"src": "1235:15:3"
																	}
																]
															}
														},
														{
															"assignments": [
																1663
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1663,
																	"mutability": "mutable",
																	"name": "jsonPreImage",
																	"nameLocation": "2269:12:3",
																	"nodeType": "VariableDeclaration",
																	"scope": 1719,
																	"src": "2255:26:3",
																	"stateVariable": false,
																	"storageLocation": "memory",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string"
																	},
																	"typeName": {
																		"id": 1662,
																		"name": "string",
																		"nodeType": "ElementaryTypeName",
																		"src": "2255:6:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_storage_ptr",
																			"typeString": "string"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1688,
															"initialValue": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"hexValue": "7b226e616d65223a20224161766547686f737465722023",
																						"id": 1673,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "string",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "2366:25:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_stringliteral_fe9d4c51812073cc5e8ec967a205a059f799b9890a5eda0866690d8d8786f686",
																							"typeString": "literal_string \"{\"name\": \"AaveGhoster #\""
																						},
																						"value": "{\"name\": \"AaveGhoster #"
																					},
																					{
																						"arguments": [
																							{
																								"id": 1676,
																								"name": "id",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1487,
																								"src": "2410:2:3",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							],
																							"expression": {
																								"id": 1674,
																								"name": "Strings",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 254,
																								"src": "2393:7:3",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_Strings_$254_$",
																									"typeString": "type(library Strings)"
																								}
																							},
																							"id": 1675,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "2401:8:3",
																							"memberName": "toString",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 67,
																							"src": "2393:16:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																								"typeString": "function (uint256) pure returns (string memory)"
																							}
																						},
																						"id": 1677,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "2393:20:3",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_string_memory_ptr",
																							"typeString": "string memory"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_stringliteral_fe9d4c51812073cc5e8ec967a205a059f799b9890a5eda0866690d8d8786f686",
																							"typeString": "literal_string \"{\"name\": \"AaveGhoster #\""
																						},
																						{
																							"typeIdentifier": "t_string_memory_ptr",
																							"typeString": "string memory"
																						}
																					],
																					"expression": {
																						"id": 1671,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "2352:6:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																							"typeString": "type(string storage pointer)"
																						},
																						"typeName": {
																							"id": 1670,
																							"name": "string",
																							"nodeType": "ElementaryTypeName",
																							"src": "2352:6:3",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 1672,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "2359:6:3",
																					"memberName": "concat",
																					"nodeType": "MemberAccess",
																					"src": "2352:13:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
																						"typeString": "function () pure returns (string memory)"
																					}
																				},
																				"id": 1678,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "2352:62:3",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_string_memory_ptr",
																					"typeString": "string memory"
																				}
																			},
																			{
																				"hexValue": "222c226465736372697074696f6e223a224120636f6c6c656374696f6e206f662031352c303030204161766547686f7374657220656e61626c6564206279204552433430342c20616e206578706572696d656e74616c20746f6b656e207374616e6461726420696e7370697265642062792050616e646f7261222c2265787465726e616c5f75726c223a2268747470733a2f2f6161766567686f737465722e6f6e6c696e65222c22696d616765223a22",
																				"id": 1679,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "string",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2437:178:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_stringliteral_854f884486bac1c129d284ef0dc887ee8e77308cd46a54222bf4afc46d6dcf9a",
																					"typeString": "literal_string \"\",\"description\":\"A collection of 15,000 AaveGhoster enabled by ERC404, an experimental token standard inspired by Pandora\",\"external_url\":\"https://aaveghoster.online\",\"image\":\"\""
																				},
																				"value": "\",\"description\":\"A collection of 15,000 AaveGhoster enabled by ERC404, an experimental token standard inspired by Pandora\",\"external_url\":\"https://aaveghoster.online\",\"image\":\""
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_string_memory_ptr",
																					"typeString": "string memory"
																				},
																				{
																					"typeIdentifier": "t_stringliteral_854f884486bac1c129d284ef0dc887ee8e77308cd46a54222bf4afc46d6dcf9a",
																					"typeString": "literal_string \"\",\"description\":\"A collection of 15,000 AaveGhoster enabled by ERC404, an experimental token standard inspired by Pandora\",\"external_url\":\"https://aaveghoster.online\",\"image\":\"\""
																				}
																			],
																			"expression": {
																				"id": 1668,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "2316:6:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																					"typeString": "type(string storage pointer)"
																				},
																				"typeName": {
																					"id": 1667,
																					"name": "string",
																					"nodeType": "ElementaryTypeName",
																					"src": "2316:6:3",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1669,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "2323:6:3",
																			"memberName": "concat",
																			"nodeType": "MemberAccess",
																			"src": "2316:13:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
																				"typeString": "function () pure returns (string memory)"
																			}
																		},
																		"id": 1680,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2316:318:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"id": 1684,
																				"name": "dataURI",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1421,
																				"src": "2667:7:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_string_storage",
																					"typeString": "string storage ref"
																				}
																			},
																			{
																				"id": 1685,
																				"name": "image",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1527,
																				"src": "2676:5:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_string_memory_ptr",
																					"typeString": "string memory"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_string_storage",
																					"typeString": "string storage ref"
																				},
																				{
																					"typeIdentifier": "t_string_memory_ptr",
																					"typeString": "string memory"
																				}
																			],
																			"expression": {
																				"id": 1682,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "2653:6:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																					"typeString": "type(string storage pointer)"
																				},
																				"typeName": {
																					"id": 1681,
																					"name": "string",
																					"nodeType": "ElementaryTypeName",
																					"src": "2653:6:3",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1683,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "2660:6:3",
																			"memberName": "concat",
																			"nodeType": "MemberAccess",
																			"src": "2653:13:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
																				"typeString": "function () pure returns (string memory)"
																			}
																		},
																		"id": 1686,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2653:29:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"expression": {
																		"id": 1665,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2284:6:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																			"typeString": "type(string storage pointer)"
																		},
																		"typeName": {
																			"id": 1664,
																			"name": "string",
																			"nodeType": "ElementaryTypeName",
																			"src": "2284:6:3",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1666,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2291:6:3",
																	"memberName": "concat",
																	"nodeType": "MemberAccess",
																	"src": "2284:13:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
																		"typeString": "function () pure returns (string memory)"
																	}
																},
																"id": 1687,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2284:413:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "2255:442:3"
														},
														{
															"assignments": [
																1690
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1690,
																	"mutability": "mutable",
																	"name": "jsonPostImage",
																	"nameLocation": "2726:13:3",
																	"nodeType": "VariableDeclaration",
																	"scope": 1719,
																	"src": "2712:27:3",
																	"stateVariable": false,
																	"storageLocation": "memory",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string"
																	},
																	"typeName": {
																		"id": 1689,
																		"name": "string",
																		"nodeType": "ElementaryTypeName",
																		"src": "2712:6:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_storage_ptr",
																			"typeString": "string"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1697,
															"initialValue": {
																"arguments": [
																	{
																		"hexValue": "222c2261747472696275746573223a5b7b2274726169745f74797065223a22436f6c6f72222c2276616c7565223a22",
																		"id": 1694,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2774:49:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_7196ac4a970ec79361a69477bc1a540e85d3935600f7f1445303dbc04fc044ce",
																			"typeString": "literal_string \"\",\"attributes\":[{\"trait_type\":\"Color\",\"value\":\"\""
																		},
																		"value": "\",\"attributes\":[{\"trait_type\":\"Color\",\"value\":\""
																	},
																	{
																		"id": 1695,
																		"name": "color",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1530,
																		"src": "2842:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_stringliteral_7196ac4a970ec79361a69477bc1a540e85d3935600f7f1445303dbc04fc044ce",
																			"typeString": "literal_string \"\",\"attributes\":[{\"trait_type\":\"Color\",\"value\":\"\""
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"expression": {
																		"id": 1692,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2742:6:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																			"typeString": "type(string storage pointer)"
																		},
																		"typeName": {
																			"id": 1691,
																			"name": "string",
																			"nodeType": "ElementaryTypeName",
																			"src": "2742:6:3",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1693,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2749:6:3",
																	"memberName": "concat",
																	"nodeType": "MemberAccess",
																	"src": "2742:13:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
																		"typeString": "function () pure returns (string memory)"
																	}
																},
																"id": 1696,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2742:120:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "2712:150:3"
														},
														{
															"assignments": [
																1699
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1699,
																	"mutability": "mutable",
																	"name": "jsonPostTraits",
																	"nameLocation": "2891:14:3",
																	"nodeType": "VariableDeclaration",
																	"scope": 1719,
																	"src": "2877:28:3",
																	"stateVariable": false,
																	"storageLocation": "memory",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string"
																	},
																	"typeName": {
																		"id": 1698,
																		"name": "string",
																		"nodeType": "ElementaryTypeName",
																		"src": "2877:6:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_storage_ptr",
																			"typeString": "string"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1701,
															"initialValue": {
																"hexValue": "227d5d7d",
																"id": 1700,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2908:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_f5bba0ae94dd88587a882c16bb746e9ca4527b97407fa5d4bdac27455db72fa6",
																	"typeString": "literal_string \"\"}]}\""
																},
																"value": "\"}]}"
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "2877:37:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"hexValue": "646174613a6170706c69636174696f6e2f6a736f6e3b757466382c",
																		"id": 1705,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2991:29:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_947ee3b345bbae8b47ca548e58fd3eb9fc264e3488d72aeca69c8f1f89149b7a",
																			"typeString": "literal_string \"data:application/json;utf8,\""
																		},
																		"value": "data:application/json;utf8,"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"id": 1712,
																						"name": "jsonPreImage",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1663,
																						"src": "3097:12:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_string_memory_ptr",
																							"typeString": "string memory"
																						}
																					},
																					{
																						"id": 1713,
																						"name": "jsonPostImage",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1690,
																						"src": "3111:13:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_string_memory_ptr",
																							"typeString": "string memory"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_string_memory_ptr",
																							"typeString": "string memory"
																						},
																						{
																							"typeIdentifier": "t_string_memory_ptr",
																							"typeString": "string memory"
																						}
																					],
																					"expression": {
																						"id": 1710,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "3083:6:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																							"typeString": "type(string storage pointer)"
																						},
																						"typeName": {
																							"id": 1709,
																							"name": "string",
																							"nodeType": "ElementaryTypeName",
																							"src": "3083:6:3",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 1711,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "3090:6:3",
																					"memberName": "concat",
																					"nodeType": "MemberAccess",
																					"src": "3083:13:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
																						"typeString": "function () pure returns (string memory)"
																					}
																				},
																				"id": 1714,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "3083:42:3",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_string_memory_ptr",
																					"typeString": "string memory"
																				}
																			},
																			{
																				"id": 1715,
																				"name": "jsonPostTraits",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1699,
																				"src": "3152:14:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_string_memory_ptr",
																					"typeString": "string memory"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_string_memory_ptr",
																					"typeString": "string memory"
																				},
																				{
																					"typeIdentifier": "t_string_memory_ptr",
																					"typeString": "string memory"
																				}
																			],
																			"expression": {
																				"id": 1707,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "3043:6:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																					"typeString": "type(string storage pointer)"
																				},
																				"typeName": {
																					"id": 1706,
																					"name": "string",
																					"nodeType": "ElementaryTypeName",
																					"src": "3043:6:3",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1708,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "3050:6:3",
																			"memberName": "concat",
																			"nodeType": "MemberAccess",
																			"src": "3043:13:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
																				"typeString": "function () pure returns (string memory)"
																			}
																		},
																		"id": 1716,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3043:146:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_stringliteral_947ee3b345bbae8b47ca548e58fd3eb9fc264e3488d72aeca69c8f1f89149b7a",
																			"typeString": "literal_string \"data:application/json;utf8,\""
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"expression": {
																		"id": 1703,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2955:6:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																			"typeString": "type(string storage pointer)"
																		},
																		"typeName": {
																			"id": 1702,
																			"name": "string",
																			"nodeType": "ElementaryTypeName",
																			"src": "2955:6:3",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1704,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2962:6:3",
																	"memberName": "concat",
																	"nodeType": "MemberAccess",
																	"src": "2955:13:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
																		"typeString": "function () pure returns (string memory)"
																	}
																},
																"id": 1717,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2955:253:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															"functionReturnParameters": 1492,
															"id": 1718,
															"nodeType": "Return",
															"src": "2931:277:3"
														}
													]
												},
												"id": 1720,
												"nodeType": "IfStatement",
												"src": "881:2339:3",
												"trueBody": {
													"id": 1510,
													"nodeType": "Block",
													"src": "917:83:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1503,
																		"name": "baseTokenURI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1423,
																		"src": "953:12:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_storage",
																			"typeString": "string storage ref"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"id": 1506,
																				"name": "id",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1487,
																				"src": "984:2:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 1504,
																				"name": "Strings",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 254,
																				"src": "967:7:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_Strings_$254_$",
																					"typeString": "type(library Strings)"
																				}
																			},
																			"id": 1505,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "975:8:3",
																			"memberName": "toString",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 67,
																			"src": "967:16:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																				"typeString": "function (uint256) pure returns (string memory)"
																			}
																		},
																		"id": 1507,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "967:20:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_storage",
																			"typeString": "string storage ref"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"expression": {
																		"id": 1501,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "939:6:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																			"typeString": "type(string storage pointer)"
																		},
																		"typeName": {
																			"id": 1500,
																			"name": "string",
																			"nodeType": "ElementaryTypeName",
																			"src": "939:6:3",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1502,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "946:6:3",
																	"memberName": "concat",
																	"nodeType": "MemberAccess",
																	"src": "939:13:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
																		"typeString": "function () pure returns (string memory)"
																	}
																},
																"id": 1508,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "939:49:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															"functionReturnParameters": 1492,
															"id": 1509,
															"nodeType": "Return",
															"src": "932:56:3"
														}
													]
												}
											}
										]
									},
									"functionSelector": "c87b56dd",
									"id": 1722,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "804:8:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1489,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "837:8:3"
									},
									"parameters": {
										"id": 1488,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1487,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "821:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1722,
												"src": "813:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1486,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "813:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "812:12:3"
									},
									"returnParameters": {
										"id": 1492,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1491,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1722,
												"src": "855:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1490,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "855:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "854:15:3"
									},
									"scope": 1723,
									"src": "795:2432:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 1724,
							"src": "145:3085:3",
							"usedErrors": [
								1733,
								1735,
								1892,
								1894,
								1896,
								1898,
								1900
							],
							"usedEvents": [
								1731,
								1858,
								1866,
								1874,
								1882,
								1890
							]
						}
					],
					"src": "39:3191:3"
				},
				"id": 3
			},
			"contracts/ERC404.sol": {
				"ast": {
					"absolutePath": "contracts/ERC404.sol",
					"exportedSymbols": {
						"ERC404": [
							2723
						],
						"ERC721Receiver": [
							1847
						],
						"Ownable": [
							1828
						]
					},
					"id": 2724,
					"license": "UNLICENSED",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1725,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "39:23:4"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1828,
							"linearizedBaseContracts": [
								1828
							],
							"name": "Ownable",
							"nameLocation": "84:7:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 1731,
									"name": "OwnershipTransferred",
									"nameLocation": "105:20:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1730,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1727,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "142:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1731,
												"src": "126:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1726,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "126:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1729,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "164:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1731,
												"src": "148:24:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1728,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "148:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "125:48:4"
									},
									"src": "99:75:4"
								},
								{
									"errorSelector": "82b42900",
									"id": 1733,
									"name": "Unauthorized",
									"nameLocation": "188:12:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1732,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "200:2:4"
									},
									"src": "182:21:4"
								},
								{
									"errorSelector": "49e27cff",
									"id": 1735,
									"name": "InvalidOwner",
									"nameLocation": "215:12:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1734,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "227:2:4"
									},
									"src": "209:21:4"
								},
								{
									"constant": false,
									"functionSelector": "8da5cb5b",
									"id": 1737,
									"mutability": "mutable",
									"name": "owner",
									"nameLocation": "253:5:4",
									"nodeType": "VariableDeclaration",
									"scope": 1828,
									"src": "238:20:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1736,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "238:7:4",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 1748,
										"nodeType": "Block",
										"src": "296:79:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1742,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1739,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "311:3:4",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1740,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "315:6:4",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "311:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 1741,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1737,
														"src": "325:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "311:19:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1746,
												"nodeType": "IfStatement",
												"src": "307:46:4",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1743,
															"name": "Unauthorized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1733,
															"src": "339:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1744,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "339:14:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1745,
													"nodeType": "RevertStatement",
													"src": "332:21:4"
												}
											},
											{
												"id": 1747,
												"nodeType": "PlaceholderStatement",
												"src": "366:1:4"
											}
										]
									},
									"id": 1749,
									"name": "onlyOwner",
									"nameLocation": "276:9:4",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1738,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "285:2:4"
									},
									"src": "267:108:4",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1776,
										"nodeType": "Block",
										"src": "411:151:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1759,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1754,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1751,
														"src": "426:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1757,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "444:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1756,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "436:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1755,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "436:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 1758,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "436:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "426:20:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1763,
												"nodeType": "IfStatement",
												"src": "422:47:4",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1760,
															"name": "InvalidOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1735,
															"src": "455:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1761,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "455:14:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1762,
													"nodeType": "RevertStatement",
													"src": "448:21:4"
												}
											},
											{
												"expression": {
													"id": 1766,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1764,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1737,
														"src": "482:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1765,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1751,
														"src": "490:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "482:14:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1767,
												"nodeType": "ExpressionStatement",
												"src": "482:14:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1771,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "543:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1770,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "535:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1769,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "535:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 1772,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "535:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1773,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1751,
															"src": "547:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1768,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1731,
														"src": "514:20:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 1774,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "514:40:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1775,
												"nodeType": "EmitStatement",
												"src": "509:45:4"
											}
										]
									},
									"id": 1777,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1752,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1751,
												"mutability": "mutable",
												"name": "_owner",
												"nameLocation": "403:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1777,
												"src": "395:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1750,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "395:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "394:16:4"
									},
									"returnParameters": {
										"id": 1753,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "411:0:4"
									},
									"scope": 1828,
									"src": "383:179:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1804,
										"nodeType": "Block",
										"src": "638:151:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1789,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1784,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1779,
														"src": "653:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1787,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "671:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1786,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "663:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1785,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "663:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 1788,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "663:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "653:20:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1793,
												"nodeType": "IfStatement",
												"src": "649:47:4",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1790,
															"name": "InvalidOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1735,
															"src": "682:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1791,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "682:14:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1792,
													"nodeType": "RevertStatement",
													"src": "675:21:4"
												}
											},
											{
												"expression": {
													"id": 1796,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1794,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1737,
														"src": "709:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1795,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1779,
														"src": "717:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "709:14:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1797,
												"nodeType": "ExpressionStatement",
												"src": "709:14:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1799,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "762:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1800,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "766:6:4",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "762:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1801,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1779,
															"src": "774:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1798,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1731,
														"src": "741:20:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 1802,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "741:40:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1803,
												"nodeType": "EmitStatement",
												"src": "736:45:4"
											}
										]
									},
									"functionSelector": "f2fde38b",
									"id": 1805,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1782,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1781,
												"name": "onlyOwner",
												"nameLocations": [
													"628:9:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1749,
												"src": "628:9:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "628:9:4"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "579:17:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1780,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1779,
												"mutability": "mutable",
												"name": "_owner",
												"nameLocation": "605:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1805,
												"src": "597:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1778,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "597:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "596:16:4"
									},
									"returnParameters": {
										"id": 1783,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "638:0:4"
									},
									"scope": 1828,
									"src": "570:219:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1826,
										"nodeType": "Block",
										"src": "849:99:4",
										"statements": [
											{
												"expression": {
													"id": 1815,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1810,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1737,
														"src": "860:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1813,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "876:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1812,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "868:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1811,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "868:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 1814,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "868:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "860:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1816,
												"nodeType": "ExpressionStatement",
												"src": "860:18:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1818,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "917:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1819,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "921:6:4",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "917:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1822,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "937:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1821,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "929:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1820,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "929:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 1823,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "929:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1817,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1731,
														"src": "896:20:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 1824,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "896:44:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1825,
												"nodeType": "EmitStatement",
												"src": "891:49:4"
											}
										]
									},
									"functionSelector": "2b968958",
									"id": 1827,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1808,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1807,
												"name": "onlyOwner",
												"nameLocations": [
													"839:9:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1749,
												"src": "839:9:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "839:9:4"
										}
									],
									"name": "revokeOwnership",
									"nameLocation": "806:15:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1806,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "821:2:4"
									},
									"returnParameters": {
										"id": 1809,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "849:0:4"
									},
									"scope": 1828,
									"src": "797:151:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 2724,
							"src": "66:885:4",
							"usedErrors": [
								1733,
								1735
							],
							"usedEvents": [
								1731
							]
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ERC721Receiver",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1847,
							"linearizedBaseContracts": [
								1847
							],
							"name": "ERC721Receiver",
							"nameLocation": "973:14:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1845,
										"nodeType": "Block",
										"src": "1141:66:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"expression": {
															"id": 1841,
															"name": "ERC721Receiver",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1847,
															"src": "1159:14:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ERC721Receiver_$1847_$",
																"typeString": "type(contract ERC721Receiver)"
															}
														},
														"id": 1842,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "1174:16:4",
														"memberName": "onERC721Received",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1846,
														"src": "1159:31:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
															"typeString": "function ERC721Receiver.onERC721Received(address,address,uint256,bytes calldata) returns (bytes4)"
														}
													},
													"id": 1843,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"memberLocation": "1191:8:4",
													"memberName": "selector",
													"nodeType": "MemberAccess",
													"src": "1159:40:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"functionReturnParameters": 1840,
												"id": 1844,
												"nodeType": "Return",
												"src": "1152:47:4"
											}
										]
									},
									"functionSelector": "150b7a02",
									"id": 1846,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "onERC721Received",
									"nameLocation": "1004:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1837,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1830,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1846,
												"src": "1031:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1829,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1031:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1832,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1846,
												"src": "1049:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1831,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1049:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1834,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1846,
												"src": "1067:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1833,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1067:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1836,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1846,
												"src": "1085:14:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1835,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1085:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1020:86:4"
									},
									"returnParameters": {
										"id": 1840,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1839,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1846,
												"src": "1133:6:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1838,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1133:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1132:8:4"
									},
									"scope": 1847,
									"src": "995:212:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "external"
								}
							],
							"scope": 2724,
							"src": "955:255:4",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1849,
										"name": "Ownable",
										"nameLocations": [
											"1961:7:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1828,
										"src": "1961:7:4"
									},
									"id": 1850,
									"nodeType": "InheritanceSpecifier",
									"src": "1961:7:4"
								}
							],
							"canonicalName": "ERC404",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1848,
								"nodeType": "StructuredDocumentation",
								"src": "1214:719:4",
								"text": "@notice ERC404\n         A gas-efficient, mixed ERC20 / ERC721 implementation\n         with native liquidity and fractionalization.\n         This is an experimental standard designed to integrate\n         with pre-existing ERC20 / ERC721 support as smoothly as\n         possible.\n @dev    In order to support full functionality of ERC20 and ERC721\n         supply assumptions are made that slightly constraint usage.\n         Ensure decimals are sufficiently large (standard 18 recommended)\n         as ids are effectively encoded in the lowest range of amounts.\n         NFTs are spent on ERC20 functions in a FILO queue, this is by\n         design."
							},
							"fullyImplemented": false,
							"id": 2723,
							"linearizedBaseContracts": [
								2723,
								1828
							],
							"name": "ERC404",
							"nameLocation": "1951:6:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"eventSelector": "e59fdd36d0d223c0c7d996db7ad796880f45e1936cb0bb7ac102e7082e031487",
									"id": 1858,
									"name": "ERC20Transfer",
									"nameLocation": "1997:13:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1857,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1852,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2037:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1858,
												"src": "2021:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1851,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2021:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1854,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2068:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1858,
												"src": "2052:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1853,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2052:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1856,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2089:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1858,
												"src": "2081:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1855,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2081:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2010:92:4"
									},
									"src": "1991:112:4"
								},
								{
									"anonymous": false,
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 1866,
									"name": "Approval",
									"nameLocation": "2115:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1865,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1860,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2150:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1866,
												"src": "2134:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1859,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2134:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1862,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2182:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1866,
												"src": "2166:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1861,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2166:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1864,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2208:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1866,
												"src": "2200:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1863,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2200:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2123:98:4"
									},
									"src": "2109:113:4"
								},
								{
									"anonymous": false,
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 1874,
									"name": "Transfer",
									"nameLocation": "2234:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1873,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1868,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2269:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1874,
												"src": "2253:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1867,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2253:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1870,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2300:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1874,
												"src": "2284:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1869,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2284:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1872,
												"indexed": true,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "2329:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1874,
												"src": "2313:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1871,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2313:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2242:96:4"
									},
									"src": "2228:111:4"
								},
								{
									"anonymous": false,
									"eventSelector": "797365dabb18fa726ccbccbe18c6f24c34e3b0653f2e99ea873bd7b84763dde6",
									"id": 1882,
									"name": "ERC721Approval",
									"nameLocation": "2351:14:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1881,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1876,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2392:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1882,
												"src": "2376:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1875,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2376:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1878,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2424:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1882,
												"src": "2408:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1877,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2408:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1880,
												"indexed": true,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "2458:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1882,
												"src": "2442:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1879,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2442:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2365:102:4"
									},
									"src": "2345:123:4"
								},
								{
									"anonymous": false,
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 1890,
									"name": "ApprovalForAll",
									"nameLocation": "2480:14:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1889,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1884,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2521:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1890,
												"src": "2505:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1883,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2505:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1886,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "2553:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1890,
												"src": "2537:24:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1885,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2537:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1888,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "2577:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1890,
												"src": "2572:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1887,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2572:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2494:98:4"
									},
									"src": "2474:119:4"
								},
								{
									"errorSelector": "c5723b51",
									"id": 1892,
									"name": "NotFound",
									"nameLocation": "2622:8:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1891,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2630:2:4"
									},
									"src": "2616:17:4"
								},
								{
									"errorSelector": "23369fa6",
									"id": 1894,
									"name": "AlreadyExists",
									"nameLocation": "2645:13:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1893,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2658:2:4"
									},
									"src": "2639:22:4"
								},
								{
									"errorSelector": "9c8d2cd2",
									"id": 1896,
									"name": "InvalidRecipient",
									"nameLocation": "2673:16:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1895,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2689:2:4"
									},
									"src": "2667:25:4"
								},
								{
									"errorSelector": "ddb5de5e",
									"id": 1898,
									"name": "InvalidSender",
									"nameLocation": "2704:13:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1897,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2717:2:4"
									},
									"src": "2698:22:4"
								},
								{
									"errorSelector": "3da63931",
									"id": 1900,
									"name": "UnsafeRecipient",
									"nameLocation": "2732:15:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1899,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2747:2:4"
									},
									"src": "2726:24:4"
								},
								{
									"constant": false,
									"documentation": {
										"id": 1901,
										"nodeType": "StructuredDocumentation",
										"src": "2775:19:4",
										"text": "@dev Token name"
									},
									"functionSelector": "06fdde03",
									"id": 1903,
									"mutability": "mutable",
									"name": "name",
									"nameLocation": "2814:4:4",
									"nodeType": "VariableDeclaration",
									"scope": 2723,
									"src": "2800:18:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 1902,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "2800:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 1904,
										"nodeType": "StructuredDocumentation",
										"src": "2827:21:4",
										"text": "@dev Token symbol"
									},
									"functionSelector": "95d89b41",
									"id": 1906,
									"mutability": "mutable",
									"name": "symbol",
									"nameLocation": "2868:6:4",
									"nodeType": "VariableDeclaration",
									"scope": 2723,
									"src": "2854:20:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 1905,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "2854:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 1907,
										"nodeType": "StructuredDocumentation",
										"src": "2883:47:4",
										"text": "@dev Decimals for fractional representation"
									},
									"functionSelector": "313ce567",
									"id": 1909,
									"mutability": "immutable",
									"name": "decimals",
									"nameLocation": "2959:8:4",
									"nodeType": "VariableDeclaration",
									"scope": 2723,
									"src": "2936:31:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 1908,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "2936:5:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 1910,
										"nodeType": "StructuredDocumentation",
										"src": "2976:54:4",
										"text": "@dev Total supply in fractionalized representation"
									},
									"functionSelector": "18160ddd",
									"id": 1912,
									"mutability": "immutable",
									"name": "totalSupply",
									"nameLocation": "3061:11:4",
									"nodeType": "VariableDeclaration",
									"scope": 2723,
									"src": "3036:36:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1911,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "3036:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 1913,
										"nodeType": "StructuredDocumentation",
										"src": "3081:84:4",
										"text": "@dev Current mint counter, monotonically increasing to ensure accurate ownership"
									},
									"functionSelector": "4f02c420",
									"id": 1915,
									"mutability": "mutable",
									"name": "minted",
									"nameLocation": "3186:6:4",
									"nodeType": "VariableDeclaration",
									"scope": 2723,
									"src": "3171:21:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1914,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "3171:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 1916,
										"nodeType": "StructuredDocumentation",
										"src": "3218:53:4",
										"text": "@dev Balance of user in fractional representation"
									},
									"functionSelector": "70a08231",
									"id": 1920,
									"mutability": "mutable",
									"name": "balanceOf",
									"nameLocation": "3312:9:4",
									"nodeType": "VariableDeclaration",
									"scope": 2723,
									"src": "3277:44:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 1919,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1917,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "3285:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "3277:27:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1918,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "3296:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 1921,
										"nodeType": "StructuredDocumentation",
										"src": "3330:55:4",
										"text": "@dev Allowance of user in fractional representation"
									},
									"functionSelector": "dd62ed3e",
									"id": 1927,
									"mutability": "mutable",
									"name": "allowance",
									"nameLocation": "3446:9:4",
									"nodeType": "VariableDeclaration",
									"scope": 2723,
									"src": "3391:64:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 1926,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1922,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "3399:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "3391:47:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1925,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 1923,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "3418:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "3410:27:4",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 1924,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "3429:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 1928,
										"nodeType": "StructuredDocumentation",
										"src": "3464:41:4",
										"text": "@dev Approval in native representaion"
									},
									"functionSelector": "081812fc",
									"id": 1932,
									"mutability": "mutable",
									"name": "getApproved",
									"nameLocation": "3546:11:4",
									"nodeType": "VariableDeclaration",
									"scope": 2723,
									"src": "3511:46:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 1931,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1929,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "3519:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "3511:27:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1930,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "3530:7:4",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 1933,
										"nodeType": "StructuredDocumentation",
										"src": "3566:50:4",
										"text": "@dev Approval for all in native representation"
									},
									"functionSelector": "e985e9c5",
									"id": 1939,
									"mutability": "mutable",
									"name": "isApprovedForAll",
									"nameLocation": "3674:16:4",
									"nodeType": "VariableDeclaration",
									"scope": 2723,
									"src": "3622:68:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
										"typeString": "mapping(address => mapping(address => bool))"
									},
									"typeName": {
										"id": 1938,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1934,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "3630:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "3622:44:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
											"typeString": "mapping(address => mapping(address => bool))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1937,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 1935,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "3649:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "3641:24:4",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 1936,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "3660:4:4",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 1940,
										"nodeType": "StructuredDocumentation",
										"src": "3699:45:4",
										"text": "@dev Owner of id in native representation"
									},
									"id": 1944,
									"mutability": "mutable",
									"name": "_ownerOf",
									"nameLocation": "3787:8:4",
									"nodeType": "VariableDeclaration",
									"scope": 2723,
									"src": "3750:45:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 1943,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1941,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "3758:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "3750:27:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1942,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "3769:7:4",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"documentation": {
										"id": 1945,
										"nodeType": "StructuredDocumentation",
										"src": "3804:52:4",
										"text": "@dev Array of owned ids in native representation"
									},
									"id": 1950,
									"mutability": "mutable",
									"name": "_owned",
									"nameLocation": "3901:6:4",
									"nodeType": "VariableDeclaration",
									"scope": 2723,
									"src": "3862:45:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
										"typeString": "mapping(address => uint256[])"
									},
									"typeName": {
										"id": 1949,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1946,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "3870:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "3862:29:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
											"typeString": "mapping(address => uint256[])"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"baseType": {
												"id": 1947,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "3881:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"id": 1948,
											"nodeType": "ArrayTypeName",
											"src": "3881:9:4",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
												"typeString": "uint256[]"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"documentation": {
										"id": 1951,
										"nodeType": "StructuredDocumentation",
										"src": "3916:46:4",
										"text": "@dev Tracks indices for the _owned mapping"
									},
									"id": 1955,
									"mutability": "mutable",
									"name": "_ownedIndex",
									"nameLocation": "4005:11:4",
									"nodeType": "VariableDeclaration",
									"scope": 2723,
									"src": "3968:48:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
										"typeString": "mapping(uint256 => uint256)"
									},
									"typeName": {
										"id": 1954,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1952,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "3976:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "3968:27:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
											"typeString": "mapping(uint256 => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1953,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "3987:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"documentation": {
										"id": 1956,
										"nodeType": "StructuredDocumentation",
										"src": "4025:91:4",
										"text": "@dev Addresses whitelisted from minting / burning for gas savings (pairs, routers, etc)"
									},
									"functionSelector": "9b19251a",
									"id": 1960,
									"mutability": "mutable",
									"name": "whitelist",
									"nameLocation": "4154:9:4",
									"nodeType": "VariableDeclaration",
									"scope": 2723,
									"src": "4122:41:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 1959,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1957,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "4130:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "4122:24:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1958,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "4141:4:4",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 1997,
										"nodeType": "Block",
										"src": "4377:151:4",
										"statements": [
											{
												"expression": {
													"id": 1978,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1976,
														"name": "name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1903,
														"src": "4388:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1977,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1962,
														"src": "4395:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "4388:12:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 1979,
												"nodeType": "ExpressionStatement",
												"src": "4388:12:4"
											},
											{
												"expression": {
													"id": 1982,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1980,
														"name": "symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1906,
														"src": "4411:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1981,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1964,
														"src": "4420:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "4411:16:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 1983,
												"nodeType": "ExpressionStatement",
												"src": "4411:16:4"
											},
											{
												"expression": {
													"id": 1986,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1984,
														"name": "decimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1909,
														"src": "4438:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1985,
														"name": "_decimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1966,
														"src": "4449:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "4438:20:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 1987,
												"nodeType": "ExpressionStatement",
												"src": "4438:20:4"
											},
											{
												"expression": {
													"id": 1995,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1988,
														"name": "totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1912,
														"src": "4469:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1994,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1989,
															"name": "_totalNativeSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1968,
															"src": "4483:18:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1992,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"hexValue": "3130",
																		"id": 1990,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4505:2:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_10_by_1",
																			"typeString": "int_const 10"
																		},
																		"value": "10"
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "**",
																	"rightExpression": {
																		"id": 1991,
																		"name": "decimals",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1909,
																		"src": "4511:8:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"src": "4505:14:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1993,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "4504:16:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "4483:37:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4469:51:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1996,
												"nodeType": "ExpressionStatement",
												"src": "4469:51:4"
											}
										]
									},
									"id": 1998,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1973,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1970,
													"src": "4369:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 1974,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1972,
												"name": "Ownable",
												"nameLocations": [
													"4361:7:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1828,
												"src": "4361:7:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "4361:15:4"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1971,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1962,
												"mutability": "mutable",
												"name": "_name",
												"nameLocation": "4228:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1998,
												"src": "4214:19:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1961,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4214:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1964,
												"mutability": "mutable",
												"name": "_symbol",
												"nameLocation": "4258:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1998,
												"src": "4244:21:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1963,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4244:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1966,
												"mutability": "mutable",
												"name": "_decimals",
												"nameLocation": "4282:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 1998,
												"src": "4276:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1965,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "4276:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1968,
												"mutability": "mutable",
												"name": "_totalNativeSupply",
												"nameLocation": "4310:18:4",
												"nodeType": "VariableDeclaration",
												"scope": 1998,
												"src": "4302:26:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1967,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4302:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1970,
												"mutability": "mutable",
												"name": "_owner",
												"nameLocation": "4347:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1998,
												"src": "4339:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1969,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4339:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4203:157:4"
									},
									"returnParameters": {
										"id": 1975,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4377:0:4"
									},
									"scope": 2723,
									"src": "4192:336:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2014,
										"nodeType": "Block",
										"src": "4738:44:4",
										"statements": [
											{
												"expression": {
													"id": 2012,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2008,
															"name": "whitelist",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1960,
															"src": "4749:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 2010,
														"indexExpression": {
															"id": 2009,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2001,
															"src": "4759:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4749:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2011,
														"name": "state",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2003,
														"src": "4769:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4749:25:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2013,
												"nodeType": "ExpressionStatement",
												"src": "4749:25:4"
											}
										]
									},
									"documentation": {
										"id": 1999,
										"nodeType": "StructuredDocumentation",
										"src": "4536:129:4",
										"text": "@notice Initialization function to set pairs / etc\n         saving gas by avoiding mint / burn on unnecessary targets"
									},
									"functionSelector": "53d6fd59",
									"id": 2015,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2006,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2005,
												"name": "onlyOwner",
												"nameLocations": [
													"4728:9:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1749,
												"src": "4728:9:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "4728:9:4"
										}
									],
									"name": "setWhitelist",
									"nameLocation": "4680:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2004,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2001,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4701:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 2015,
												"src": "4693:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2000,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4693:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2003,
												"mutability": "mutable",
												"name": "state",
												"nameLocation": "4714:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 2015,
												"src": "4709:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2002,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4709:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4692:28:4"
									},
									"returnParameters": {
										"id": 2007,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4738:0:4"
									},
									"scope": 2723,
									"src": "4671:111:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2040,
										"nodeType": "Block",
										"src": "4927:120:4",
										"statements": [
											{
												"expression": {
													"id": 2027,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2023,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2021,
														"src": "4938:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"baseExpression": {
															"id": 2024,
															"name": "_ownerOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1944,
															"src": "4946:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 2026,
														"indexExpression": {
															"id": 2025,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2018,
															"src": "4955:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4946:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4938:20:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2028,
												"nodeType": "ExpressionStatement",
												"src": "4938:20:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2034,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2029,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2021,
														"src": "4975:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 2032,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4992:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 2031,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "4984:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2030,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "4984:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 2033,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4984:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4975:19:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2039,
												"nodeType": "IfStatement",
												"src": "4971:69:4",
												"trueBody": {
													"id": 2038,
													"nodeType": "Block",
													"src": "4996:44:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 2035,
																	"name": "NotFound",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1892,
																	"src": "5018:8:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 2036,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5018:10:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2037,
															"nodeType": "RevertStatement",
															"src": "5011:17:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2016,
										"nodeType": "StructuredDocumentation",
										"src": "4790:58:4",
										"text": "@notice Function to find owner of a given native token"
									},
									"functionSelector": "6352211e",
									"id": 2041,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "4863:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2019,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2018,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "4879:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 2041,
												"src": "4871:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2017,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4871:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4870:12:4"
									},
									"returnParameters": {
										"id": 2022,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2021,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4920:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 2041,
												"src": "4912:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2020,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4912:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4911:15:4"
									},
									"scope": 2723,
									"src": "4854:193:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 2042,
										"nodeType": "StructuredDocumentation",
										"src": "5055:58:4",
										"text": "@notice tokenURI must be implemented by child contract"
									},
									"functionSelector": "c87b56dd",
									"id": 2049,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "5128:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2045,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2044,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "5145:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 2049,
												"src": "5137:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2043,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5137:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5136:12:4"
									},
									"returnParameters": {
										"id": 2048,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2047,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2049,
												"src": "5178:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2046,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5178:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5177:15:4"
									},
									"scope": 2723,
									"src": "5119:74:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2122,
										"nodeType": "Block",
										"src": "5451:533:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2065,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2061,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2059,
															"name": "amountOrId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2054,
															"src": "5466:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<=",
														"rightExpression": {
															"id": 2060,
															"name": "minted",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1915,
															"src": "5480:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "5466:20:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2064,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2062,
															"name": "amountOrId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2054,
															"src": "5490:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 2063,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5503:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "5490:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "5466:38:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2118,
													"nodeType": "Block",
													"src": "5820:133:4",
													"statements": [
														{
															"expression": {
																"id": 2109,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 2102,
																			"name": "allowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1927,
																			"src": "5835:9:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 2106,
																		"indexExpression": {
																			"expression": {
																				"id": 2103,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "5845:3:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 2104,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "5849:6:4",
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "5845:10:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "5835:21:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 2107,
																	"indexExpression": {
																		"id": 2105,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2052,
																		"src": "5857:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "5835:30:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 2108,
																	"name": "amountOrId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2054,
																	"src": "5868:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5835:43:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2110,
															"nodeType": "ExpressionStatement",
															"src": "5835:43:4"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"expression": {
																			"id": 2112,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "5909:3:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 2113,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5913:6:4",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "5909:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2114,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2052,
																		"src": "5921:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2115,
																		"name": "amountOrId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2054,
																		"src": "5930:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2111,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1866,
																	"src": "5900:8:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 2116,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5900:41:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2117,
															"nodeType": "EmitStatement",
															"src": "5895:46:4"
														}
													]
												},
												"id": 2119,
												"nodeType": "IfStatement",
												"src": "5462:491:4",
												"trueBody": {
													"id": 2101,
													"nodeType": "Block",
													"src": "5506:308:4",
													"statements": [
														{
															"assignments": [
																2067
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2067,
																	"mutability": "mutable",
																	"name": "owner",
																	"nameLocation": "5529:5:4",
																	"nodeType": "VariableDeclaration",
																	"scope": 2101,
																	"src": "5521:13:4",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"typeName": {
																		"id": 2066,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "5521:7:4",
																		"stateMutability": "nonpayable",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2071,
															"initialValue": {
																"baseExpression": {
																	"id": 2068,
																	"name": "_ownerOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1944,
																	"src": "5537:8:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																		"typeString": "mapping(uint256 => address)"
																	}
																},
																"id": 2070,
																"indexExpression": {
																	"id": 2069,
																	"name": "amountOrId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2054,
																	"src": "5546:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "5537:20:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "5521:36:4"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 2083,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"id": 2075,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 2072,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "5578:3:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 2073,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5582:6:4",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "5578:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "!=",
																	"rightExpression": {
																		"id": 2074,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2067,
																		"src": "5592:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"src": "5578:19:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"id": 2082,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "!",
																	"prefix": true,
																	"src": "5601:36:4",
																	"subExpression": {
																		"baseExpression": {
																			"baseExpression": {
																				"id": 2076,
																				"name": "isApprovedForAll",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1939,
																				"src": "5602:16:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																					"typeString": "mapping(address => mapping(address => bool))"
																				}
																			},
																			"id": 2078,
																			"indexExpression": {
																				"id": 2077,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2067,
																				"src": "5619:5:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "5602:23:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																				"typeString": "mapping(address => bool)"
																			}
																		},
																		"id": 2081,
																		"indexExpression": {
																			"expression": {
																				"id": 2079,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "5626:3:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 2080,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "5630:6:4",
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "5626:10:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "5602:35:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "5578:59:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2088,
															"nodeType": "IfStatement",
															"src": "5574:121:4",
															"trueBody": {
																"id": 2087,
																"nodeType": "Block",
																"src": "5639:56:4",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 2084,
																				"name": "Unauthorized",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1733,
																				"src": "5665:12:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 2085,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5665:14:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 2086,
																		"nodeType": "RevertStatement",
																		"src": "5658:21:4"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 2093,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 2089,
																		"name": "getApproved",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1932,
																		"src": "5711:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																			"typeString": "mapping(uint256 => address)"
																		}
																	},
																	"id": 2091,
																	"indexExpression": {
																		"id": 2090,
																		"name": "amountOrId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2054,
																		"src": "5723:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "5711:23:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 2092,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2052,
																	"src": "5737:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "5711:33:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 2094,
															"nodeType": "ExpressionStatement",
															"src": "5711:33:4"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 2096,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2067,
																		"src": "5775:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2097,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2052,
																		"src": "5782:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2098,
																		"name": "amountOrId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2054,
																		"src": "5791:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2095,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1866,
																	"src": "5766:8:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 2099,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5766:36:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2100,
															"nodeType": "EmitStatement",
															"src": "5761:41:4"
														}
													]
												}
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 2120,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5972:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 2058,
												"id": 2121,
												"nodeType": "Return",
												"src": "5965:11:4"
											}
										]
									},
									"documentation": {
										"id": 2050,
										"nodeType": "StructuredDocumentation",
										"src": "5201:135:4",
										"text": "@notice Function for token approvals\n @dev This function assumes id / native if amount less than or equal to current max id"
									},
									"functionSelector": "095ea7b3",
									"id": 2123,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "5351:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2055,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2052,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "5377:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 2123,
												"src": "5369:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2051,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5369:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2054,
												"mutability": "mutable",
												"name": "amountOrId",
												"nameLocation": "5403:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 2123,
												"src": "5395:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2053,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5395:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5358:62:4"
									},
									"returnParameters": {
										"id": 2058,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2057,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2123,
												"src": "5445:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2056,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5445:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5444:6:4"
									},
									"scope": 2723,
									"src": "5342:642:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2147,
										"nodeType": "Block",
										"src": "6110:132:4",
										"statements": [
											{
												"expression": {
													"id": 2138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 2131,
																"name": "isApprovedForAll",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1939,
																"src": "6121:16:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																	"typeString": "mapping(address => mapping(address => bool))"
																}
															},
															"id": 2135,
															"indexExpression": {
																"expression": {
																	"id": 2132,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "6138:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 2133,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6142:6:4",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "6138:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "6121:28:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 2136,
														"indexExpression": {
															"id": 2134,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2126,
															"src": "6150:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6121:38:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2137,
														"name": "approved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2128,
														"src": "6162:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6121:49:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2139,
												"nodeType": "ExpressionStatement",
												"src": "6121:49:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 2141,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "6203:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2142,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6207:6:4",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "6203:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2143,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2126,
															"src": "6215:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2144,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2128,
															"src": "6225:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 2140,
														"name": "ApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1890,
														"src": "6188:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 2145,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6188:46:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2146,
												"nodeType": "EmitStatement",
												"src": "6183:51:4"
											}
										]
									},
									"documentation": {
										"id": 2124,
										"nodeType": "StructuredDocumentation",
										"src": "5992:37:4",
										"text": "@notice Function native approvals"
									},
									"functionSelector": "a22cb465",
									"id": 2148,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "6044:17:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2129,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2126,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6070:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 2148,
												"src": "6062:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2125,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6062:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2128,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "6085:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 2148,
												"src": "6080:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2127,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6080:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6061:33:4"
									},
									"returnParameters": {
										"id": 2130,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6110:0:4"
									},
									"scope": 2723,
									"src": "6035:207:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2337,
										"nodeType": "Block",
										"src": "6508:1599:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2160,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2158,
														"name": "amountOrId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2155,
														"src": "6523:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"id": 2159,
														"name": "minted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1915,
														"src": "6537:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6523:20:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2335,
													"nodeType": "Block",
													"src": "7862:238:4",
													"statements": [
														{
															"assignments": [
																2302
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2302,
																	"mutability": "mutable",
																	"name": "allowed",
																	"nameLocation": "7885:7:4",
																	"nodeType": "VariableDeclaration",
																	"scope": 2335,
																	"src": "7877:15:4",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 2301,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "7877:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2309,
															"initialValue": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 2303,
																		"name": "allowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1927,
																		"src": "7895:9:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(address => mapping(address => uint256))"
																		}
																	},
																	"id": 2305,
																	"indexExpression": {
																		"id": 2304,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2151,
																		"src": "7905:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "7895:15:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 2308,
																"indexExpression": {
																	"expression": {
																		"id": 2306,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "7911:3:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 2307,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "7915:6:4",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "7911:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "7895:27:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "7877:45:4"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2316,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2310,
																	"name": "allowed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2302,
																	"src": "7943:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"expression": {
																		"arguments": [
																			{
																				"id": 2313,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "7959:7:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint256_$",
																					"typeString": "type(uint256)"
																				},
																				"typeName": {
																					"id": 2312,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "7959:7:4",
																					"typeDescriptions": {}
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_type$_t_uint256_$",
																					"typeString": "type(uint256)"
																				}
																			],
																			"id": 2311,
																			"name": "type",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967269,
																			"src": "7954:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 2314,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7954:13:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_meta_type_t_uint256",
																			"typeString": "type(uint256)"
																		}
																	},
																	"id": 2315,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "7968:3:4",
																	"memberName": "max",
																	"nodeType": "MemberAccess",
																	"src": "7954:17:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7943:28:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2328,
															"nodeType": "IfStatement",
															"src": "7939:101:4",
															"trueBody": {
																"expression": {
																	"id": 2326,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"baseExpression": {
																			"baseExpression": {
																				"id": 2317,
																				"name": "allowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1927,
																				"src": "7990:9:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																					"typeString": "mapping(address => mapping(address => uint256))"
																				}
																			},
																			"id": 2321,
																			"indexExpression": {
																				"id": 2318,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2151,
																				"src": "8000:4:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "7990:15:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																				"typeString": "mapping(address => uint256)"
																			}
																		},
																		"id": 2322,
																		"indexExpression": {
																			"expression": {
																				"id": 2319,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "8006:3:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 2320,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "8010:6:4",
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "8006:10:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": true,
																		"nodeType": "IndexAccess",
																		"src": "7990:27:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2325,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2323,
																			"name": "allowed",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2302,
																			"src": "8020:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 2324,
																			"name": "amountOrId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2155,
																			"src": "8030:10:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "8020:20:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7990:50:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 2327,
																"nodeType": "ExpressionStatement",
																"src": "7990:50:4"
															}
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 2330,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2151,
																		"src": "8067:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2331,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2153,
																		"src": "8073:2:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2332,
																		"name": "amountOrId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2155,
																		"src": "8077:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2329,
																	"name": "_transfer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2565,
																	"src": "8057:9:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) returns (bool)"
																	}
																},
																"id": 2333,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8057:31:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2334,
															"nodeType": "ExpressionStatement",
															"src": "8057:31:4"
														}
													]
												},
												"id": 2336,
												"nodeType": "IfStatement",
												"src": "6519:1581:4",
												"trueBody": {
													"id": 2300,
													"nodeType": "Block",
													"src": "6545:1311:4",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 2165,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2161,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2151,
																	"src": "6564:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"baseExpression": {
																		"id": 2162,
																		"name": "_ownerOf",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1944,
																		"src": "6572:8:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																			"typeString": "mapping(uint256 => address)"
																		}
																	},
																	"id": 2164,
																	"indexExpression": {
																		"id": 2163,
																		"name": "amountOrId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2155,
																		"src": "6581:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "6572:20:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "6564:28:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2170,
															"nodeType": "IfStatement",
															"src": "6560:91:4",
															"trueBody": {
																"id": 2169,
																"nodeType": "Block",
																"src": "6594:57:4",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 2166,
																				"name": "InvalidSender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1898,
																				"src": "6620:13:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 2167,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6620:15:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 2168,
																		"nodeType": "RevertStatement",
																		"src": "6613:22:4"
																	}
																]
															}
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 2176,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2171,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2153,
																	"src": "6671:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 2174,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "6685:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 2173,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "6677:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 2172,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "6677:7:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2175,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6677:10:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "6671:16:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2181,
															"nodeType": "IfStatement",
															"src": "6667:82:4",
															"trueBody": {
																"id": 2180,
																"nodeType": "Block",
																"src": "6689:60:4",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 2177,
																				"name": "InvalidRecipient",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1896,
																				"src": "6715:16:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 2178,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6715:18:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 2179,
																		"nodeType": "RevertStatement",
																		"src": "6708:25:4"
																	}
																]
															}
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 2200,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 2193,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 2185,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 2182,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "6787:3:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 2183,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "6791:6:4",
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "6787:10:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"id": 2184,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2151,
																			"src": "6801:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "6787:18:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&&",
																	"rightExpression": {
																		"id": 2192,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "!",
																		"prefix": true,
																		"src": "6826:35:4",
																		"subExpression": {
																			"baseExpression": {
																				"baseExpression": {
																					"id": 2186,
																					"name": "isApprovedForAll",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1939,
																					"src": "6827:16:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																						"typeString": "mapping(address => mapping(address => bool))"
																					}
																				},
																				"id": 2188,
																				"indexExpression": {
																					"id": 2187,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2151,
																					"src": "6844:4:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "6827:22:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																					"typeString": "mapping(address => bool)"
																				}
																			},
																			"id": 2191,
																			"indexExpression": {
																				"expression": {
																					"id": 2189,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967281,
																					"src": "6850:3:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 2190,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "6854:6:4",
																				"memberName": "sender",
																				"nodeType": "MemberAccess",
																				"src": "6850:10:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "6827:34:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "6787:74:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"id": 2199,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 2194,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "6882:3:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 2195,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6886:6:4",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "6882:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "!=",
																	"rightExpression": {
																		"baseExpression": {
																			"id": 2196,
																			"name": "getApproved",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1932,
																			"src": "6896:11:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																				"typeString": "mapping(uint256 => address)"
																			}
																		},
																		"id": 2198,
																		"indexExpression": {
																			"id": 2197,
																			"name": "amountOrId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2155,
																			"src": "6908:10:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "6896:23:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"src": "6882:37:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "6787:132:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2205,
															"nodeType": "IfStatement",
															"src": "6765:226:4",
															"trueBody": {
																"id": 2204,
																"nodeType": "Block",
																"src": "6935:56:4",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 2201,
																				"name": "Unauthorized",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1733,
																				"src": "6961:12:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 2202,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6961:14:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 2203,
																		"nodeType": "RevertStatement",
																		"src": "6954:21:4"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 2211,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 2206,
																		"name": "balanceOf",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1920,
																		"src": "7007:9:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 2208,
																	"indexExpression": {
																		"id": 2207,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2151,
																		"src": "7017:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "7007:15:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "-=",
																"rightHandSide": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 2209,
																		"name": "_getUnit",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2575,
																		"src": "7026:8:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																			"typeString": "function () view returns (uint256)"
																		}
																	},
																	"id": 2210,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7026:10:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7007:29:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2212,
															"nodeType": "ExpressionStatement",
															"src": "7007:29:4"
														},
														{
															"id": 2220,
															"nodeType": "UncheckedBlock",
															"src": "7053:72:4",
															"statements": [
																{
																	"expression": {
																		"id": 2218,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 2213,
																				"name": "balanceOf",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1920,
																				"src": "7082:9:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 2215,
																			"indexExpression": {
																				"id": 2214,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2153,
																				"src": "7092:2:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7082:13:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 2216,
																				"name": "_getUnit",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2575,
																				"src": "7099:8:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																					"typeString": "function () view returns (uint256)"
																				}
																			},
																			"id": 2217,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7099:10:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7082:27:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2219,
																	"nodeType": "ExpressionStatement",
																	"src": "7082:27:4"
																}
															]
														},
														{
															"expression": {
																"id": 2225,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 2221,
																		"name": "_ownerOf",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1944,
																		"src": "7141:8:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																			"typeString": "mapping(uint256 => address)"
																		}
																	},
																	"id": 2223,
																	"indexExpression": {
																		"id": 2222,
																		"name": "amountOrId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2155,
																		"src": "7150:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "7141:20:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 2224,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2153,
																	"src": "7164:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "7141:25:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 2226,
															"nodeType": "ExpressionStatement",
															"src": "7141:25:4"
														},
														{
															"expression": {
																"id": 2230,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "delete",
																"prefix": true,
																"src": "7181:30:4",
																"subExpression": {
																	"baseExpression": {
																		"id": 2227,
																		"name": "getApproved",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1932,
																		"src": "7188:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																			"typeString": "mapping(uint256 => address)"
																		}
																	},
																	"id": 2229,
																	"indexExpression": {
																		"id": 2228,
																		"name": "amountOrId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2155,
																		"src": "7200:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "7188:23:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2231,
															"nodeType": "ExpressionStatement",
															"src": "7181:30:4"
														},
														{
															"assignments": [
																2233
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2233,
																	"mutability": "mutable",
																	"name": "updatedId",
																	"nameLocation": "7277:9:4",
																	"nodeType": "VariableDeclaration",
																	"scope": 2300,
																	"src": "7269:17:4",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 2232,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "7269:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2244,
															"initialValue": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 2234,
																		"name": "_owned",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1950,
																		"src": "7289:6:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
																			"typeString": "mapping(address => uint256[] storage ref)"
																		}
																	},
																	"id": 2236,
																	"indexExpression": {
																		"id": 2235,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2151,
																		"src": "7296:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "7289:12:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																		"typeString": "uint256[] storage ref"
																	}
																},
																"id": 2243,
																"indexExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2242,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 2237,
																				"name": "_owned",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1950,
																				"src": "7302:6:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
																					"typeString": "mapping(address => uint256[] storage ref)"
																				}
																			},
																			"id": 2239,
																			"indexExpression": {
																				"id": 2238,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2151,
																				"src": "7309:4:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "7302:12:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																				"typeString": "uint256[] storage ref"
																			}
																		},
																		"id": 2240,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "7315:6:4",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "7302:19:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 2241,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7324:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "7302:23:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "7289:37:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "7269:57:4"
														},
														{
															"expression": {
																"id": 2253,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 2245,
																			"name": "_owned",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1950,
																			"src": "7341:6:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
																				"typeString": "mapping(address => uint256[] storage ref)"
																			}
																		},
																		"id": 2250,
																		"indexExpression": {
																			"id": 2246,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2151,
																			"src": "7348:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "7341:12:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																			"typeString": "uint256[] storage ref"
																		}
																	},
																	"id": 2251,
																	"indexExpression": {
																		"baseExpression": {
																			"id": 2247,
																			"name": "_ownedIndex",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1955,
																			"src": "7354:11:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																				"typeString": "mapping(uint256 => uint256)"
																			}
																		},
																		"id": 2249,
																		"indexExpression": {
																			"id": 2248,
																			"name": "amountOrId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2155,
																			"src": "7366:10:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "7354:23:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "7341:37:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 2252,
																	"name": "updatedId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2233,
																	"src": "7381:9:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7341:49:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2254,
															"nodeType": "ExpressionStatement",
															"src": "7341:49:4"
														},
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"baseExpression": {
																			"id": 2255,
																			"name": "_owned",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1950,
																			"src": "7425:6:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
																				"typeString": "mapping(address => uint256[] storage ref)"
																			}
																		},
																		"id": 2257,
																		"indexExpression": {
																			"id": 2256,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2151,
																			"src": "7432:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "7425:12:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																			"typeString": "uint256[] storage ref"
																		}
																	},
																	"id": 2258,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "7438:3:4",
																	"memberName": "pop",
																	"nodeType": "MemberAccess",
																	"src": "7425:16:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_arraypop_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$returns$__$attached_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
																		"typeString": "function (uint256[] storage pointer)"
																	}
																},
																"id": 2259,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7425:18:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2260,
															"nodeType": "ExpressionStatement",
															"src": "7425:18:4"
														},
														{
															"expression": {
																"id": 2267,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 2261,
																		"name": "_ownedIndex",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1955,
																		"src": "7504:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																			"typeString": "mapping(uint256 => uint256)"
																		}
																	},
																	"id": 2263,
																	"indexExpression": {
																		"id": 2262,
																		"name": "updatedId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2233,
																		"src": "7516:9:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "7504:22:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 2264,
																		"name": "_ownedIndex",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1955,
																		"src": "7529:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																			"typeString": "mapping(uint256 => uint256)"
																		}
																	},
																	"id": 2266,
																	"indexExpression": {
																		"id": 2265,
																		"name": "amountOrId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2155,
																		"src": "7541:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "7529:23:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7504:48:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2268,
															"nodeType": "ExpressionStatement",
															"src": "7504:48:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 2273,
																		"name": "amountOrId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2155,
																		"src": "7622:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"baseExpression": {
																			"id": 2269,
																			"name": "_owned",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1950,
																			"src": "7606:6:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
																				"typeString": "mapping(address => uint256[] storage ref)"
																			}
																		},
																		"id": 2271,
																		"indexExpression": {
																			"id": 2270,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2153,
																			"src": "7613:2:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "7606:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																			"typeString": "uint256[] storage ref"
																		}
																	},
																	"id": 2272,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "7617:4:4",
																	"memberName": "push",
																	"nodeType": "MemberAccess",
																	"src": "7606:15:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$attached_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
																		"typeString": "function (uint256[] storage pointer,uint256)"
																	}
																},
																"id": 2274,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7606:27:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2275,
															"nodeType": "ExpressionStatement",
															"src": "7606:27:4"
														},
														{
															"expression": {
																"id": 2285,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 2276,
																		"name": "_ownedIndex",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1955,
																		"src": "7690:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																			"typeString": "mapping(uint256 => uint256)"
																		}
																	},
																	"id": 2278,
																	"indexExpression": {
																		"id": 2277,
																		"name": "amountOrId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2155,
																		"src": "7702:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "7690:23:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2284,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 2279,
																				"name": "_owned",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1950,
																				"src": "7716:6:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
																					"typeString": "mapping(address => uint256[] storage ref)"
																				}
																			},
																			"id": 2281,
																			"indexExpression": {
																				"id": 2280,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2153,
																				"src": "7723:2:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "7716:10:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																				"typeString": "uint256[] storage ref"
																			}
																		},
																		"id": 2282,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "7727:6:4",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "7716:17:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 2283,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7736:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "7716:21:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7690:47:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2286,
															"nodeType": "ExpressionStatement",
															"src": "7690:47:4"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 2288,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2151,
																		"src": "7768:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2289,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2153,
																		"src": "7774:2:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2290,
																		"name": "amountOrId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2155,
																		"src": "7778:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2287,
																	"name": "Transfer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1874,
																	"src": "7759:8:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 2291,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7759:30:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2292,
															"nodeType": "EmitStatement",
															"src": "7754:35:4"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 2294,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2151,
																		"src": "7823:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2295,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2153,
																		"src": "7829:2:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 2296,
																			"name": "_getUnit",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2575,
																			"src": "7833:8:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																				"typeString": "function () view returns (uint256)"
																			}
																		},
																		"id": 2297,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7833:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2293,
																	"name": "ERC20Transfer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1858,
																	"src": "7809:13:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 2298,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7809:35:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2299,
															"nodeType": "EmitStatement",
															"src": "7804:40:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2149,
										"nodeType": "StructuredDocumentation",
										"src": "6250:135:4",
										"text": "@notice Function for mixed transfers\n @dev This function assumes id / native if amount less than or equal to current max id"
									},
									"functionSelector": "23b872dd",
									"id": 2338,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "6400:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2156,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2151,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6431:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 2338,
												"src": "6423:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2150,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6423:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2153,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6454:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 2338,
												"src": "6446:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6446:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2155,
												"mutability": "mutable",
												"name": "amountOrId",
												"nameLocation": "6475:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 2338,
												"src": "6467:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6467:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6412:80:4"
									},
									"returnParameters": {
										"id": 2157,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6508:0:4"
									},
									"scope": 2723,
									"src": "6391:1716:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2355,
										"nodeType": "Block",
										"src": "8267:59:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2349,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "8295:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2350,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8299:6:4",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "8295:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2351,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2341,
															"src": "8307:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2352,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2343,
															"src": "8311:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2348,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2565,
														"src": "8285:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) returns (bool)"
														}
													},
													"id": 2353,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8285:33:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2347,
												"id": 2354,
												"nodeType": "Return",
												"src": "8278:40:4"
											}
										]
									},
									"documentation": {
										"id": 2339,
										"nodeType": "StructuredDocumentation",
										"src": "8115:45:4",
										"text": "@notice Function for fractional transfers"
									},
									"functionSelector": "a9059cbb",
									"id": 2356,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "8175:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2344,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2341,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "8202:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 2356,
												"src": "8194:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2340,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8194:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2343,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "8223:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 2356,
												"src": "8215:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2342,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8215:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8183:53:4"
									},
									"returnParameters": {
										"id": 2347,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2346,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2356,
												"src": "8261:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2345,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8261:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8260:6:4"
									},
									"scope": 2723,
									"src": "8166:160:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2397,
										"nodeType": "Block",
										"src": "8516:292:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2367,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2359,
															"src": "8540:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2368,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2361,
															"src": "8546:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2369,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2363,
															"src": "8550:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2366,
														"name": "transferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2338,
														"src": "8527:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2370,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8527:26:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2371,
												"nodeType": "ExpressionStatement",
												"src": "8527:26:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2391,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2376,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"expression": {
																	"id": 2372,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2361,
																	"src": "8584:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 2373,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "8587:4:4",
																"memberName": "code",
																"nodeType": "MemberAccess",
																"src": "8584:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 2374,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8592:6:4",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "8584:14:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "30",
															"id": 2375,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8602:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8584:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"id": 2390,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"expression": {
																		"id": 2381,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "8656:3:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 2382,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "8660:6:4",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "8656:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 2383,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2359,
																	"src": "8668:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 2384,
																	"name": "id",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2363,
																	"src": "8674:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"hexValue": "",
																	"id": 2385,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8678:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																		"typeString": "literal_string \"\""
																	},
																	"value": ""
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																		"typeString": "literal_string \"\""
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"id": 2378,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2361,
																			"src": "8635:2:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 2377,
																		"name": "ERC721Receiver",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1847,
																		"src": "8620:14:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_ERC721Receiver_$1847_$",
																			"typeString": "type(contract ERC721Receiver)"
																		}
																	},
																	"id": 2379,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8620:18:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ERC721Receiver_$1847",
																		"typeString": "contract ERC721Receiver"
																	}
																},
																"id": 2380,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "8639:16:4",
																"memberName": "onERC721Received",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1846,
																"src": "8620:35:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																	"typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
																}
															},
															"id": 2386,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8620:61:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"expression": {
																"expression": {
																	"id": 2387,
																	"name": "ERC721Receiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1847,
																	"src": "8698:14:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_ERC721Receiver_$1847_$",
																		"typeString": "type(contract ERC721Receiver)"
																	}
																},
																"id": 2388,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "8713:16:4",
																"memberName": "onERC721Received",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1846,
																"src": "8698:31:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
																	"typeString": "function ERC721Receiver.onERC721Received(address,address,uint256,bytes calldata) returns (bytes4)"
																}
															},
															"id": 2389,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "8730:8:4",
															"memberName": "selector",
															"nodeType": "MemberAccess",
															"src": "8698:40:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"src": "8620:118:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "8584:154:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2396,
												"nodeType": "IfStatement",
												"src": "8566:235:4",
												"trueBody": {
													"id": 2395,
													"nodeType": "Block",
													"src": "8750:51:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 2392,
																	"name": "UnsafeRecipient",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1900,
																	"src": "8772:15:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 2393,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8772:17:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2394,
															"nodeType": "RevertStatement",
															"src": "8765:24:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2357,
										"nodeType": "StructuredDocumentation",
										"src": "8334:63:4",
										"text": "@notice Function for native transfers with contract support"
									},
									"functionSelector": "42842e0e",
									"id": 2398,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "8412:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2364,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2359,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "8447:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 2398,
												"src": "8439:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2358,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8439:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2361,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "8470:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 2398,
												"src": "8462:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2360,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8462:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2363,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "8491:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 2398,
												"src": "8483:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2362,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8483:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8428:72:4"
									},
									"returnParameters": {
										"id": 2365,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8516:0:4"
									},
									"scope": 2723,
									"src": "8403:405:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2441,
										"nodeType": "Block",
										"src": "9046:294:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2411,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2401,
															"src": "9070:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2412,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2403,
															"src": "9076:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2413,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2405,
															"src": "9080:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2410,
														"name": "transferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2338,
														"src": "9057:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2414,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9057:26:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2415,
												"nodeType": "ExpressionStatement",
												"src": "9057:26:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2435,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2420,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"expression": {
																	"id": 2416,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2403,
																	"src": "9114:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 2417,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "9117:4:4",
																"memberName": "code",
																"nodeType": "MemberAccess",
																"src": "9114:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 2418,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "9122:6:4",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "9114:14:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "30",
															"id": 2419,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9132:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "9114:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"id": 2434,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"expression": {
																		"id": 2425,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "9186:3:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 2426,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "9190:6:4",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "9186:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 2427,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2401,
																	"src": "9198:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 2428,
																	"name": "id",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2405,
																	"src": "9204:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 2429,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2407,
																	"src": "9208:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_calldata_ptr",
																		"typeString": "bytes calldata"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_calldata_ptr",
																		"typeString": "bytes calldata"
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"id": 2422,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2403,
																			"src": "9165:2:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 2421,
																		"name": "ERC721Receiver",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1847,
																		"src": "9150:14:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_ERC721Receiver_$1847_$",
																			"typeString": "type(contract ERC721Receiver)"
																		}
																	},
																	"id": 2423,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9150:18:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ERC721Receiver_$1847",
																		"typeString": "contract ERC721Receiver"
																	}
																},
																"id": 2424,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "9169:16:4",
																"memberName": "onERC721Received",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1846,
																"src": "9150:35:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																	"typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
																}
															},
															"id": 2430,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9150:63:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"expression": {
																"expression": {
																	"id": 2431,
																	"name": "ERC721Receiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1847,
																	"src": "9230:14:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_ERC721Receiver_$1847_$",
																		"typeString": "type(contract ERC721Receiver)"
																	}
																},
																"id": 2432,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "9245:16:4",
																"memberName": "onERC721Received",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1846,
																"src": "9230:31:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
																	"typeString": "function ERC721Receiver.onERC721Received(address,address,uint256,bytes calldata) returns (bytes4)"
																}
															},
															"id": 2433,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "9262:8:4",
															"memberName": "selector",
															"nodeType": "MemberAccess",
															"src": "9230:40:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"src": "9150:120:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "9114:156:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2440,
												"nodeType": "IfStatement",
												"src": "9096:237:4",
												"trueBody": {
													"id": 2439,
													"nodeType": "Block",
													"src": "9282:51:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 2436,
																	"name": "UnsafeRecipient",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1900,
																	"src": "9304:15:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 2437,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9304:17:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2438,
															"nodeType": "RevertStatement",
															"src": "9297:24:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2399,
										"nodeType": "StructuredDocumentation",
										"src": "8816:81:4",
										"text": "@notice Function for native transfers with contract support and callback data"
									},
									"functionSelector": "b88d4fde",
									"id": 2442,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "8912:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2408,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2401,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "8947:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 2442,
												"src": "8939:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2400,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8939:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2403,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "8970:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 2442,
												"src": "8962:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2402,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8962:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2405,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "8991:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 2442,
												"src": "8983:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2404,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8983:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2407,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "9019:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 2442,
												"src": "9004:19:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2406,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "9004:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8928:102:4"
									},
									"returnParameters": {
										"id": 2409,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9046:0:4"
									},
									"scope": 2723,
									"src": "8903:437:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2564,
										"nodeType": "Block",
										"src": "9527:974:4",
										"statements": [
											{
												"assignments": [
													2455
												],
												"declarations": [
													{
														"constant": false,
														"id": 2455,
														"mutability": "mutable",
														"name": "unit",
														"nameLocation": "9546:4:4",
														"nodeType": "VariableDeclaration",
														"scope": 2564,
														"src": "9538:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2454,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9538:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2458,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2456,
														"name": "_getUnit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2575,
														"src": "9553:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
															"typeString": "function () view returns (uint256)"
														}
													},
													"id": 2457,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9553:10:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9538:25:4"
											},
											{
												"assignments": [
													2460
												],
												"declarations": [
													{
														"constant": false,
														"id": 2460,
														"mutability": "mutable",
														"name": "balanceBeforeSender",
														"nameLocation": "9582:19:4",
														"nodeType": "VariableDeclaration",
														"scope": 2564,
														"src": "9574:27:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2459,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9574:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2464,
												"initialValue": {
													"baseExpression": {
														"id": 2461,
														"name": "balanceOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1920,
														"src": "9604:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 2463,
													"indexExpression": {
														"id": 2462,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2445,
														"src": "9614:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "9604:15:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9574:45:4"
											},
											{
												"assignments": [
													2466
												],
												"declarations": [
													{
														"constant": false,
														"id": 2466,
														"mutability": "mutable",
														"name": "balanceBeforeReceiver",
														"nameLocation": "9638:21:4",
														"nodeType": "VariableDeclaration",
														"scope": 2564,
														"src": "9630:29:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2465,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9630:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2470,
												"initialValue": {
													"baseExpression": {
														"id": 2467,
														"name": "balanceOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1920,
														"src": "9662:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 2469,
													"indexExpression": {
														"id": 2468,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2447,
														"src": "9672:2:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "9662:13:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9630:45:4"
											},
											{
												"expression": {
													"id": 2475,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2471,
															"name": "balanceOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1920,
															"src": "9688:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 2473,
														"indexExpression": {
															"id": 2472,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2445,
															"src": "9698:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9688:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 2474,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2449,
														"src": "9707:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9688:25:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2476,
												"nodeType": "ExpressionStatement",
												"src": "9688:25:4"
											},
											{
												"id": 2483,
												"nodeType": "UncheckedBlock",
												"src": "9726:60:4",
												"statements": [
													{
														"expression": {
															"id": 2481,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 2477,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1920,
																	"src": "9751:9:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 2479,
																"indexExpression": {
																	"id": 2478,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2447,
																	"src": "9761:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "9751:13:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 2480,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2449,
																"src": "9768:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9751:23:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2482,
														"nodeType": "ExpressionStatement",
														"src": "9751:23:4"
													}
												]
											},
											{
												"condition": {
													"id": 2487,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "9858:16:4",
													"subExpression": {
														"baseExpression": {
															"id": 2484,
															"name": "whitelist",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1960,
															"src": "9859:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 2486,
														"indexExpression": {
															"id": 2485,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2445,
															"src": "9869:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "9859:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2519,
												"nodeType": "IfStatement",
												"src": "9854:251:4",
												"trueBody": {
													"id": 2518,
													"nodeType": "Block",
													"src": "9876:229:4",
													"statements": [
														{
															"assignments": [
																2489
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2489,
																	"mutability": "mutable",
																	"name": "tokens_to_burn",
																	"nameLocation": "9899:14:4",
																	"nodeType": "VariableDeclaration",
																	"scope": 2518,
																	"src": "9891:22:4",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 2488,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "9891:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2501,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2500,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2492,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2490,
																				"name": "balanceBeforeSender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2460,
																				"src": "9917:19:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "/",
																			"rightExpression": {
																				"id": 2491,
																				"name": "unit",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2455,
																				"src": "9939:4:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9917:26:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2493,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9916:28:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2498,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"baseExpression": {
																					"id": 2494,
																					"name": "balanceOf",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1920,
																					"src": "9965:9:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																						"typeString": "mapping(address => uint256)"
																					}
																				},
																				"id": 2496,
																				"indexExpression": {
																					"id": 2495,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2445,
																					"src": "9975:4:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "9965:15:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "/",
																			"rightExpression": {
																				"id": 2497,
																				"name": "unit",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2455,
																				"src": "9983:4:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9965:22:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2499,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9964:24:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9916:72:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "9891:97:4"
														},
														{
															"body": {
																"id": 2516,
																"nodeType": "Block",
																"src": "10048:46:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 2513,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2445,
																					"src": "10073:4:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 2512,
																				"name": "_burn",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2706,
																				"src": "10067:5:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
																					"typeString": "function (address)"
																				}
																			},
																			"id": 2514,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10067:11:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 2515,
																		"nodeType": "ExpressionStatement",
																		"src": "10067:11:4"
																	}
																]
															},
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2508,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2506,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2503,
																	"src": "10023:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 2507,
																	"name": "tokens_to_burn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2489,
																	"src": "10027:14:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10023:18:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2517,
															"initializationExpression": {
																"assignments": [
																	2503
																],
																"declarations": [
																	{
																		"constant": false,
																		"id": 2503,
																		"mutability": "mutable",
																		"name": "i",
																		"nameLocation": "10016:1:4",
																		"nodeType": "VariableDeclaration",
																		"scope": 2517,
																		"src": "10008:9:4",
																		"stateVariable": false,
																		"storageLocation": "default",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"typeName": {
																			"id": 2502,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "10008:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"visibility": "internal"
																	}
																],
																"id": 2505,
																"initialValue": {
																	"hexValue": "30",
																	"id": 2504,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10020:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"nodeType": "VariableDeclarationStatement",
																"src": "10008:13:4"
															},
															"isSimpleCounterLoop": true,
															"loopExpression": {
																"expression": {
																	"id": 2510,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "++",
																	"prefix": false,
																	"src": "10043:3:4",
																	"subExpression": {
																		"id": 2509,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2503,
																		"src": "10043:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 2511,
																"nodeType": "ExpressionStatement",
																"src": "10043:3:4"
															},
															"nodeType": "ForStatement",
															"src": "10003:91:4"
														}
													]
												}
											},
											{
												"condition": {
													"id": 2523,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "10180:14:4",
													"subExpression": {
														"baseExpression": {
															"id": 2520,
															"name": "whitelist",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1960,
															"src": "10181:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 2522,
														"indexExpression": {
															"id": 2521,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2447,
															"src": "10191:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "10181:13:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2555,
												"nodeType": "IfStatement",
												"src": "10176:247:4",
												"trueBody": {
													"id": 2554,
													"nodeType": "Block",
													"src": "10196:227:4",
													"statements": [
														{
															"assignments": [
																2525
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2525,
																	"mutability": "mutable",
																	"name": "tokens_to_mint",
																	"nameLocation": "10219:14:4",
																	"nodeType": "VariableDeclaration",
																	"scope": 2554,
																	"src": "10211:22:4",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 2524,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10211:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2537,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2536,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2530,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"baseExpression": {
																					"id": 2526,
																					"name": "balanceOf",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1920,
																					"src": "10237:9:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																						"typeString": "mapping(address => uint256)"
																					}
																				},
																				"id": 2528,
																				"indexExpression": {
																					"id": 2527,
																					"name": "to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2447,
																					"src": "10247:2:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "10237:13:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "/",
																			"rightExpression": {
																				"id": 2529,
																				"name": "unit",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2455,
																				"src": "10253:4:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10237:20:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2531,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10236:22:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2534,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2532,
																				"name": "balanceBeforeReceiver",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2466,
																				"src": "10279:21:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "/",
																			"rightExpression": {
																				"id": 2533,
																				"name": "unit",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2455,
																				"src": "10303:4:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10279:28:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2535,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10278:30:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10236:72:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "10211:97:4"
														},
														{
															"body": {
																"id": 2552,
																"nodeType": "Block",
																"src": "10368:44:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 2549,
																					"name": "to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2447,
																					"src": "10393:2:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 2548,
																				"name": "_mint",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2646,
																				"src": "10387:5:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
																					"typeString": "function (address)"
																				}
																			},
																			"id": 2550,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10387:9:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 2551,
																		"nodeType": "ExpressionStatement",
																		"src": "10387:9:4"
																	}
																]
															},
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2544,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2542,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2539,
																	"src": "10343:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 2543,
																	"name": "tokens_to_mint",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2525,
																	"src": "10347:14:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10343:18:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2553,
															"initializationExpression": {
																"assignments": [
																	2539
																],
																"declarations": [
																	{
																		"constant": false,
																		"id": 2539,
																		"mutability": "mutable",
																		"name": "i",
																		"nameLocation": "10336:1:4",
																		"nodeType": "VariableDeclaration",
																		"scope": 2553,
																		"src": "10328:9:4",
																		"stateVariable": false,
																		"storageLocation": "default",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"typeName": {
																			"id": 2538,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "10328:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"visibility": "internal"
																	}
																],
																"id": 2541,
																"initialValue": {
																	"hexValue": "30",
																	"id": 2540,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10340:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"nodeType": "VariableDeclarationStatement",
																"src": "10328:13:4"
															},
															"isSimpleCounterLoop": true,
															"loopExpression": {
																"expression": {
																	"id": 2546,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "++",
																	"prefix": false,
																	"src": "10363:3:4",
																	"subExpression": {
																		"id": 2545,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2539,
																		"src": "10363:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 2547,
																"nodeType": "ExpressionStatement",
																"src": "10363:3:4"
															},
															"nodeType": "ForStatement",
															"src": "10323:89:4"
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2557,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2445,
															"src": "10454:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2558,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2447,
															"src": "10460:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2559,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2449,
															"src": "10464:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2556,
														"name": "ERC20Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1858,
														"src": "10440:13:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2560,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10440:31:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2561,
												"nodeType": "EmitStatement",
												"src": "10435:36:4"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 2562,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "10489:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 2453,
												"id": 2563,
												"nodeType": "Return",
												"src": "10482:11:4"
											}
										]
									},
									"documentation": {
										"id": 2443,
										"nodeType": "StructuredDocumentation",
										"src": "9348:54:4",
										"text": "@notice Internal function for fractional transfers"
									},
									"id": 2565,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "9417:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2450,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2445,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "9445:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 2565,
												"src": "9437:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2444,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9437:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2447,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "9468:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 2565,
												"src": "9460:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2446,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9460:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2449,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "9489:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 2565,
												"src": "9481:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2448,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9481:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9426:76:4"
									},
									"returnParameters": {
										"id": 2453,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2452,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2565,
												"src": "9521:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2451,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9521:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9520:6:4"
									},
									"scope": 2723,
									"src": "9408:1093:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2574,
										"nodeType": "Block",
										"src": "10592:40:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2572,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "3130",
														"id": 2570,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10610:2:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10_by_1",
															"typeString": "int_const 10"
														},
														"value": "10"
													},
													"nodeType": "BinaryOperation",
													"operator": "**",
													"rightExpression": {
														"id": 2571,
														"name": "decimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1909,
														"src": "10616:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "10610:14:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2569,
												"id": 2573,
												"nodeType": "Return",
												"src": "10603:21:4"
											}
										]
									},
									"id": 2575,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getUnit",
									"nameLocation": "10549:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2566,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10557:2:4"
									},
									"returnParameters": {
										"id": 2569,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2568,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2575,
												"src": "10583:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2567,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10583:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10582:9:4"
									},
									"scope": 2723,
									"src": "10540:92:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2645,
										"nodeType": "Block",
										"src": "10684:430:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2585,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2580,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2577,
														"src": "10699:2:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 2583,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10713:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 2582,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10705:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2581,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10705:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 2584,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10705:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10699:16:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2590,
												"nodeType": "IfStatement",
												"src": "10695:74:4",
												"trueBody": {
													"id": 2589,
													"nodeType": "Block",
													"src": "10717:52:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 2586,
																	"name": "InvalidRecipient",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1896,
																	"src": "10739:16:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 2587,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10739:18:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2588,
															"nodeType": "RevertStatement",
															"src": "10732:25:4"
														}
													]
												}
											},
											{
												"id": 2594,
												"nodeType": "UncheckedBlock",
												"src": "10781:45:4",
												"statements": [
													{
														"expression": {
															"id": 2592,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "++",
															"prefix": false,
															"src": "10806:8:4",
															"subExpression": {
																"id": 2591,
																"name": "minted",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1915,
																"src": "10806:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2593,
														"nodeType": "ExpressionStatement",
														"src": "10806:8:4"
													}
												]
											},
											{
												"assignments": [
													2596
												],
												"declarations": [
													{
														"constant": false,
														"id": 2596,
														"mutability": "mutable",
														"name": "id",
														"nameLocation": "10846:2:4",
														"nodeType": "VariableDeclaration",
														"scope": 2645,
														"src": "10838:10:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2595,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10838:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2598,
												"initialValue": {
													"id": 2597,
													"name": "minted",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1915,
													"src": "10851:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10838:19:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2606,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"id": 2599,
															"name": "_ownerOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1944,
															"src": "10874:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 2601,
														"indexExpression": {
															"id": 2600,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2596,
															"src": "10883:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "10874:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 2604,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10898:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 2603,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10890:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2602,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10890:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 2605,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10890:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10874:26:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2611,
												"nodeType": "IfStatement",
												"src": "10870:81:4",
												"trueBody": {
													"id": 2610,
													"nodeType": "Block",
													"src": "10902:49:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 2607,
																	"name": "AlreadyExists",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1894,
																	"src": "10924:13:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 2608,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10924:15:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2609,
															"nodeType": "RevertStatement",
															"src": "10917:22:4"
														}
													]
												}
											},
											{
												"expression": {
													"id": 2616,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2612,
															"name": "_ownerOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1944,
															"src": "10963:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 2614,
														"indexExpression": {
															"id": 2613,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2596,
															"src": "10972:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10963:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2615,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2577,
														"src": "10978:2:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10963:17:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2617,
												"nodeType": "ExpressionStatement",
												"src": "10963:17:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2622,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2596,
															"src": "11007:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"baseExpression": {
																"id": 2618,
																"name": "_owned",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1950,
																"src": "10991:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
																	"typeString": "mapping(address => uint256[] storage ref)"
																}
															},
															"id": 2620,
															"indexExpression": {
																"id": 2619,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2577,
																"src": "10998:2:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10991:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																"typeString": "uint256[] storage ref"
															}
														},
														"id": 2621,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "11002:4:4",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "10991:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$attached_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
															"typeString": "function (uint256[] storage pointer,uint256)"
														}
													},
													"id": 2623,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10991:19:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2624,
												"nodeType": "ExpressionStatement",
												"src": "10991:19:4"
											},
											{
												"expression": {
													"id": 2634,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2625,
															"name": "_ownedIndex",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1955,
															"src": "11021:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 2627,
														"indexExpression": {
															"id": 2626,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2596,
															"src": "11033:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "11021:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2633,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"baseExpression": {
																	"id": 2628,
																	"name": "_owned",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1950,
																	"src": "11039:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
																		"typeString": "mapping(address => uint256[] storage ref)"
																	}
																},
																"id": 2630,
																"indexExpression": {
																	"id": 2629,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2577,
																	"src": "11046:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "11039:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																	"typeString": "uint256[] storage ref"
																}
															},
															"id": 2631,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "11050:6:4",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "11039:17:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"hexValue": "31",
															"id": 2632,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11059:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "11039:21:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11021:39:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2635,
												"nodeType": "ExpressionStatement",
												"src": "11021:39:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2639,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11095:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2638,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11087:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2637,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11087:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 2640,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11087:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2641,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2577,
															"src": "11099:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2642,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2596,
															"src": "11103:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2636,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1874,
														"src": "11078:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2643,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11078:28:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2644,
												"nodeType": "EmitStatement",
												"src": "11073:33:4"
											}
										]
									},
									"id": 2646,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "10649:5:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2578,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2577,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "10663:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 2646,
												"src": "10655:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2576,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10655:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10654:12:4"
									},
									"returnParameters": {
										"id": 2579,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10684:0:4"
									},
									"scope": 2723,
									"src": "10640:474:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2705,
										"nodeType": "Block",
										"src": "11168:327:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2656,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2651,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2648,
														"src": "11183:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 2654,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11199:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 2653,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "11191:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2652,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "11191:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 2655,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11191:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "11183:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2661,
												"nodeType": "IfStatement",
												"src": "11179:73:4",
												"trueBody": {
													"id": 2660,
													"nodeType": "Block",
													"src": "11203:49:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 2657,
																	"name": "InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1898,
																	"src": "11225:13:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 2658,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11225:15:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2659,
															"nodeType": "RevertStatement",
															"src": "11218:22:4"
														}
													]
												}
											},
											{
												"assignments": [
													2663
												],
												"declarations": [
													{
														"constant": false,
														"id": 2663,
														"mutability": "mutable",
														"name": "id",
														"nameLocation": "11272:2:4",
														"nodeType": "VariableDeclaration",
														"scope": 2705,
														"src": "11264:10:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2662,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11264:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2674,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 2664,
															"name": "_owned",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1950,
															"src": "11277:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
																"typeString": "mapping(address => uint256[] storage ref)"
															}
														},
														"id": 2666,
														"indexExpression": {
															"id": 2665,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2648,
															"src": "11284:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "11277:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
															"typeString": "uint256[] storage ref"
														}
													},
													"id": 2673,
													"indexExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2672,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"baseExpression": {
																	"id": 2667,
																	"name": "_owned",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1950,
																	"src": "11290:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
																		"typeString": "mapping(address => uint256[] storage ref)"
																	}
																},
																"id": 2669,
																"indexExpression": {
																	"id": 2668,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2648,
																	"src": "11297:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "11290:12:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																	"typeString": "uint256[] storage ref"
																}
															},
															"id": 2670,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "11303:6:4",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "11290:19:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"hexValue": "31",
															"id": 2671,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11312:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "11290:23:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "11277:37:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11264:50:4"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"baseExpression": {
																"id": 2675,
																"name": "_owned",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1950,
																"src": "11325:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
																	"typeString": "mapping(address => uint256[] storage ref)"
																}
															},
															"id": 2677,
															"indexExpression": {
																"id": 2676,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2648,
																"src": "11332:4:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "11325:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																"typeString": "uint256[] storage ref"
															}
														},
														"id": 2678,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "11338:3:4",
														"memberName": "pop",
														"nodeType": "MemberAccess",
														"src": "11325:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypop_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$returns$__$attached_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
															"typeString": "function (uint256[] storage pointer)"
														}
													},
													"id": 2679,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11325:18:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2680,
												"nodeType": "ExpressionStatement",
												"src": "11325:18:4"
											},
											{
												"expression": {
													"id": 2684,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "11354:22:4",
													"subExpression": {
														"baseExpression": {
															"id": 2681,
															"name": "_ownedIndex",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1955,
															"src": "11361:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 2683,
														"indexExpression": {
															"id": 2682,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2663,
															"src": "11373:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "11361:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2685,
												"nodeType": "ExpressionStatement",
												"src": "11354:22:4"
											},
											{
												"expression": {
													"id": 2689,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "11387:19:4",
													"subExpression": {
														"baseExpression": {
															"id": 2686,
															"name": "_ownerOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1944,
															"src": "11394:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 2688,
														"indexExpression": {
															"id": 2687,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2663,
															"src": "11403:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "11394:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2690,
												"nodeType": "ExpressionStatement",
												"src": "11387:19:4"
											},
											{
												"expression": {
													"id": 2694,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "11417:22:4",
													"subExpression": {
														"baseExpression": {
															"id": 2691,
															"name": "getApproved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1932,
															"src": "11424:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 2693,
														"indexExpression": {
															"id": 2692,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2663,
															"src": "11436:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "11424:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2695,
												"nodeType": "ExpressionStatement",
												"src": "11417:22:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2697,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2648,
															"src": "11466:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2700,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11480:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2699,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11472:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2698,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11472:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 2701,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11472:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2702,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2663,
															"src": "11484:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2696,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1874,
														"src": "11457:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2703,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11457:30:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2704,
												"nodeType": "EmitStatement",
												"src": "11452:35:4"
											}
										]
									},
									"id": 2706,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "11131:5:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2649,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2648,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "11145:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 2706,
												"src": "11137:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2647,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11137:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11136:14:4"
									},
									"returnParameters": {
										"id": 2650,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11168:0:4"
									},
									"scope": 2723,
									"src": "11122:373:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2721,
										"nodeType": "Block",
										"src": "11605:58:4",
										"statements": [
											{
												"expression": {
													"id": 2715,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2713,
														"name": "name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1903,
														"src": "11616:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2714,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2708,
														"src": "11623:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "11616:12:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 2716,
												"nodeType": "ExpressionStatement",
												"src": "11616:12:4"
											},
											{
												"expression": {
													"id": 2719,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2717,
														"name": "symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1906,
														"src": "11639:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2718,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2710,
														"src": "11648:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "11639:16:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 2720,
												"nodeType": "ExpressionStatement",
												"src": "11639:16:4"
											}
										]
									},
									"id": 2722,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setNameSymbol",
									"nameLocation": "11512:14:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2711,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2708,
												"mutability": "mutable",
												"name": "_name",
												"nameLocation": "11551:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 2722,
												"src": "11537:19:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2707,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "11537:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2710,
												"mutability": "mutable",
												"name": "_symbol",
												"nameLocation": "11581:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 2722,
												"src": "11567:21:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2709,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "11567:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11526:69:4"
									},
									"returnParameters": {
										"id": 2712,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11605:0:4"
									},
									"scope": 2723,
									"src": "11503:160:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2724,
							"src": "1933:9733:4",
							"usedErrors": [
								1733,
								1735,
								1892,
								1894,
								1896,
								1898,
								1900
							],
							"usedEvents": [
								1731,
								1858,
								1866,
								1874,
								1882,
								1890
							]
						}
					],
					"src": "39:11627:4"
				},
				"id": 4
			}
		}
	}
}